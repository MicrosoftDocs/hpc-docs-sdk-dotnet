<Overview>
  <Assemblies>
    <Assembly Name="CcpAPI" Version="1.0.2.3">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("2006")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("1.0.0640.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyKeyName("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft Compute Cluster Pack")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.None)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="HpcCommon" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.AADAuthUtil" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Azure.DataMovement" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) HPC Pack")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("HPC Pack")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en", System.Resources.UltimateResourceFallbackLocation.MainAssembly)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Azure.FileStaging.Client" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Diagnostics.Helpers" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Excel" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en-US")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Excel.Internal" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Services for Excel Base Assembly")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Services for Excel Base Assembly")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Scheduler" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.Guid("c45d10a1-54e8-420b-a052-719d47ec7c16")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Scheduler.Properties" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.Guid("7212bcd2-6b84-415c-a12f-b49a77dee393")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Scheduler.Session" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityRules(System.Security.SecurityRuleSet.Level1)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Hpc.Scheduler.Store" Version="5.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure-hpc releases/v5sp1 (e52702363) Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.1.6115.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft (R) HPC Pack 2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft (R) HPC Pack Assemblies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.ComputeCluster">
      <Type Name="Cluster" Kind="Class" />
      <Type Name="ClusterCounter" Kind="Class" />
      <Type Name="ClusterEnumerable" Kind="Class" />
      <Type Name="ComputeClusterException" Kind="Class" />
      <Type Name="ExecutionResult" Kind="Class" />
      <Type Name="ICluster" Kind="Interface" />
      <Type Name="IClusterCounter" Kind="Interface" />
      <Type Name="IClusterEnumerable" Kind="Interface" />
      <Type Name="IClusterService" Kind="Interface" />
      <Type Name="IExecutionResult" Kind="Interface" />
      <Type Name="IJob" Kind="Interface" />
      <Type Name="IJobCounter" Kind="Interface" />
      <Type Name="INameValue" Kind="Interface" />
      <Type Name="INameValueCollection" Kind="Interface" />
      <Type Name="INode" Kind="Interface" />
      <Type Name="IResourceUsage" Kind="Interface" />
      <Type Name="ITask" Kind="Interface" />
      <Type Name="Job" Kind="Class" />
      <Type Name="JobCounter" Kind="Class" />
      <Type Name="JobPriority" Kind="Enumeration" />
      <Type Name="JobStatus" Kind="Enumeration" />
      <Type Name="NameValue" Kind="Class" />
      <Type Name="NameValueCollection" Kind="Class" />
      <Type Name="Node" Kind="Class" />
      <Type Name="NodeStatus" Kind="Enumeration" />
      <Type Name="ResourceUsage" Kind="Class" />
      <Type Name="Task" Kind="Class" />
      <Type Name="TaskStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc">
      <Type Name="AadRegistryExtension" Kind="Class" />
      <Type Name="AzureEndpointRegistryExtension" Kind="Class" />
      <Type Name="AzureEnvironment" Kind="Class" />
      <Type Name="AzureEnvironment+Endpoint" Kind="Class" />
      <Type Name="AzureRmVMImageReference" Kind="Class" />
      <Type Name="BatchRegistryExtension" Kind="Class" />
      <Type Name="BinaryFormatterExtention" Kind="Class" />
      <Type Name="BoundedBackoffRetryTimer" Kind="Class" />
      <Type Name="CertificateValidationType" Kind="Enumeration" />
      <Type Name="ClusterProperty" Kind="Class" />
      <Type Name="CommonEventSource" Kind="Class" />
      <Type Name="CommonEventSource+Keywords" Kind="Class" />
      <Type Name="DomainUtil" Kind="Class" />
      <Type Name="DomainUtil+NetJoinStatus" Kind="Enumeration" />
      <Type Name="DomainUtil+SID_NAME_USE" Kind="Enumeration" />
      <Type Name="EndpointBehaviorBase" Kind="Class" />
      <Type Name="EndpointsConnectionString" Kind="Structure" />
      <Type Name="ErrorBehaviorAttribute" Kind="Class" />
      <Type Name="ExceptionHelper" Kind="Class" />
      <Type Name="ExceptionWrapper" Kind="Class" />
      <Type Name="ExceptionWrapperErrorHandler" Kind="Class" />
      <Type Name="ExponentialBackoffRetryTimer" Kind="Class" />
      <Type Name="ExponentialRandomBackoffRetryTimer" Kind="Class" />
      <Type Name="GlobalMutex" Kind="Class" />
      <Type Name="HARegistry" Kind="Class" />
      <Type Name="HpcConstants" Kind="Class" />
      <Type Name="HpcConstants+DefaultAzureDnsSuffixes" Kind="Class" />
      <Type Name="HpcContext" Kind="Class" />
      <Type Name="HpcContextExtension" Kind="Class" />
      <Type Name="HpcContextOwner" Kind="Enumeration" />
      <Type Name="HpcContextOwnerFabricContextExtension" Kind="Class" />
      <Type Name="HpcNodeRoleAbbreviation" Kind="Class" />
      <Type Name="HpcServerContextFabricContextExtension" Kind="Class" />
      <Type Name="IFabricContext" Kind="Interface" />
      <Type Name="IHpcContext" Kind="Interface" />
      <Type Name="InstantRetryTimer" Kind="Class" />
      <Type Name="IRegistry" Kind="Interface" />
      <Type Name="IServiceRegistrationStore" Kind="Interface" />
      <Type Name="ISqlConnectionStringProvider" Kind="Interface" />
      <Type Name="LegacyAzureEndpointName" Kind="Class" />
      <Type Name="LinearBackoffRetryTimer" Kind="Class" />
      <Type Name="NonHARegistry" Kind="Class" />
      <Type Name="PeriodicRetryTimer" Kind="Class" />
      <Type Name="PluginUtil" Kind="Class" />
      <Type Name="Refactor" Kind="Class" />
      <Type Name="RegistryExtension" Kind="Class" />
      <Type Name="RegistryMode" Kind="Enumeration" />
      <Type Name="RegistryProperty" Kind="Class" />
      <Type Name="RegistryValueChangedArgs`1" DisplayName="RegistryValueChangedArgs&lt;T&gt;" Kind="Class" />
      <Type Name="RegistryValueChangedArgs`1+ChangeType" DisplayName="RegistryValueChangedArgs&lt;T&gt;+ChangeType" Kind="Enumeration" />
      <Type Name="ReliableProperty" Kind="Class" />
      <Type Name="RestServiceUtil" Kind="Class" />
      <Type Name="RetryCountExhaustException" Kind="Class" />
      <Type Name="RetryManager" Kind="Class" />
      <Type Name="RetryWaitTimer" Kind="Class" />
      <Type Name="ServiceAsClientIdentityProvider" Kind="Delegate" />
      <Type Name="ServiceAsClientPrincipalProvider" Kind="Delegate" />
      <Type Name="ServiceAsClientProvider" Kind="Class" />
      <Type Name="ServiceResolverExtension" Kind="Class" />
      <Type Name="SoaRegistrationAuxModule" Kind="Class" />
      <Type Name="SqlConnectionStringProvider" Kind="Class" />
      <Type Name="SslCertBindingHelper" Kind="Class" />
      <Type Name="TaskCompletionSource" Kind="Class" />
      <Type Name="TaskExtensions" Kind="Class" />
      <Type Name="ThreadPoolMonitor" Kind="Class" />
      <Type Name="WcfChannelModule" Kind="Class" />
      <Type Name="WcfReliableClient`1" DisplayName="WcfReliableClient&lt;T&gt;" Kind="Class" />
      <Type Name="WcfServiceConstants" Kind="Class" />
      <Type Name="WindowsRegistryBase" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.AADAuthUtil">
      <Type Name="AADAuthMessageHeader" Kind="Class" />
      <Type Name="AADAuthUtil" Kind="Class" />
      <Type Name="AADClientEndpointBehavior" Kind="Class" />
      <Type Name="AADClientMessageInspector" Kind="Class" />
      <Type Name="AadPrincipalProvider" Kind="Class" />
      <Type Name="AADServiceAuthorizationManager" Kind="Class" />
      <Type Name="FileCache" Kind="Class" />
      <Type Name="HpcAADMessageFault" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.Common">
      <Type Name="HpcAzureTraceListener" Kind="Class" />
      <Type Name="RollingListener" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.DataMovement">
      <Type Name="BlobRequestOperation" Kind="Enumeration" />
      <Type Name="BlobTransferConstants" Kind="Class" />
      <Type Name="BlobTransferEntryStatus" Kind="Enumeration" />
      <Type Name="BlobTransferFileTransferEntries" Kind="Class" />
      <Type Name="BlobTransferFileTransferEntry" Kind="Class" />
      <Type Name="BlobTransferFileTransferEntryCheckPoint" Kind="Class" />
      <Type Name="BlobTransferFileTransferStatus" Kind="Class" />
      <Type Name="BlobTransferManager" Kind="Class" />
      <Type Name="BlobTransferManagerEventArgs" Kind="Class" />
      <Type Name="BlobTransferOptions" Kind="Class" />
      <Type Name="BlobTransferRecursiveTransferOptions" Kind="Class" />
      <Type Name="EntryData" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.DataMovement.BlobTransferCallbacks">
      <Type Name="BlobTransferBeforeQueueCallback" Kind="Delegate" />
      <Type Name="BlobTransferOverwritePromptCallback" Kind="Delegate" />
      <Type Name="BlobTransferRetransferModifiedFileCallback" Kind="Delegate" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.DataMovement.Exceptions">
      <Type Name="BlobTransferCallbackException" Kind="Class" />
      <Type Name="BlobTransferErrorCode" Kind="Enumeration" />
      <Type Name="BlobTransferException" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.FileStaging">
      <Type Name="FileStagingClient" Kind="Class" />
      <Type Name="FileStagingErrorCode" Kind="Enumeration" />
      <Type Name="InternalFaultDetail" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Azure.FileStaging.Client">
      <Type Name="ClusterDirectory" Kind="Class" />
      <Type Name="ClusterDirectoryInfo" Kind="Class" />
      <Type Name="ClusterFile" Kind="Class" />
      <Type Name="ClusterFileInfo" Kind="Class" />
      <Type Name="ClusterFileSystemInfo" Kind="Class" />
      <Type Name="FileStagingClientUtility" Kind="Class" />
      <Type Name="FileStagingException" Kind="Class" />
      <Type Name="IFileStagingClient" Kind="Interface" />
      <Type Name="IFileStagingClientAsync" Kind="Interface" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Diagnostics.Helpers">
      <Type Name="HtmlReportRender" Kind="Class" />
      <Type Name="StepResult" Kind="Class" />
      <Type Name="StepResult+Column" Kind="Class" />
      <Type Name="StepResult+EnvironmentVariable" Kind="Class" />
      <Type Name="StepResult+Information" Kind="Class" />
      <Type Name="StepResult+InformationType" Kind="Enumeration" />
      <Type Name="StepResult+Node" Kind="Class" />
      <Type Name="StepResult+Parameter" Kind="Class" />
      <Type Name="StepResult+ResultCode" Kind="Enumeration" />
      <Type Name="StepResult+Row" Kind="Class" />
      <Type Name="StepResult+Row+ItemByItemComparer" Kind="Class" />
      <Type Name="StepResult+RowItem" Kind="Class" />
      <Type Name="StepResult+Table" Kind="Class" />
      <Type Name="TestResult" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Excel">
      <Type Name="ExcelClient" Kind="Class" />
      <Type Name="ExcelClientException" Kind="Class" />
      <Type Name="ExcelDriver" Kind="Class" />
      <Type Name="InvocationHelper" Kind="Class" />
      <Type Name="PopupBasherConfiguration" Kind="Class" />
      <Type Name="PopupBasherConfiguration+ActionType" Kind="Enumeration" />
      <Type Name="PopupBasherConfiguration+PopupConfigChild" Kind="Class" />
      <Type Name="PopupBasherConfiguration+PopupConfigWindow" Kind="Class" />
      <Type Name="PopupBasherConfiguration+PopupConfigWindows" Kind="Class" />
      <Type Name="PopupBasherConfiguration+RoleSystem" Kind="Enumeration" />
      <Type Name="PopupBasherConfiguration+SearchMode" Kind="Enumeration" />
      <Type Name="PopupBasherSectionHandler" Kind="Class" />
      <Type Name="PopupMessage" Kind="Class" />
      <Type Name="Resources" Kind="Class" />
      <Type Name="ResponseErrorEventArgs" Kind="Class" />
      <Type Name="WorkItem" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Excel.Com">
      <Type Name="ExcelClient" Kind="Class" />
      <Type Name="IExcelClient" Kind="Interface" />
      <Type Name="IExcelClientV1" Kind="Interface" />
      <Type Name="SessionUnitType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Excel.ExcelService">
      <Type Name="CalculateCompletedEventArgs" Kind="Class" />
      <Type Name="CalculateRequest" Kind="Class" />
      <Type Name="CalculateResponse" Kind="Class" />
      <Type Name="IExcelService" Kind="Interface" />
      <Type Name="IExcelServiceChannel" Kind="Interface" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Excel.Internal">
      <Type Name="EventWriterCallback" Kind="Delegate" />
      <Type Name="HPCExcelEventProvider" Kind="Class" />
      <Type Name="Tracing" Kind="Class" />
      <Type Name="Tracing+ComponentId" Kind="Enumeration" />
      <Type Name="XlTraceLevel" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Rest">
      <Type Name="HpcAadInfoRestClient" Kind="Class" />
      <Type Name="HpcBatchRestClient" Kind="Class" />
      <Type Name="HpcRestClient" Kind="Class" />
      <Type Name="ServiceRegistrationRestClient" Kind="Class" />
      <Type Name="ServiceRegistrationRestClientHpcContextExtension" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler">
      <Type Name="CommandInfo" Kind="Class" />
      <Type Name="CommandOutputEventArg" Kind="Class" />
      <Type Name="CommandOutputHandler" Kind="Delegate" />
      <Type Name="CommandOutputType" Kind="Enumeration" />
      <Type Name="CommandRawOutputEventArg" Kind="Class" />
      <Type Name="CommandRawOutputHandler" Kind="Delegate" />
      <Type Name="CommandTaskStateEventArg" Kind="Class" />
      <Type Name="CommandTaskStateHandler" Kind="Delegate" />
      <Type Name="ConnectionEventArg" Kind="Class" />
      <Type Name="ConnectionEventCode" Kind="Enumeration" />
      <Type Name="CustomPropContainer" Kind="Class" />
      <Type Name="FilterCollection" Kind="Class" />
      <Type Name="ICommandInfo" Kind="Interface" />
      <Type Name="ICommandOutputEventArg" Kind="Interface" />
      <Type Name="ICommandRawOutputEventArg" Kind="Interface" />
      <Type Name="ICommandTaskStateEventArg" Kind="Interface" />
      <Type Name="IConnectionEventArg" Kind="Interface" />
      <Type Name="IFilterCollection" Kind="Interface" />
      <Type Name="IIntCollection" Kind="Interface" />
      <Type Name="IJobStateEventArg" Kind="Interface" />
      <Type Name="INameValue" Kind="Interface" />
      <Type Name="INameValueCollection" Kind="Interface" />
      <Type Name="INodeReachableEventArg" Kind="Interface" />
      <Type Name="INodeStateEventArg" Kind="Interface" />
      <Type Name="IntCollection" Kind="Class" />
      <Type Name="IPropertyIdCollection" Kind="Interface" />
      <Type Name="IRemoteCommand" Kind="Interface" />
      <Type Name="IRemoteCommandEvents" Kind="Interface" />
      <Type Name="IScheduler" Kind="Interface" />
      <Type Name="ISchedulerCollection" Kind="Interface" />
      <Type Name="ISchedulerCore" Kind="Interface" />
      <Type Name="ISchedulerCounters" Kind="Interface" />
      <Type Name="ISchedulerJob" Kind="Interface" />
      <Type Name="ISchedulerJobCounters" Kind="Interface" />
      <Type Name="ISchedulerJobEvents" Kind="Interface" />
      <Type Name="ISchedulerJobV2" Kind="Interface" />
      <Type Name="ISchedulerJobV3" Kind="Interface" />
      <Type Name="ISchedulerJobV3SP1" Kind="Interface" />
      <Type Name="ISchedulerJobV3SP2" Kind="Interface" />
      <Type Name="ISchedulerJobV3SP3" Kind="Interface" />
      <Type Name="ISchedulerJobV4" Kind="Interface" />
      <Type Name="ISchedulerJobV4SP1" Kind="Interface" />
      <Type Name="ISchedulerJobV4SP2" Kind="Interface" />
      <Type Name="ISchedulerJobV4SP3" Kind="Interface" />
      <Type Name="ISchedulerNode" Kind="Interface" />
      <Type Name="ISchedulerNodeCounters" Kind="Interface" />
      <Type Name="ISchedulerNodeEvents" Kind="Interface" />
      <Type Name="ISchedulerNodeReachableEvents" Kind="Interface" />
      <Type Name="ISchedulerNodeV2" Kind="Interface" />
      <Type Name="ISchedulerNodeV3" Kind="Interface" />
      <Type Name="ISchedulerNodeV3SP1" Kind="Interface" />
      <Type Name="ISchedulerNodeV3SP2" Kind="Interface" />
      <Type Name="ISchedulerPool" Kind="Interface" />
      <Type Name="ISchedulerRowEnumerator" Kind="Interface" />
      <Type Name="ISchedulerRowSet" Kind="Interface" />
      <Type Name="ISchedulerTask" Kind="Interface" />
      <Type Name="ISchedulerTaskCounters" Kind="Interface" />
      <Type Name="ISchedulerTaskV2" Kind="Interface" />
      <Type Name="ISchedulerTaskV3" Kind="Interface" />
      <Type Name="ISchedulerTaskV3SP1" Kind="Interface" />
      <Type Name="ISchedulerTaskV4" Kind="Interface" />
      <Type Name="ISchedulerTaskV4SP1" Kind="Interface" />
      <Type Name="ISchedulerTaskV4SP3" Kind="Interface" />
      <Type Name="ISchedulerV2" Kind="Interface" />
      <Type Name="ISchedulerV3" Kind="Interface" />
      <Type Name="ISchedulerV3SP2" Kind="Interface" />
      <Type Name="ISchedulerV3SP3" Kind="Interface" />
      <Type Name="ISchedulerV3SP4" Kind="Interface" />
      <Type Name="ISchedulerV4" Kind="Interface" />
      <Type Name="ISchedulerV4SP1" Kind="Interface" />
      <Type Name="ISchedulerV4SP3" Kind="Interface" />
      <Type Name="IServerVersion" Kind="Interface" />
      <Type Name="ISortCollection" Kind="Interface" />
      <Type Name="IStringCollection" Kind="Interface" />
      <Type Name="ITaskStateEventArg" Kind="Interface" />
      <Type Name="JobStateEventArg" Kind="Class" />
      <Type Name="JobStateHandler" Kind="Delegate" />
      <Type Name="JobTemplateInfo" Kind="Class" />
      <Type Name="NameValue" Kind="Class" />
      <Type Name="NameValueCollection" Kind="Class" />
      <Type Name="NodeReachableEventArg" Kind="Class" />
      <Type Name="NodeReachableHandler" Kind="Delegate" />
      <Type Name="NodeStateEventArg" Kind="Class" />
      <Type Name="NodeStateHandler" Kind="Delegate" />
      <Type Name="PropertyIdCollection" Kind="Class" />
      <Type Name="PropId" Kind="Enumeration" />
      <Type Name="ReconnectHandler" Kind="Delegate" />
      <Type Name="RemoteCommand" Kind="Class" />
      <Type Name="Scheduler" Kind="Class" />
      <Type Name="SchedulerCollection`1" DisplayName="SchedulerCollection&lt;T&gt;" Kind="Class" />
      <Type Name="SchedulerConnectionContext" Kind="Class" />
      <Type Name="SchedulerCore" Kind="Class" />
      <Type Name="SchedulerCoreState" Kind="Enumeration" />
      <Type Name="SchedulerCounters" Kind="Class" />
      <Type Name="SchedulerJob" Kind="Class" />
      <Type Name="SchedulerJobCounters" Kind="Class" />
      <Type Name="SchedulerNode" Kind="Class" />
      <Type Name="SchedulerNodeCounters" Kind="Class" />
      <Type Name="SchedulerObjectBase" Kind="Class" />
      <Type Name="SchedulerPool" Kind="Class" />
      <Type Name="SchedulerTask" Kind="Class" />
      <Type Name="SchedulerTaskCounters" Kind="Class" />
      <Type Name="ServerVersion" Kind="Class" />
      <Type Name="SortCollection" Kind="Class" />
      <Type Name="StringCollection" Kind="Class" />
      <Type Name="TaskStateEventArg" Kind="Class" />
      <Type Name="TaskStateHandler" Kind="Delegate" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.AddInFilter.HpcClient">
      <Type Name="ActivationFilterResponse" Kind="Enumeration" />
      <Type Name="IActivationFilter" Kind="Interface" />
      <Type Name="IFilterLifespan" Kind="Interface" />
      <Type Name="ISubmissionFilter" Kind="Interface" />
      <Type Name="SubmissionFilterResponse" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.AddInFilter.HpcServer">
      <Type Name="ActivationFilterResponseInternal" Kind="Enumeration" />
      <Type Name="AddInFilterBase" Kind="Class" />
      <Type Name="AddInFilterDemandLoad" Kind="Class" />
      <Type Name="AddInFilterTimeBoundedCallException" Kind="Class" />
      <Type Name="IActivationFilterInternal" Kind="Interface" />
      <Type Name="IAddInFilter" Kind="Interface" />
      <Type Name="IAddInFilterFactory" Kind="Interface" />
      <Type Name="ISubmissionFilterInternal" Kind="Interface" />
      <Type Name="ReflectionHelper" Kind="Class" />
      <Type Name="SubmissionFilterResponseInternal" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Properties">
      <Type Name="AffinityMode" Kind="Enumeration" />
      <Type Name="AggregateColumn" Kind="Class" />
      <Type Name="AggregateOperation" Kind="Enumeration" />
      <Type Name="AllocationProperties" Kind="Class" />
      <Type Name="AzureDeploymentPropertyIds" Kind="Class" />
      <Type Name="CancelRequest" Kind="Enumeration" />
      <Type Name="ConnectMethod" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Class" />
      <Type Name="ErrorCode+Category" Kind="Enumeration" />
      <Type Name="EventType" Kind="Enumeration" />
      <Type Name="ExpandedPriority" Kind="Class" />
      <Type Name="FailureReason" Kind="Enumeration" />
      <Type Name="FilterOperator" Kind="Enumeration" />
      <Type Name="FilterProperty" Kind="Class" />
      <Type Name="GpuInfo" Kind="Class" />
      <Type Name="HpcSoftCardPolicy" Kind="Enumeration" />
      <Type Name="IFilterProperty" Kind="Interface" />
      <Type Name="IJobOrderByList" Kind="Interface" />
      <Type Name="ISortProperty" Kind="Interface" />
      <Type Name="ITaskId" Kind="Interface" />
      <Type Name="JobEvent" Kind="Enumeration" />
      <Type Name="JobHistoryPropertyIds" Kind="Class" />
      <Type Name="JobMessagePropertyIds" Kind="Class" />
      <Type Name="JobMessageType" Kind="Enumeration" />
      <Type Name="JobNodeGroupOp" Kind="Enumeration" />
      <Type Name="JobOrderBy" Kind="Class" />
      <Type Name="JobOrderBy+OrderByProperty" Kind="Enumeration" />
      <Type Name="JobOrderBy+SortOrder" Kind="Enumeration" />
      <Type Name="JobOrderByList" Kind="Class" />
      <Type Name="JobPriority" Kind="Enumeration" />
      <Type Name="JobPropertyIds" Kind="Class" />
      <Type Name="JobRuntimeType" Kind="Enumeration" />
      <Type Name="JobState" Kind="Enumeration" />
      <Type Name="JobTemplatePropertyIds" Kind="Class" />
      <Type Name="JobTemplateRights" Kind="Enumeration" />
      <Type Name="JobType" Kind="Enumeration" />
      <Type Name="JobUnitType" Kind="Enumeration" />
      <Type Name="NetworkInfo" Kind="Class" />
      <Type Name="NodeAvailability" Kind="Enumeration" />
      <Type Name="NodeEvent" Kind="Enumeration" />
      <Type Name="NodeGroup" Kind="Class" />
      <Type Name="NodeHistoryPropertyIds" Kind="Class" />
      <Type Name="NodeLocation" Kind="Enumeration" />
      <Type Name="NodePropertyIds" Kind="Class" />
      <Type Name="NodeState" Kind="Enumeration" />
      <Type Name="ObjectType" Kind="Enumeration" />
      <Type Name="PendingReason" Kind="Class" />
      <Type Name="PendingReason+ReasonCode" Kind="Enumeration" />
      <Type Name="PoolPropertyIds" Kind="Class" />
      <Type Name="PreemptionMode" Kind="Enumeration" />
      <Type Name="PriorityBias" Kind="Enumeration" />
      <Type Name="PropertyError" Kind="Enumeration" />
      <Type Name="PropertyId" Kind="Class" />
      <Type Name="PropertyRow" Kind="Class" />
      <Type Name="PropertyRowEnumerator" Kind="Class" />
      <Type Name="PropertyRowSet" Kind="Class" />
      <Type Name="PropFlags" Kind="Enumeration" />
      <Type Name="ResourceJobPhase" Kind="Enumeration" />
      <Type Name="ResourcePropertyIds" Kind="Class" />
      <Type Name="ResourceState" Kind="Enumeration" />
      <Type Name="SchedulerException" Kind="Class" />
      <Type Name="SchedulingMode" Kind="Enumeration" />
      <Type Name="ShrinkRequest" Kind="Enumeration" />
      <Type Name="SortProperty" Kind="Class" />
      <Type Name="SortProperty+SortOrder" Kind="Enumeration" />
      <Type Name="StandardServiceAsClientIdentityProviders" Kind="Class" />
      <Type Name="StoreProperty" Kind="Class" />
      <Type Name="StorePropertyExtensions" Kind="Class" />
      <Type Name="StorePropertyIds" Kind="Class" />
      <Type Name="StorePropertyType" Kind="Enumeration" />
      <Type Name="TaskGroupPropertyIds" Kind="Class" />
      <Type Name="TaskId" Kind="Class" />
      <Type Name="TaskPropertyIds" Kind="Class" />
      <Type Name="TaskState" Kind="Enumeration" />
      <Type Name="TaskType" Kind="Enumeration" />
      <Type Name="UserPrivilege" Kind="Enumeration" />
      <Type Name="UserRoles" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session">
      <Type Name="AuthenticationFailure" Kind="Class" />
      <Type Name="BrokerClient`1" DisplayName="BrokerClient&lt;TContract&gt;" Kind="Class" />
      <Type Name="BrokerClientBase" Kind="Class" />
      <Type Name="BrokerClientBehaviors" Kind="Enumeration" />
      <Type Name="BrokerRecoverInfo" Kind="Class" />
      <Type Name="BrokerResponse`1" DisplayName="BrokerResponse&lt;TMessage&gt;" Kind="Class" />
      <Type Name="BrokerResponseEnumerator`1" DisplayName="BrokerResponseEnumerator&lt;TMessage&gt;" Kind="Class" />
      <Type Name="BrokerResponseHandler`1" DisplayName="BrokerResponseHandler&lt;TMessage&gt;" Kind="Delegate" />
      <Type Name="BrokerResponseStateHandler`1" DisplayName="BrokerResponseStateHandler&lt;TMessage&gt;" Kind="Delegate" />
      <Type Name="ChannelTypes" Kind="Enumeration" />
      <Type Name="ClientCredExtension" Kind="Class" />
      <Type Name="ConnectionInfoExtension" Kind="Class" />
      <Type Name="CredUtil" Kind="Class" />
      <Type Name="DurableSession" Kind="Class" />
      <Type Name="HpcTraceListener" Kind="Class" />
      <Type Name="RetryOperationError" Kind="Class" />
      <Type Name="RetryOperationException" Kind="Class" />
      <Type Name="ServiceContext" Kind="Class" />
      <Type Name="Session" Kind="Class" />
      <Type Name="SessionAttachInfo" Kind="Class" />
      <Type Name="SessionAttachInfoBase" Kind="Class" />
      <Type Name="SessionBase" Kind="Class" />
      <Type Name="SessionException" Kind="Class" />
      <Type Name="SessionIdentityImpersonation" Kind="Class" />
      <Type Name="SessionInitInfoBase" Kind="Class" />
      <Type Name="SessionStartInfo" Kind="Class" />
      <Type Name="SessionStartInfo+BrokerSettingsInfo" Kind="Class" />
      <Type Name="SessionStartInfoBase" Kind="Class" />
      <Type Name="SessionUnitType" Kind="Enumeration" />
      <Type Name="SOAEventArgs" Kind="Class" />
      <Type Name="SOAFaultCode" Kind="Class" />
      <Type Name="SOAFaultCodeCategory" Kind="Enumeration" />
      <Type Name="TransportScheme" Kind="Enumeration" />
      <Type Name="WinServiceHpcContextModule" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.Configuration">
      <Type Name="BrokerConfigurations" Kind="Class" />
      <Type Name="BrokerMonitorConfiguration" Kind="Class" />
      <Type Name="BrokerServicesConfiguration" Kind="Class" />
      <Type Name="CustomBrokerRegistration" Kind="Class" />
      <Type Name="DebugModeSection" Kind="Class" />
      <Type Name="EprCollection" Kind="Class" />
      <Type Name="EprElement" Kind="Class" />
      <Type Name="HostConfiguration" Kind="Class" />
      <Type Name="HostConfiguration+HostType" Kind="Enumeration" />
      <Type Name="LoadBalancingConfiguration" Kind="Class" />
      <Type Name="ServiceArch" Kind="Enumeration" />
      <Type Name="ServiceConfiguration" Kind="Class" />
      <Type Name="ServiceRegistration" Kind="Class" />
      <Type Name="SessionConfigurations" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.Data">
      <Type Name="DataClient" Kind="Class" />
      <Type Name="DataErrorCode" Kind="Class" />
      <Type Name="DataException" Kind="Class" />
      <Type Name="DataLifeCycle" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.Data.Internal">
      <Type Name="DataClientInfo" Kind="Class" />
      <Type Name="DataFault" Kind="Class" />
      <Type Name="DataLifeCycleContext" Kind="Class" />
      <Type Name="DataLifeCycleInternal" Kind="Class" />
      <Type Name="DataLifeCycleType" Kind="Enumeration" />
      <Type Name="DataLocation" Kind="Enumeration" />
      <Type Name="DataServerInfo" Kind="Class" />
      <Type Name="SessionBasedDataLifeCycleContext" Kind="Class" />
      <Type Name="Utility" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.GenericService">
      <Type Name="GenericServiceClient" Kind="Class" />
      <Type Name="GenericServiceRequest" Kind="Class" />
      <Type Name="GenericServiceResponse" Kind="Class" />
      <Type Name="IGenericService" Kind="Interface" />
      <Type Name="IGenericServiceAsync" Kind="Interface" />
      <Type Name="IGenericServiceV3" Kind="Interface" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.Interface">
      <Type Name="BrokerClientStatus" Kind="Enumeration" />
      <Type Name="BrokerInitializationResult" Kind="Class" />
      <Type Name="BrokerInstanceUnavailable" Kind="Class" />
      <Type Name="EndOfResponsesReason" Kind="Enumeration" />
      <Type Name="IBrokerEntry" Kind="Interface" />
      <Type Name="IBrokerFrontend" Kind="Interface" />
      <Type Name="IConnectionInfo" Kind="Interface" />
      <Type Name="IHpcServiceHost" Kind="Interface" />
      <Type Name="ISchedulerAdapter" Kind="Interface" />
      <Type Name="ISchedulerNotify" Kind="Interface" />
      <Type Name="ISchedulerNotifyAsync" Kind="Interface" />
      <Type Name="TaskInfo" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Session.Internal">
      <Type Name="AzureQueueMessageItem" Kind="Class" />
      <Type Name="BrokerAuthorization" Kind="Class" />
      <Type Name="BrokerResponseMessages" Kind="Class" />
      <Type Name="BrokerShimExitCode" Kind="Enumeration" />
      <Type Name="BrokerStartInfo" Kind="Class" />
      <Type Name="ClusterInfoContract" Kind="Class" />
      <Type Name="EndOfResponses" Kind="Class" />
      <Type Name="GetResponsePosition" Kind="Enumeration" />
      <Type Name="IController" Kind="Interface" />
      <Type Name="IResponseService" Kind="Interface" />
      <Type Name="IResponseServiceCallback" Kind="Interface" />
      <Type Name="ISchedulerAdapterInternal" Kind="Interface" />
      <Type Name="ISessionUserAuthenticator" Kind="Interface" />
      <Type Name="SessionAllocateInfoContract" Kind="Class" />
      <Type Name="SessionFault" Kind="Class" />
      <Type Name="SessionInfo" Kind="Class" />
      <Type Name="SessionInfoBase" Kind="Class" />
      <Type Name="SessionInfoContract" Kind="Class" />
      <Type Name="SessionStartInfoContract" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.Scheduler.Store">
      <Type Name="__MIDL___MIDL_itf_certenroll_0000_0069_0001" Kind="Enumeration" />
      <Type Name="ActiveHeadNodeRequestHandler" Kind="Delegate" />
      <Type Name="AlgorithmFlags" Kind="Enumeration" />
      <Type Name="AlgorithmOperationFlags" Kind="Enumeration" />
      <Type Name="AlgorithmType" Kind="Enumeration" />
      <Type Name="AlternativeNameType" Kind="Enumeration" />
      <Type Name="AsyncResult" Kind="Class" />
      <Type Name="CallResult" Kind="Class" />
      <Type Name="CAlternativeName" Kind="Interface" />
      <Type Name="CAlternativeNameClass" Kind="Class" />
      <Type Name="CAlternativeNames" Kind="Interface" />
      <Type Name="CAlternativeNamesClass" Kind="Class" />
      <Type Name="CBinaryConverter" Kind="Interface" />
      <Type Name="CBinaryConverterClass" Kind="Class" />
      <Type Name="CCertificatePolicies" Kind="Interface" />
      <Type Name="CCertificatePoliciesClass" Kind="Class" />
      <Type Name="CCertificatePolicy" Kind="Interface" />
      <Type Name="CCertificatePolicyClass" Kind="Class" />
      <Type Name="CCertProperties" Kind="Interface" />
      <Type Name="CCertPropertiesClass" Kind="Class" />
      <Type Name="CCertProperty" Kind="Interface" />
      <Type Name="CCertPropertyArchived" Kind="Interface" />
      <Type Name="CCertPropertyArchivedClass" Kind="Class" />
      <Type Name="CCertPropertyArchivedKeyHash" Kind="Interface" />
      <Type Name="CCertPropertyArchivedKeyHashClass" Kind="Class" />
      <Type Name="CCertPropertyAutoEnroll" Kind="Interface" />
      <Type Name="CCertPropertyAutoEnrollClass" Kind="Class" />
      <Type Name="CCertPropertyBackedUp" Kind="Interface" />
      <Type Name="CCertPropertyBackedUpClass" Kind="Class" />
      <Type Name="CCertPropertyClass" Kind="Class" />
      <Type Name="CCertPropertyDescription" Kind="Interface" />
      <Type Name="CCertPropertyDescriptionClass" Kind="Class" />
      <Type Name="CCertPropertyEnrollment" Kind="Interface" />
      <Type Name="CCertPropertyEnrollmentClass" Kind="Class" />
      <Type Name="CCertPropertyEnrollmentPolicyServer" Kind="Interface" />
      <Type Name="CCertPropertyEnrollmentPolicyServerClass" Kind="Class" />
      <Type Name="CCertPropertyFriendlyName" Kind="Interface" />
      <Type Name="CCertPropertyFriendlyNameClass" Kind="Class" />
      <Type Name="CCertPropertyKeyProvInfo" Kind="Interface" />
      <Type Name="CCertPropertyKeyProvInfoClass" Kind="Class" />
      <Type Name="CCertPropertyRenewal" Kind="Interface" />
      <Type Name="CCertPropertyRenewalClass" Kind="Class" />
      <Type Name="CCertPropertyRequestOriginator" Kind="Interface" />
      <Type Name="CCertPropertyRequestOriginatorClass" Kind="Class" />
      <Type Name="CCertPropertySHA1Hash" Kind="Interface" />
      <Type Name="CCertPropertySHA1HashClass" Kind="Class" />
      <Type Name="CCryptAttribute" Kind="Interface" />
      <Type Name="CCryptAttributeClass" Kind="Class" />
      <Type Name="CCryptAttributes" Kind="Interface" />
      <Type Name="CCryptAttributesClass" Kind="Class" />
      <Type Name="CCspInformation" Kind="Interface" />
      <Type Name="CCspInformationClass" Kind="Class" />
      <Type Name="CCspInformations" Kind="Interface" />
      <Type Name="CCspInformationsClass" Kind="Class" />
      <Type Name="CCspStatus" Kind="Interface" />
      <Type Name="CCspStatusClass" Kind="Class" />
      <Type Name="CERTENROLL_OBJECTID" Kind="Enumeration" />
      <Type Name="CERTENROLL_PROPERTYID" Kind="Enumeration" />
      <Type Name="ClusterConfigChangeDelegate" Kind="Delegate" />
      <Type Name="ClusterJobProfileItem" Kind="Class" />
      <Type Name="CObjectId" Kind="Interface" />
      <Type Name="CObjectIdClass" Kind="Class" />
      <Type Name="CObjectIds" Kind="Interface" />
      <Type Name="CObjectIdsClass" Kind="Class" />
      <Type Name="CommitTemplateFlags" Kind="Enumeration" />
      <Type Name="ConnectionRole" Kind="Enumeration" />
      <Type Name="ConnectionToken" Kind="Class" />
      <Type Name="CPolicyQualifier" Kind="Interface" />
      <Type Name="CPolicyQualifierClass" Kind="Class" />
      <Type Name="CPolicyQualifiers" Kind="Interface" />
      <Type Name="CPolicyQualifiersClass" Kind="Class" />
      <Type Name="CSignerCertificate" Kind="Interface" />
      <Type Name="CSignerCertificateClass" Kind="Class" />
      <Type Name="CSmimeCapabilities" Kind="Interface" />
      <Type Name="CSmimeCapabilitiesClass" Kind="Class" />
      <Type Name="CSmimeCapability" Kind="Interface" />
      <Type Name="CSmimeCapabilityClass" Kind="Class" />
      <Type Name="CX500DistinguishedName" Kind="Interface" />
      <Type Name="CX500DistinguishedNameClass" Kind="Class" />
      <Type Name="CX509Attribute" Kind="Interface" />
      <Type Name="CX509AttributeArchiveKey" Kind="Interface" />
      <Type Name="CX509AttributeArchiveKeyClass" Kind="Class" />
      <Type Name="CX509AttributeArchiveKeyHash" Kind="Interface" />
      <Type Name="CX509AttributeArchiveKeyHashClass" Kind="Class" />
      <Type Name="CX509AttributeClass" Kind="Class" />
      <Type Name="CX509AttributeClientId" Kind="Interface" />
      <Type Name="CX509AttributeClientIdClass" Kind="Class" />
      <Type Name="CX509AttributeCspProvider" Kind="Interface" />
      <Type Name="CX509AttributeCspProviderClass" Kind="Class" />
      <Type Name="CX509AttributeExtensions" Kind="Interface" />
      <Type Name="CX509AttributeExtensionsClass" Kind="Class" />
      <Type Name="CX509AttributeOSVersion" Kind="Interface" />
      <Type Name="CX509AttributeOSVersionClass" Kind="Class" />
      <Type Name="CX509AttributeRenewalCertificate" Kind="Interface" />
      <Type Name="CX509AttributeRenewalCertificateClass" Kind="Class" />
      <Type Name="CX509Attributes" Kind="Interface" />
      <Type Name="CX509AttributesClass" Kind="Class" />
      <Type Name="CX509CertificateRequestCertificate" Kind="Interface" />
      <Type Name="CX509CertificateRequestCertificateClass" Kind="Class" />
      <Type Name="CX509CertificateRequestCmc" Kind="Interface" />
      <Type Name="CX509CertificateRequestCmcClass" Kind="Class" />
      <Type Name="CX509CertificateRequestPkcs10" Kind="Interface" />
      <Type Name="CX509CertificateRequestPkcs10Class" Kind="Class" />
      <Type Name="CX509CertificateRequestPkcs7" Kind="Interface" />
      <Type Name="CX509CertificateRequestPkcs7Class" Kind="Class" />
      <Type Name="CX509CertificateTemplateADWritable" Kind="Interface" />
      <Type Name="CX509CertificateTemplateADWritableClass" Kind="Class" />
      <Type Name="CX509Enrollment" Kind="Interface" />
      <Type Name="CX509EnrollmentClass" Kind="Class" />
      <Type Name="CX509EnrollmentHelper" Kind="Interface" />
      <Type Name="CX509EnrollmentHelperClass" Kind="Class" />
      <Type Name="CX509EnrollmentPolicyActiveDirectory" Kind="Interface" />
      <Type Name="CX509EnrollmentPolicyActiveDirectoryClass" Kind="Class" />
      <Type Name="CX509EnrollmentPolicyWebService" Kind="Interface" />
      <Type Name="CX509EnrollmentPolicyWebServiceClass" Kind="Class" />
      <Type Name="CX509EnrollmentWebClassFactory" Kind="Interface" />
      <Type Name="CX509EnrollmentWebClassFactoryClass" Kind="Class" />
      <Type Name="CX509Extension" Kind="Interface" />
      <Type Name="CX509ExtensionAlternativeNames" Kind="Interface" />
      <Type Name="CX509ExtensionAlternativeNamesClass" Kind="Class" />
      <Type Name="CX509ExtensionAuthorityKeyIdentifier" Kind="Interface" />
      <Type Name="CX509ExtensionAuthorityKeyIdentifierClass" Kind="Class" />
      <Type Name="CX509ExtensionBasicConstraints" Kind="Interface" />
      <Type Name="CX509ExtensionBasicConstraintsClass" Kind="Class" />
      <Type Name="CX509ExtensionCertificatePolicies" Kind="Interface" />
      <Type Name="CX509ExtensionCertificatePoliciesClass" Kind="Class" />
      <Type Name="CX509ExtensionClass" Kind="Class" />
      <Type Name="CX509ExtensionEnhancedKeyUsage" Kind="Interface" />
      <Type Name="CX509ExtensionEnhancedKeyUsageClass" Kind="Class" />
      <Type Name="CX509ExtensionKeyUsage" Kind="Interface" />
      <Type Name="CX509ExtensionKeyUsageClass" Kind="Class" />
      <Type Name="CX509ExtensionMSApplicationPolicies" Kind="Interface" />
      <Type Name="CX509ExtensionMSApplicationPoliciesClass" Kind="Class" />
      <Type Name="CX509Extensions" Kind="Interface" />
      <Type Name="CX509ExtensionsClass" Kind="Class" />
      <Type Name="CX509ExtensionSmimeCapabilities" Kind="Interface" />
      <Type Name="CX509ExtensionSmimeCapabilitiesClass" Kind="Class" />
      <Type Name="CX509ExtensionSubjectKeyIdentifier" Kind="Interface" />
      <Type Name="CX509ExtensionSubjectKeyIdentifierClass" Kind="Class" />
      <Type Name="CX509ExtensionTemplate" Kind="Interface" />
      <Type Name="CX509ExtensionTemplateClass" Kind="Class" />
      <Type Name="CX509ExtensionTemplateName" Kind="Interface" />
      <Type Name="CX509ExtensionTemplateNameClass" Kind="Class" />
      <Type Name="CX509MachineEnrollmentFactory" Kind="Interface" />
      <Type Name="CX509MachineEnrollmentFactoryClass" Kind="Class" />
      <Type Name="CX509NameValuePair" Kind="Interface" />
      <Type Name="CX509NameValuePairClass" Kind="Class" />
      <Type Name="CX509PolicyServerListManager" Kind="Interface" />
      <Type Name="CX509PolicyServerListManagerClass" Kind="Class" />
      <Type Name="CX509PolicyServerUrl" Kind="Interface" />
      <Type Name="CX509PolicyServerUrlClass" Kind="Class" />
      <Type Name="CX509PrivateKey" Kind="Interface" />
      <Type Name="CX509PrivateKeyClass" Kind="Class" />
      <Type Name="CX509PublicKey" Kind="Interface" />
      <Type Name="CX509PublicKeyClass" Kind="Class" />
      <Type Name="EncodingType" Kind="Enumeration" />
      <Type Name="Enroll" Kind="Class" />
      <Type Name="EnrollmentCAProperty" Kind="Enumeration" />
      <Type Name="EnrollmentDisplayStatus" Kind="Enumeration" />
      <Type Name="EnrollmentEnrollStatus" Kind="Enumeration" />
      <Type Name="EnrollmentPolicyServerPropertyFlags" Kind="Enumeration" />
      <Type Name="EnrollmentSelectionStatus" Kind="Enumeration" />
      <Type Name="EnrollmentTemplateProperty" Kind="Enumeration" />
      <Type Name="EventFormatter" Kind="Class" />
      <Type Name="HpcContextExtension" Kind="Class" />
      <Type Name="IAllocationRowSet" Kind="Interface" />
      <Type Name="IAlternativeName" Kind="Interface" />
      <Type Name="IAlternativeNames" Kind="Interface" />
      <Type Name="IBinaryConverter" Kind="Interface" />
      <Type Name="ICertificatePolicies" Kind="Interface" />
      <Type Name="ICertificatePolicy" Kind="Interface" />
      <Type Name="ICertificationAuthorities" Kind="Interface" />
      <Type Name="ICertificationAuthority" Kind="Interface" />
      <Type Name="ICertProperties" Kind="Interface" />
      <Type Name="ICertProperty" Kind="Interface" />
      <Type Name="ICertPropertyArchived" Kind="Interface" />
      <Type Name="ICertPropertyArchivedKeyHash" Kind="Interface" />
      <Type Name="ICertPropertyAutoEnroll" Kind="Interface" />
      <Type Name="ICertPropertyBackedUp" Kind="Interface" />
      <Type Name="ICertPropertyDescription" Kind="Interface" />
      <Type Name="ICertPropertyEnrollment" Kind="Interface" />
      <Type Name="ICertPropertyEnrollmentPolicyServer" Kind="Interface" />
      <Type Name="ICertPropertyFriendlyName" Kind="Interface" />
      <Type Name="ICertPropertyKeyProvInfo" Kind="Interface" />
      <Type Name="ICertPropertyRenewal" Kind="Interface" />
      <Type Name="ICertPropertyRequestOriginator" Kind="Interface" />
      <Type Name="ICertPropertySHA1Hash" Kind="Interface" />
      <Type Name="IClusterAllocation" Kind="Interface" />
      <Type Name="IClusterJob" Kind="Interface" />
      <Type Name="IClusterJobProfile" Kind="Interface" />
      <Type Name="IClusterNode" Kind="Interface" />
      <Type Name="IClusterPool" Kind="Interface" />
      <Type Name="IClusterResource" Kind="Interface" />
      <Type Name="IClusterStoreObject" Kind="Interface" />
      <Type Name="IClusterStoreTransaction" Kind="Interface" />
      <Type Name="IClusterTask" Kind="Interface" />
      <Type Name="IClusterTaskGroup" Kind="Interface" />
      <Type Name="ICryptAttribute" Kind="Interface" />
      <Type Name="ICryptAttributes" Kind="Interface" />
      <Type Name="ICspAlgorithm" Kind="Interface" />
      <Type Name="ICspAlgorithms" Kind="Interface" />
      <Type Name="ICspInformation" Kind="Interface" />
      <Type Name="ICspInformations" Kind="Interface" />
      <Type Name="ICspStatus" Kind="Interface" />
      <Type Name="ICspStatuses" Kind="Interface" />
      <Type Name="IJobMessageRowSet" Kind="Interface" />
      <Type Name="IJobProfileRowSet" Kind="Interface" />
      <Type Name="IJobRowSet" Kind="Interface" />
      <Type Name="InnerRequestLevel" Kind="Enumeration" />
      <Type Name="INodeRowSet" Kind="Interface" />
      <Type Name="InstallResponseRestrictionFlags" Kind="Enumeration" />
      <Type Name="IObjectId" Kind="Interface" />
      <Type Name="IObjectIds" Kind="Interface" />
      <Type Name="IPolicyQualifier" Kind="Interface" />
      <Type Name="IPolicyQualifiers" Kind="Interface" />
      <Type Name="IPoolRowSet" Kind="Interface" />
      <Type Name="IResourceRowSet" Kind="Interface" />
      <Type Name="IRowEnumerator" Kind="Interface" />
      <Type Name="IRowSet" Kind="Interface" />
      <Type Name="IRowSetEx" Kind="Interface" />
      <Type Name="ISchedulerStore" Kind="Interface" />
      <Type Name="ISchedulerStoreInternal" Kind="Interface" />
      <Type Name="ISignerCertificate" Kind="Interface" />
      <Type Name="ISignerCertificates" Kind="Interface" />
      <Type Name="ISmimeCapabilities" Kind="Interface" />
      <Type Name="ISmimeCapability" Kind="Interface" />
      <Type Name="IStoreManager" Kind="Interface" />
      <Type Name="ITaskGroupRowSet" Kind="Interface" />
      <Type Name="ITaskRowSet" Kind="Interface" />
      <Type Name="IX500DistinguishedName" Kind="Interface" />
      <Type Name="IX509Attribute" Kind="Interface" />
      <Type Name="IX509AttributeArchiveKey" Kind="Interface" />
      <Type Name="IX509AttributeArchiveKeyHash" Kind="Interface" />
      <Type Name="IX509AttributeClientId" Kind="Interface" />
      <Type Name="IX509AttributeCspProvider" Kind="Interface" />
      <Type Name="IX509AttributeExtensions" Kind="Interface" />
      <Type Name="IX509AttributeOSVersion" Kind="Interface" />
      <Type Name="IX509AttributeRenewalCertificate" Kind="Interface" />
      <Type Name="IX509Attributes" Kind="Interface" />
      <Type Name="IX509CertificateRequest" Kind="Interface" />
      <Type Name="IX509CertificateRequestCertificate" Kind="Interface" />
      <Type Name="IX509CertificateRequestCertificate2" Kind="Interface" />
      <Type Name="IX509CertificateRequestCmc" Kind="Interface" />
      <Type Name="IX509CertificateRequestCmc2" Kind="Interface" />
      <Type Name="IX509CertificateRequestPkcs10" Kind="Interface" />
      <Type Name="IX509CertificateRequestPkcs10V2" Kind="Interface" />
      <Type Name="IX509CertificateRequestPkcs7" Kind="Interface" />
      <Type Name="IX509CertificateRequestPkcs7V2" Kind="Interface" />
      <Type Name="IX509CertificateTemplate" Kind="Interface" />
      <Type Name="IX509CertificateTemplates" Kind="Interface" />
      <Type Name="IX509CertificateTemplateWritable" Kind="Interface" />
      <Type Name="IX509Enrollment" Kind="Interface" />
      <Type Name="IX509Enrollment2" Kind="Interface" />
      <Type Name="IX509EnrollmentHelper" Kind="Interface" />
      <Type Name="IX509EnrollmentPolicyServer" Kind="Interface" />
      <Type Name="IX509EnrollmentStatus" Kind="Interface" />
      <Type Name="IX509EnrollmentWebClassFactory" Kind="Interface" />
      <Type Name="IX509Extension" Kind="Interface" />
      <Type Name="IX509ExtensionAlternativeNames" Kind="Interface" />
      <Type Name="IX509ExtensionAuthorityKeyIdentifier" Kind="Interface" />
      <Type Name="IX509ExtensionBasicConstraints" Kind="Interface" />
      <Type Name="IX509ExtensionCertificatePolicies" Kind="Interface" />
      <Type Name="IX509ExtensionEnhancedKeyUsage" Kind="Interface" />
      <Type Name="IX509ExtensionKeyUsage" Kind="Interface" />
      <Type Name="IX509ExtensionMSApplicationPolicies" Kind="Interface" />
      <Type Name="IX509Extensions" Kind="Interface" />
      <Type Name="IX509ExtensionSmimeCapabilities" Kind="Interface" />
      <Type Name="IX509ExtensionSubjectKeyIdentifier" Kind="Interface" />
      <Type Name="IX509ExtensionTemplate" Kind="Interface" />
      <Type Name="IX509ExtensionTemplateName" Kind="Interface" />
      <Type Name="IX509MachineEnrollmentFactory" Kind="Interface" />
      <Type Name="IX509NameValuePair" Kind="Interface" />
      <Type Name="IX509NameValuePairs" Kind="Interface" />
      <Type Name="IX509PolicyServerListManager" Kind="Interface" />
      <Type Name="IX509PolicyServerUrl" Kind="Interface" />
      <Type Name="IX509PrivateKey" Kind="Interface" />
      <Type Name="IX509PublicKey" Kind="Interface" />
      <Type Name="IX509SignatureInformation" Kind="Interface" />
      <Type Name="JobHistoryRenderer" Kind="Class" />
      <Type Name="JobMessageCode" Kind="Class" />
      <Type Name="JobMessageHelper" Kind="Class" />
      <Type Name="JobMessageObject" Kind="Class" />
      <Type Name="JobModifyFilter" Kind="Delegate" />
      <Type Name="JobProfilePropertyBag" Kind="Class" />
      <Type Name="JobPropertyBag" Kind="Class" />
      <Type Name="JobStateChangeDelegate" Kind="Delegate" />
      <Type Name="JobStateChangeDelegateEx" Kind="Delegate" />
      <Type Name="KeyIdentifierHashAlgorithm" Kind="Enumeration" />
      <Type Name="NodeQueryCacheInvalidNotification" Kind="Delegate" />
      <Type Name="NodeStateChangeDelegate" Kind="Delegate" />
      <Type Name="ObjectIdGroupId" Kind="Enumeration" />
      <Type Name="ObjectIdPublicKeyFlags" Kind="Enumeration" />
      <Type Name="OnRowSetChange" Kind="Delegate" />
      <Type Name="Packets" Kind="Class" />
      <Type Name="Packets+EventObjectClass" Kind="Enumeration" />
      <Type Name="Packets+EventPacket" Kind="Class" />
      <Type Name="Packets+EventPacketBase" Kind="Class" />
      <Type Name="Packets+Goodbye" Kind="Class" />
      <Type Name="Packets+Hello" Kind="Class" />
      <Type Name="Packets+KeepAlive" Kind="Class" />
      <Type Name="Packets+PacketBase" Kind="Class" />
      <Type Name="Packets+RequestPacket" Kind="Class" />
      <Type Name="Packets+RowsetChangePacket" Kind="Class" />
      <Type Name="PFXExportOptions" Kind="Enumeration" />
      <Type Name="PipePacket" Kind="Class" />
      <Type Name="PipePacket+PacketType" Kind="Enumeration" />
      <Type Name="Pkcs10AllowedSignatureTypes" Kind="Enumeration" />
      <Type Name="PolicyQualifierType" Kind="Enumeration" />
      <Type Name="PolicyServerUrlFlags" Kind="Enumeration" />
      <Type Name="PolicyServerUrlPropertyID" Kind="Enumeration" />
      <Type Name="PreemptionBalancedMode" Kind="Enumeration" />
      <Type Name="ProcessEventPacketDelegate" Kind="Delegate" />
      <Type Name="ProfileItemOperator" Kind="Enumeration" />
      <Type Name="ProfileValidation" Kind="Class" />
      <Type Name="ProfileValidation+IProfileItemQuery" Kind="Interface" />
      <Type Name="ProfileValidation+ProfileItemValidator" Kind="Class" />
      <Type Name="PropertyBag" Kind="Class" />
      <Type Name="PropertyConverter" Kind="Class" />
      <Type Name="PropertyUtil" Kind="Class" />
      <Type Name="PropertyVersioning" Kind="Class" />
      <Type Name="PropertyVersioning+Info" Kind="Class" />
      <Type Name="ProtectedAllocationPropertyIds" Kind="Class" />
      <Type Name="ProtectedJobMessagePropertyIds" Kind="Class" />
      <Type Name="ProtectedJobPropertyIds" Kind="Class" />
      <Type Name="ProtectedJobTemplatePropertyIds" Kind="Class" />
      <Type Name="ProtectedNodePropertyIds" Kind="Class" />
      <Type Name="ProtectedPoolPropertyIds" Kind="Class" />
      <Type Name="ProtectedResourcePropertyIds" Kind="Class" />
      <Type Name="ProtectedStorePropertyIds" Kind="Class" />
      <Type Name="ProtectedTaskPropertyIds" Kind="Class" />
      <Type Name="ReadOnlyPropertyConverter" Kind="Class" />
      <Type Name="RequestClientInfoClientId" Kind="Enumeration" />
      <Type Name="ResourceStateChangeDelegate" Kind="Delegate" />
      <Type Name="RowEnumeratorEnumerator" Kind="Class" />
      <Type Name="RowSetEnumerator" Kind="Class" />
      <Type Name="RowSetResult" Kind="Class" />
      <Type Name="RowSetType" Kind="Enumeration" />
      <Type Name="SchedulerAuthMessageHeader" Kind="Class" />
      <Type Name="SchedulerCertInfo" Kind="Class" />
      <Type Name="SchedulerConnectionEventArgs" Kind="Class" />
      <Type Name="SchedulerConnectionEventCode" Kind="Enumeration" />
      <Type Name="SchedulerConnectionHandler" Kind="Delegate" />
      <Type Name="SchedulerDeploymentDelegate" Kind="Delegate" />
      <Type Name="SchedulerEventType" Kind="Enumeration" />
      <Type Name="SchedulerJobEventDelegate" Kind="Delegate" />
      <Type Name="SchedulerObjectEventDelegate" Kind="Delegate" />
      <Type Name="SchedulerStore" Kind="Class" />
      <Type Name="SchedulerStoreHelpers" Kind="Class" />
      <Type Name="SchedulerTaskEventDelegate" Kind="Delegate" />
      <Type Name="ServerPropertyDescriptor" Kind="Class" />
      <Type Name="StoreConnectionContext" Kind="Class" />
      <Type Name="StoreCounterHelper" Kind="Class" />
      <Type Name="StorePropertyDescriptor" Kind="Class" />
      <Type Name="StoreTransaction" Kind="Class" />
      <Type Name="StoreTransaction+Action" Kind="Enumeration" />
      <Type Name="StoreTransaction+TransactionItem" Kind="Class" />
      <Type Name="TaskGroupContainer" Kind="Class" />
      <Type Name="TaskPropertyBag" Kind="Class" />
      <Type Name="TaskRowSetOptions" Kind="Enumeration" />
      <Type Name="TaskStateChangeDelegate" Kind="Delegate" />
      <Type Name="TaskTypeHelper" Kind="Class" />
      <Type Name="TaskTypeHelper+ParametricTaskCriteria" Kind="Enumeration" />
      <Type Name="ThreadPrincipalMessageHeader" Kind="Class" />
      <Type Name="TraceHelper" Kind="Class" />
      <Type Name="Tree" Kind="Class" />
      <Type Name="UserCredential" Kind="Class" />
      <Type Name="VersionControl" Kind="Class" />
      <Type Name="WebEnrollmentFlags" Kind="Enumeration" />
      <Type Name="X500NameFlags" Kind="Enumeration" />
      <Type Name="X509CertificateEnrollmentContext" Kind="Enumeration" />
      <Type Name="X509CertificateTemplateEnrollmentFlag" Kind="Enumeration" />
      <Type Name="X509CertificateTemplateGeneralFlag" Kind="Enumeration" />
      <Type Name="X509CertificateTemplatePrivateKeyFlag" Kind="Enumeration" />
      <Type Name="X509CertificateTemplateSubjectNameFlag" Kind="Enumeration" />
      <Type Name="X509EnrollmentAuthFlags" Kind="Enumeration" />
      <Type Name="X509EnrollmentPolicyExportFlags" Kind="Enumeration" />
      <Type Name="X509EnrollmentPolicyLoadOption" Kind="Enumeration" />
      <Type Name="X509KeySpec" Kind="Enumeration" />
      <Type Name="X509KeyUsageFlags" Kind="Enumeration" />
      <Type Name="X509PrivateKeyExportFlags" Kind="Enumeration" />
      <Type Name="X509PrivateKeyProtection" Kind="Enumeration" />
      <Type Name="X509PrivateKeyUsageFlags" Kind="Enumeration" />
      <Type Name="X509PrivateKeyVerify" Kind="Enumeration" />
      <Type Name="X509ProviderType" Kind="Enumeration" />
      <Type Name="X509RequestInheritOptions" Kind="Enumeration" />
      <Type Name="X509RequestType" Kind="Enumeration" />
      <Type Name="XMLEnabledPropertyConverter" Kind="Class" />
      <Type Name="XmlExportOptions" Kind="Enumeration" />
      <Type Name="XmlImportOptions" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Hpc.WindowsRegistry">
      <Type Name="IUpdateWatcher`1" DisplayName="IUpdateWatcher&lt;T&gt;" Kind="Interface" />
      <Type Name="RegistryHiveString" Kind="Class" />
      <Type Name="WindowsRegistryWatcher`1" DisplayName="WindowsRegistryWatcher&lt;T&gt;" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Untitled</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Security.Principal.IPrincipal" />
      </Targets>
      <Member MemberName="GenerateSecurityIdentifierFromAadPrincipal">
        <MemberSignature Language="C#" Value="public static System.Security.Principal.SecurityIdentifier GenerateSecurityIdentifierFromAadPrincipal (this System.Security.Principal.IPrincipal principal, Microsoft.Hpc.IHpcContext hpcContext = null, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.SecurityIdentifier GenerateSecurityIdentifierFromAadPrincipal(class System.Security.Principal.IPrincipal principal, class Microsoft.Hpc.IHpcContext hpcContext, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GenerateSecurityIdentifierFromAadPrincipal(System.Security.Principal.IPrincipal,Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateSecurityIdentifierFromAadPrincipal (principal As IPrincipal, Optional hpcContext As IHpcContext = null, Optional aadInfoNode As String = null) As SecurityIdentifier" />
        <MemberSignature Language="F#" Value="static member GenerateSecurityIdentifierFromAadPrincipal : System.Security.Principal.IPrincipal * Microsoft.Hpc.IHpcContext * string -&gt; System.Security.Principal.SecurityIdentifier" Usage="Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GenerateSecurityIdentifierFromAadPrincipal (principal, hpcContext, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" RefType="this" />
          <Parameter Name="hpcContext" Type="Microsoft.Hpc.IHpcContext" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="principal">To be added.</param>
          <param name="hpcContext">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AADAuthUtil.AADAuthUtil" Member="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GenerateSecurityIdentifierFromAadPrincipal(System.Security.Principal.IPrincipal,Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADJwtTokenAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADJwtTokenAsync (this Microsoft.Hpc.IHpcContext context, string userName, string password, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADJwtTokenAsync(class Microsoft.Hpc.IHpcContext context, string userName, string password, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GetAADJwtTokenAsync(Microsoft.Hpc.IHpcContext,System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADJwtTokenAsync (context As IHpcContext, userName As String, password As String, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADJwtTokenAsync : Microsoft.Hpc.IHpcContext * string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GetAADJwtTokenAsync (context, userName, password, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="userName" Type="System.String" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="userName">To be added.</param>
          <param name="password">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AADAuthUtil.AADAuthUtil" Member="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.GetAADJwtTokenAsync(Microsoft.Hpc.IHpcContext,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.FaultException" />
      </Targets>
      <Member MemberName="IsAADAuthenticationException">
        <MemberSignature Language="C#" Value="public static bool IsAADAuthenticationException (this System.ServiceModel.FaultException ex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAADAuthenticationException(class System.ServiceModel.FaultException ex) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.IsAADAuthenticationException(System.ServiceModel.FaultException)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsAADAuthenticationException (ex As FaultException) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsAADAuthenticationException : System.ServiceModel.FaultException -&gt; bool" Usage="Microsoft.Hpc.AADAuthUtil.AADAuthUtil.IsAADAuthenticationException ex" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ex" Type="System.ServiceModel.FaultException" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AADAuthUtil.AADAuthUtil" Member="M:Microsoft.Hpc.AADAuthUtil.AADAuthUtil.IsAADAuthenticationException(System.ServiceModel.FaultException)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADAppNameAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADAppNameAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADAppNameAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADAppNameAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADAppNameAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADAppNameAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADAppNameAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADAppNameAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADClientAppIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADClientAppIdAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADClientAppIdAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADClientAppIdAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADClientAppIdAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADClientAppIdAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADClientAppKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADClientAppKeyAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADClientAppKeyAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppKeyAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADClientAppKeyAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADClientAppKeyAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADClientAppKeyAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppKeyAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADClientAppRedirectUriAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADClientAppRedirectUriAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADClientAppRedirectUriAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppRedirectUriAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADClientAppRedirectUriAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADClientAppRedirectUriAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADClientAppRedirectUriAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADClientAppRedirectUriAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADInstanceAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADInstanceAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADInstanceAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADInstanceAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADInstanceAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADInstanceAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADInstanceAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADInstanceAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADTenantAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADTenantAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADTenantAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADTenantAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADTenantAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADTenantAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADTenantAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADTenantAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAADTenantIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAADTenantIdAsync (this Microsoft.Hpc.IHpcContext context, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAADTenantIdAsync(class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.GetAADTenantIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAADTenantIdAsync (context As IHpcContext, Optional aadInfoNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAADTenantIdAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.GetAADTenantIdAsync (context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.GetAADTenantIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="IsSupportAAD">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; IsSupportAAD (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; IsSupportAAD(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AadRegistryExtension.IsSupportAAD(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsSupportAAD (context As IHpcContext) As Task(Of Boolean)" />
        <MemberSignature Language="F#" Value="static member IsSupportAAD : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Hpc.AadRegistryExtension.IsSupportAAD context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AadRegistryExtension" Member="M:Microsoft.Hpc.AadRegistryExtension.IsSupportAAD(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureEndpointStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureEndpointStringAsync (this Microsoft.Hpc.IHpcContext context, string endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureEndpointStringAsync(class Microsoft.Hpc.IHpcContext context, string endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEndpointStringAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureEndpointStringAsync (context As IHpcContext, endpoint As String) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureEndpointStringAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEndpointStringAsync (context, endpoint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="endpoint" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AzureEndpointRegistryExtension" Member="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEndpointStringAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureEnvironmentAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureEnvironmentAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureEnvironmentAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEnvironmentAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureEnvironmentAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureEnvironmentAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEnvironmentAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AzureEndpointRegistryExtension" Member="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureEnvironmentAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureStorageEndpointSuffixAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureStorageEndpointSuffixAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureStorageEndpointSuffixAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureStorageEndpointSuffixAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureStorageEndpointSuffixAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureStorageEndpointSuffixAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureStorageEndpointSuffixAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.AzureEndpointRegistryExtension" Member="M:Microsoft.Hpc.AzureEndpointRegistryExtension.GetAzureStorageEndpointSuffixAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetBatchAADClientAppIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetBatchAADClientAppIdAsync (this Microsoft.Hpc.IHpcContext context, string batchNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetBatchAADClientAppIdAsync(class Microsoft.Hpc.IHpcContext context, string batchNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBatchAADClientAppIdAsync (context As IHpcContext, Optional batchNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetBatchAADClientAppIdAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppIdAsync (context, batchNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="batchNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="batchNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.BatchRegistryExtension" Member="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetBatchAADClientAppKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetBatchAADClientAppKeyAsync (this Microsoft.Hpc.IHpcContext context, string batchNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetBatchAADClientAppKeyAsync(class Microsoft.Hpc.IHpcContext context, string batchNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppKeyAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBatchAADClientAppKeyAsync (context As IHpcContext, Optional batchNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetBatchAADClientAppKeyAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppKeyAsync (context, batchNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="batchNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="batchNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.BatchRegistryExtension" Member="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADClientAppKeyAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetBatchAADInstanceAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetBatchAADInstanceAsync (this Microsoft.Hpc.IHpcContext context, string batchNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetBatchAADInstanceAsync(class Microsoft.Hpc.IHpcContext context, string batchNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADInstanceAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBatchAADInstanceAsync (context As IHpcContext, Optional batchNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetBatchAADInstanceAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.BatchRegistryExtension.GetBatchAADInstanceAsync (context, batchNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="batchNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="batchNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.BatchRegistryExtension" Member="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADInstanceAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetBatchAADTenantIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetBatchAADTenantIdAsync (this Microsoft.Hpc.IHpcContext context, string batchNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetBatchAADTenantIdAsync(class Microsoft.Hpc.IHpcContext context, string batchNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADTenantIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBatchAADTenantIdAsync (context As IHpcContext, Optional batchNode As String = null) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetBatchAADTenantIdAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.BatchRegistryExtension.GetBatchAADTenantIdAsync (context, batchNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="batchNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="batchNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.BatchRegistryExtension" Member="M:Microsoft.Hpc.BatchRegistryExtension.GetBatchAADTenantIdAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
      </Targets>
      <Member MemberName="UseInAppDomainSerializationBinder">
        <MemberSignature Language="C#" Value="public static void UseInAppDomainSerializationBinder (this System.Runtime.Serialization.Formatters.Binary.BinaryFormatter binaryFormatter);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseInAppDomainSerializationBinder(class System.Runtime.Serialization.Formatters.Binary.BinaryFormatter binaryFormatter) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.BinaryFormatterExtention.UseInAppDomainSerializationBinder(System.Runtime.Serialization.Formatters.Binary.BinaryFormatter)" />
        <MemberSignature Language="F#" Value="static member UseInAppDomainSerializationBinder : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter -&gt; unit" Usage="Microsoft.Hpc.BinaryFormatterExtention.UseInAppDomainSerializationBinder binaryFormatter" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="binaryFormatter" Type="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="binaryFormatter">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.BinaryFormatterExtention" Member="M:Microsoft.Hpc.BinaryFormatterExtention.UseInAppDomainSerializationBinder(System.Runtime.Serialization.Formatters.Binary.BinaryFormatter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetConnectionString">
        <MemberSignature Language="C#" Value="public static Microsoft.Hpc.EndpointsConnectionString GetConnectionString (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Hpc.EndpointsConnectionString GetConnectionString(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.HpcContextExtension.GetConnectionString(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectionString (context As IHpcContext) As EndpointsConnectionString" />
        <MemberSignature Language="F#" Value="static member GetConnectionString : Microsoft.Hpc.IHpcContext -&gt; Microsoft.Hpc.EndpointsConnectionString" Usage="Microsoft.Hpc.HpcContextExtension.GetConnectionString context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Hpc.EndpointsConnectionString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.HpcContextExtension" Member="M:Microsoft.Hpc.HpcContextExtension.GetConnectionString(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetNodesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; GetNodesAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; GetNodesAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.HpcContextExtension.GetNodesAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNodesAsync (context As IHpcContext) As Task(Of IEnumerable(Of String))" />
        <MemberSignature Language="F#" Value="static member GetNodesAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;string&gt;&gt;" Usage="Microsoft.Hpc.HpcContextExtension.GetNodesAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.HpcContextExtension" Member="M:Microsoft.Hpc.HpcContextExtension.GetNodesAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IFabricContext" />
      </Targets>
      <Member MemberName="IsHpcService">
        <MemberSignature Language="C#" Value="public static bool IsHpcService (this Microsoft.Hpc.IFabricContext fabricContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHpcService(class Microsoft.Hpc.IFabricContext fabricContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.HpcContextOwnerFabricContextExtension.IsHpcService(Microsoft.Hpc.IFabricContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHpcService (fabricContext As IFabricContext) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsHpcService : Microsoft.Hpc.IFabricContext -&gt; bool" Usage="Microsoft.Hpc.HpcContextOwnerFabricContextExtension.IsHpcService fabricContext" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fabricContext" Type="Microsoft.Hpc.IFabricContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="fabricContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.HpcContextOwnerFabricContextExtension" Member="M:Microsoft.Hpc.HpcContextOwnerFabricContextExtension.IsHpcService(Microsoft.Hpc.IFabricContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IFabricContext" />
      </Targets>
      <Member MemberName="UseInternalConnection">
        <MemberSignature Language="C#" Value="public static bool UseInternalConnection (this Microsoft.Hpc.IFabricContext fabricContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool UseInternalConnection(class Microsoft.Hpc.IFabricContext fabricContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.HpcContextOwnerFabricContextExtension.UseInternalConnection(Microsoft.Hpc.IFabricContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInternalConnection (fabricContext As IFabricContext) As Boolean" />
        <MemberSignature Language="F#" Value="static member UseInternalConnection : Microsoft.Hpc.IFabricContext -&gt; bool" Usage="Microsoft.Hpc.HpcContextOwnerFabricContextExtension.UseInternalConnection fabricContext" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fabricContext" Type="Microsoft.Hpc.IFabricContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="fabricContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.HpcContextOwnerFabricContextExtension" Member="M:Microsoft.Hpc.HpcContextOwnerFabricContextExtension.UseInternalConnection(Microsoft.Hpc.IFabricContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IFabricContext" />
      </Targets>
      <Member MemberName="IsHpcHeadNodeService">
        <MemberSignature Language="C#" Value="public static bool IsHpcHeadNodeService (this Microsoft.Hpc.IFabricContext fabricContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHpcHeadNodeService(class Microsoft.Hpc.IFabricContext fabricContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.HpcServerContextFabricContextExtension.IsHpcHeadNodeService(Microsoft.Hpc.IFabricContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHpcHeadNodeService (fabricContext As IFabricContext) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsHpcHeadNodeService : Microsoft.Hpc.IFabricContext -&gt; bool" Usage="Microsoft.Hpc.HpcServerContextFabricContextExtension.IsHpcHeadNodeService fabricContext" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fabricContext" Type="Microsoft.Hpc.IFabricContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="fabricContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.HpcServerContextFabricContextExtension" Member="M:Microsoft.Hpc.HpcServerContextFabricContextExtension.IsHpcHeadNodeService(Microsoft.Hpc.IFabricContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureADAuthorityUriAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureADAuthorityUriAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureADAuthorityUriAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureADAuthorityUriAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureADAuthorityUriAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureADAuthorityUriAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureADAuthorityUriAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureADAuthorityUriAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureADResourceUriAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureADResourceUriAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureADResourceUriAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureADResourceUriAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureADResourceUriAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureADResourceUriAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureADResourceUriAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureADResourceUriAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureBatchResourceUri">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureBatchResourceUri (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureBatchResourceUri(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureBatchResourceUri(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureBatchResourceUri (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureBatchResourceUri : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureBatchResourceUri context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureBatchResourceUri(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureBlobStorageDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureBlobStorageDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureBlobStorageDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureBlobStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureBlobStorageDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureBlobStorageDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureBlobStorageDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureBlobStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureFileStorageDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureFileStorageDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureFileStorageDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureFileStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureFileStorageDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureFileStorageDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureFileStorageDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureFileStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureManagementDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureManagementDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureManagementDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureManagementDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureManagementDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureManagementDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureManagementDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureManagementDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureQueueStorageDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureQueueStorageDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureQueueStorageDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureQueueStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureQueueStorageDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureQueueStorageDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureQueueStorageDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureQueueStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureServiceDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureServiceDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureServiceDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureServiceDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureServiceDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureServiceDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureServiceDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureServiceDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureSQLManagementDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureSQLManagementDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureSQLManagementDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureSQLManagementDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureSQLManagementDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureSQLManagementDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureSQLManagementDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureSQLManagementDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureStorageConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureStorageConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureStorageConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureStorageConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureStorageConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureStorageConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureStorageConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureStorageConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetAzureTableStorageDomainAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetAzureTableStorageDomainAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetAzureTableStorageDomainAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetAzureTableStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureTableStorageDomainAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetAzureTableStorageDomainAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetAzureTableStorageDomainAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetAzureTableStorageDomainAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.NonHARegistry" />
      </Targets>
      <Member MemberName="GetCertificateValidationTypeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Hpc.CertificateValidationType&gt; GetCertificateValidationTypeAsync (this Microsoft.Hpc.NonHARegistry registry);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Hpc.CertificateValidationType&gt; GetCertificateValidationTypeAsync(class Microsoft.Hpc.NonHARegistry registry) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetCertificateValidationTypeAsync(Microsoft.Hpc.NonHARegistry)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCertificateValidationTypeAsync (registry As NonHARegistry) As Task(Of CertificateValidationType)" />
        <MemberSignature Language="F#" Value="static member GetCertificateValidationTypeAsync : Microsoft.Hpc.NonHARegistry -&gt; System.Threading.Tasks.Task&lt;Microsoft.Hpc.CertificateValidationType&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetCertificateValidationTypeAsync registry" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Hpc.CertificateValidationType&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="registry" Type="Microsoft.Hpc.NonHARegistry" RefType="this" />
        </Parameters>
        <Docs>
          <param name="registry">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetCertificateValidationTypeAsync(Microsoft.Hpc.NonHARegistry)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterDiagnosticsShareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterDiagnosticsShareAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterDiagnosticsShareAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterDiagnosticsShareAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterDiagnosticsShareAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterDiagnosticsShareAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterDiagnosticsShareAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterDiagnosticsShareAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Guid&gt; GetClusterIdAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype System.Guid&gt; GetClusterIdAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterIdAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterIdAsync (context As IHpcContext) As Task(Of Guid)" />
        <MemberSignature Language="F#" Value="static member GetClusterIdAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;Guid&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterIdAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Guid&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterIdAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterInstallShareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterInstallShareAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterInstallShareAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterInstallShareAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterInstallShareAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterInstallShareAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterInstallShareAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterInstallShareAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterNameAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterNameAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterNameAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterNameAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterNameAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterNameAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterNameAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterNameAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterRuntimeDataShareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterRuntimeDataShareAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterRuntimeDataShareAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterRuntimeDataShareAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterRuntimeDataShareAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterRuntimeDataShareAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterRuntimeDataShareAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterRuntimeDataShareAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterServiceRegistrationShareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterServiceRegistrationShareAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterServiceRegistrationShareAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterServiceRegistrationShareAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterServiceRegistrationShareAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterServiceRegistrationShareAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterServiceRegistrationShareAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterServiceRegistrationShareAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetClusterSpoolDirShareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetClusterSpoolDirShareAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetClusterSpoolDirShareAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetClusterSpoolDirShareAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterSpoolDirShareAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetClusterSpoolDirShareAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetClusterSpoolDirShareAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetClusterSpoolDirShareAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context, string stringKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context, string stringKey) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseConnectionStringAsync (context As IHpcContext, stringKey As String) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetDatabaseConnectionStringAsync (context, stringKey)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="stringKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="stringKey">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetDiagnosticsDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetDiagnosticsDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetDiagnosticsDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetDiagnosticsDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticsDatabaseConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetDiagnosticsDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetDiagnosticsDatabaseConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetDiagnosticsDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetIsLinuxHttpsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; GetIsLinuxHttpsAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; GetIsLinuxHttpsAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetIsLinuxHttpsAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsLinuxHttpsAsync (context As IHpcContext) As Task(Of Integer)" />
        <MemberSignature Language="F#" Value="static member GetIsLinuxHttpsAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetIsLinuxHttpsAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetIsLinuxHttpsAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetManagementDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetManagementDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetManagementDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetManagementDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagementDatabaseConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetManagementDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetManagementDatabaseConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetManagementDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetMonitoringDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetMonitoringDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetMonitoringDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetMonitoringDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitoringDatabaseConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetMonitoringDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetMonitoringDatabaseConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetMonitoringDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetReportingDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetReportingDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetReportingDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetReportingDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReportingDatabaseConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetReportingDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetReportingDatabaseConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetReportingDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSchedulerDatabaseConnectionStringAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetSchedulerDatabaseConnectionStringAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetSchedulerDatabaseConnectionStringAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetSchedulerDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulerDatabaseConnectionStringAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetSchedulerDatabaseConnectionStringAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetSchedulerDatabaseConnectionStringAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetSchedulerDatabaseConnectionStringAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSSLThumbprint">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetSSLThumbprint (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetSSLThumbprint(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetSSLThumbprint(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSSLThumbprint (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member GetSSLThumbprint : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetSSLThumbprint context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetSSLThumbprint(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IRegistry" />
      </Targets>
      <Member MemberName="GetSSLThumbprint">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetSSLThumbprint (this Microsoft.Hpc.IRegistry registry, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetSSLThumbprint(class Microsoft.Hpc.IRegistry registry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.GetSSLThumbprint(Microsoft.Hpc.IRegistry,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSSLThumbprint : Microsoft.Hpc.IRegistry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.RegistryExtension.GetSSLThumbprint (registry, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="registry" Type="Microsoft.Hpc.IRegistry" RefType="this" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="registry">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.GetSSLThumbprint(Microsoft.Hpc.IRegistry,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="SetClusterIdAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetClusterIdAsync (this Microsoft.Hpc.IHpcContext context, Guid clusterId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetClusterIdAsync(class Microsoft.Hpc.IHpcContext context, valuetype System.Guid clusterId) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.SetClusterIdAsync(Microsoft.Hpc.IHpcContext,System.Guid)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetClusterIdAsync (context As IHpcContext, clusterId As Guid) As Task" />
        <MemberSignature Language="F#" Value="static member SetClusterIdAsync : Microsoft.Hpc.IHpcContext * Guid -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Hpc.RegistryExtension.SetClusterIdAsync (context, clusterId)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="clusterId" Type="System.Guid" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="clusterId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.SetClusterIdAsync(Microsoft.Hpc.IHpcContext,System.Guid)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="SetClusterNameAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetClusterNameAsync (this Microsoft.Hpc.IHpcContext context, string clusterName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetClusterNameAsync(class Microsoft.Hpc.IHpcContext context, string clusterName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RegistryExtension.SetClusterNameAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetClusterNameAsync (context As IHpcContext, clusterName As String) As Task" />
        <MemberSignature Language="F#" Value="static member SetClusterNameAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Hpc.RegistryExtension.SetClusterNameAsync (context, clusterName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="clusterName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="clusterName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RegistryExtension" Member="M:Microsoft.Hpc.RegistryExtension.SetClusterNameAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetServiceRegistrationRestClient">
        <MemberSignature Language="C#" Value="public static Microsoft.Hpc.Rest.ServiceRegistrationRestClient GetServiceRegistrationRestClient (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Hpc.Rest.ServiceRegistrationRestClient GetServiceRegistrationRestClient(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Rest.ServiceRegistrationRestClientHpcContextExtension.GetServiceRegistrationRestClient(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceRegistrationRestClient (context As IHpcContext) As ServiceRegistrationRestClient" />
        <MemberSignature Language="F#" Value="static member GetServiceRegistrationRestClient : Microsoft.Hpc.IHpcContext -&gt; Microsoft.Hpc.Rest.ServiceRegistrationRestClient" Usage="Microsoft.Hpc.Rest.ServiceRegistrationRestClientHpcContextExtension.GetServiceRegistrationRestClient context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Hpc.Rest.ServiceRegistrationRestClient</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Rest.ServiceRegistrationRestClientHpcContextExtension" Member="M:Microsoft.Hpc.Rest.ServiceRegistrationRestClientHpcContextExtension.GetServiceRegistrationRestClient(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetCertificateValidationCallback">
        <MemberSignature Language="C#" Value="public static System.Net.Security.RemoteCertificateValidationCallback GetCertificateValidationCallback (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.RemoteCertificateValidationCallback GetCertificateValidationCallback(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RestServiceUtil.GetCertificateValidationCallback(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCertificateValidationCallback (context As IHpcContext) As RemoteCertificateValidationCallback" />
        <MemberSignature Language="F#" Value="static member GetCertificateValidationCallback : Microsoft.Hpc.IHpcContext -&gt; System.Net.Security.RemoteCertificateValidationCallback" Usage="Microsoft.Hpc.RestServiceUtil.GetCertificateValidationCallback context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RestServiceUtil" Member="M:Microsoft.Hpc.RestServiceUtil.GetCertificateValidationCallback(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="IgnoreCertNameMismatchValidation">
        <MemberSignature Language="C#" Value="public static void IgnoreCertNameMismatchValidation (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IgnoreCertNameMismatchValidation(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.RestServiceUtil.IgnoreCertNameMismatchValidation(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IgnoreCertNameMismatchValidation (context As IHpcContext)" />
        <MemberSignature Language="F#" Value="static member IgnoreCertNameMismatchValidation : Microsoft.Hpc.IHpcContext -&gt; unit" Usage="Microsoft.Hpc.RestServiceUtil.IgnoreCertNameMismatchValidation context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.RestServiceUtil" Member="M:Microsoft.Hpc.RestServiceUtil.IgnoreCertNameMismatchValidation(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Properties.StoreProperty" />
      </Targets>
      <Member MemberName="ValueToString">
        <MemberSignature Language="C#" Value="public static string ValueToString (this Microsoft.Hpc.Scheduler.Properties.StoreProperty storeproperty);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ValueToString(class Microsoft.Hpc.Scheduler.Properties.StoreProperty storeproperty) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Properties.StorePropertyExtensions.ValueToString(Microsoft.Hpc.Scheduler.Properties.StoreProperty)" />
        <MemberSignature Language="F#" Value="static member ValueToString : Microsoft.Hpc.Scheduler.Properties.StoreProperty -&gt; string" Usage="Microsoft.Hpc.Scheduler.Properties.StorePropertyExtensions.ValueToString storeproperty" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="storeproperty" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty" RefType="this" />
        </Parameters>
        <Docs>
          <param name="storeproperty">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Properties.StorePropertyExtensions" Member="M:Microsoft.Hpc.Scheduler.Properties.StorePropertyExtensions.ValueToString(Microsoft.Hpc.Scheduler.Properties.StoreProperty)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Security.Principal.IIdentity" />
      </Targets>
      <Member MemberName="AuthByKerberosOrNtlmOrBasic">
        <MemberSignature Language="C#" Value="public static bool AuthByKerberosOrNtlmOrBasic (this System.Security.Principal.IIdentity identity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AuthByKerberosOrNtlmOrBasic(class System.Security.Principal.IIdentity identity) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.AuthByKerberosOrNtlmOrBasic(System.Security.Principal.IIdentity)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AuthByKerberosOrNtlmOrBasic (identity As IIdentity) As Boolean" />
        <MemberSignature Language="F#" Value="static member AuthByKerberosOrNtlmOrBasic : System.Security.Principal.IIdentity -&gt; bool" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.AuthByKerberosOrNtlmOrBasic identity" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IIdentity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="identity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.AuthByKerberosOrNtlmOrBasic(System.Security.Principal.IIdentity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Security.Principal.WindowsIdentity" />
      </Targets>
      <Member MemberName="CanImpersonate">
        <MemberSignature Language="C#" Value="public static bool CanImpersonate (this System.Security.Principal.WindowsIdentity identity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanImpersonate(class System.Security.Principal.WindowsIdentity identity) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.CanImpersonate(System.Security.Principal.WindowsIdentity)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanImpersonate (identity As WindowsIdentity) As Boolean" />
        <MemberSignature Language="F#" Value="static member CanImpersonate : System.Security.Principal.WindowsIdentity -&gt; bool" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.CanImpersonate identity" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="identity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.CanImpersonate(System.Security.Principal.WindowsIdentity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveSessionLauncherNodeOnIaasAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveSessionLauncherNodeOnIaasAsync (this Microsoft.Hpc.IHpcContext context, string headnode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveSessionLauncherNodeOnIaasAsync(class Microsoft.Hpc.IHpcContext context, string headnode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.ResolveSessionLauncherNodeOnIaasAsync(Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveSessionLauncherNodeOnIaasAsync (context As IHpcContext, headnode As String) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveSessionLauncherNodeOnIaasAsync : Microsoft.Hpc.IHpcContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.ResolveSessionLauncherNodeOnIaasAsync (context, headnode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="headnode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="headnode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.ResolveSessionLauncherNodeOnIaasAsync(Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.KeyedByTypeCollection`1" />
      </Targets>
      <Member MemberName="UseAadClientBehaviors">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt; UseAadClientBehaviors (this System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt; behaviors, Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase sessionInitInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt;&gt; UseAadClientBehaviors(class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt; behaviors, class Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase sessionInitInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors(System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IEndpointBehavior},Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseAadClientBehaviors (behaviors As KeyedByTypeCollection(Of IEndpointBehavior), sessionInitInfo As SessionInitInfoBase) As Task(Of KeyedByTypeCollection(Of IEndpointBehavior))" />
        <MemberSignature Language="F#" Value="static member UseAadClientBehaviors : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt; * Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors (behaviors, sessionInitInfo)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="behaviors" Type="System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;" RefType="this" />
          <Parameter Name="sessionInitInfo" Type="Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase" />
        </Parameters>
        <Docs>
          <param name="behaviors">To be added.</param>
          <param name="sessionInitInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors(System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IEndpointBehavior},Microsoft.Hpc.Scheduler.Session.SessionInitInfoBase)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.KeyedByTypeCollection`1" />
      </Targets>
      <Member MemberName="UseAadClientBehaviors">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt; UseAadClientBehaviors (this System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt; behaviors, string headnode, string username = null, string password = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt;&gt; UseAadClientBehaviors(class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt; behaviors, string headnode, string username, string password) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors(System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IEndpointBehavior},System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseAadClientBehaviors (behaviors As KeyedByTypeCollection(Of IEndpointBehavior), headnode As String, Optional username As String = null, Optional password As String = null) As Task(Of KeyedByTypeCollection(Of IEndpointBehavior))" />
        <MemberSignature Language="F#" Value="static member UseAadClientBehaviors : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt; * string * string * string -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors (behaviors, headnode, username, password)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="behaviors" Type="System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;" RefType="this" />
          <Parameter Name="headnode" Type="System.String" />
          <Parameter Name="username" Type="System.String" />
          <Parameter Name="password" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="behaviors">To be added.</param>
          <param name="headnode">To be added.</param>
          <param name="username">To be added.</param>
          <param name="password">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseAadClientBehaviors(System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IEndpointBehavior},System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.Description.ClientCredentials" />
      </Targets>
      <Member MemberName="UseInternalAuthentication">
        <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ClientCredentials UseInternalAuthentication (this System.ServiceModel.Description.ClientCredentials clientCredentials, string thumbprint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ClientCredentials UseInternalAuthentication(class System.ServiceModel.Description.ClientCredentials clientCredentials, string thumbprint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthentication(System.ServiceModel.Description.ClientCredentials,System.String)" />
        <MemberSignature Language="F#" Value="static member UseInternalAuthentication : System.ServiceModel.Description.ClientCredentials * string -&gt; System.ServiceModel.Description.ClientCredentials" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthentication (clientCredentials, thumbprint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="clientCredentials" Type="System.ServiceModel.Description.ClientCredentials" RefType="this" />
          <Parameter Name="thumbprint" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="clientCredentials">To be added.</param>
          <param name="thumbprint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthentication(System.ServiceModel.Description.ClientCredentials,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.Description.ClientCredentials" />
      </Targets>
      <Member MemberName="UseInternalAuthenticationAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ClientCredentials&gt; UseInternalAuthenticationAsync (this System.ServiceModel.Description.ClientCredentials clientCredentials, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.Description.ClientCredentials&gt; UseInternalAuthenticationAsync(class System.ServiceModel.Description.ClientCredentials clientCredentials, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync(System.ServiceModel.Description.ClientCredentials,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UseInternalAuthenticationAsync : System.ServiceModel.Description.ClientCredentials * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ClientCredentials&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync (clientCredentials, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ClientCredentials&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="clientCredentials" Type="System.ServiceModel.Description.ClientCredentials" RefType="this" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="clientCredentials">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync(System.ServiceModel.Description.ClientCredentials,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.Description.ServiceCredentials" />
      </Targets>
      <Member MemberName="UseInternalAuthenticationAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ServiceCredentials&gt; UseInternalAuthenticationAsync (this System.ServiceModel.Description.ServiceCredentials serviceCredentials, bool winService = false, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.Description.ServiceCredentials&gt; UseInternalAuthenticationAsync(class System.ServiceModel.Description.ServiceCredentials serviceCredentials, bool winService, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync(System.ServiceModel.Description.ServiceCredentials,System.Boolean,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UseInternalAuthenticationAsync : System.ServiceModel.Description.ServiceCredentials * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ServiceCredentials&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync (serviceCredentials, winService, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.Description.ServiceCredentials&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="serviceCredentials" Type="System.ServiceModel.Description.ServiceCredentials" RefType="this" />
          <Parameter Name="winService" Type="System.Boolean" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="serviceCredentials">To be added.</param>
          <param name="winService">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync(System.ServiceModel.Description.ServiceCredentials,System.Boolean,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.ClientBase`1" />
      </Targets>
      <Member MemberName="UseInternalAuthenticationAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.ServiceModel.ClientBase&lt;T&gt;&gt; UseInternalAuthenticationAsync&lt;T&gt; (this System.ServiceModel.ClientBase&lt;T&gt; client, System.Threading.CancellationToken cancellationToken = null) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.ClientBase`1&lt;!!T&gt;&gt; UseInternalAuthenticationAsync&lt;class T&gt;(class System.ServiceModel.ClientBase`1&lt;!!T&gt; client, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync``1(System.ServiceModel.ClientBase{``0},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UseInternalAuthenticationAsync : System.ServiceModel.ClientBase&lt;'T (requires 'T : null)&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.ClientBase&lt;'T&gt;&gt; (requires 'T : null)" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync (client, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.ClientBase&lt;T&gt;&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="client" Type="System.ServiceModel.ClientBase&lt;T&gt;" RefType="this" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="client">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseInternalAuthenticationAsync``1(System.ServiceModel.ClientBase{``0},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.ServiceModel.ServiceHost" />
      </Targets>
      <Member MemberName="UseServiceAuthorizationManagerAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.ServiceModel.ServiceHost&gt; UseServiceAuthorizationManagerAsync (this System.ServiceModel.ServiceHost serviceHost, System.ServiceModel.ServiceAuthorizationManager authorizationManager, bool winService = false, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.ServiceHost&gt; UseServiceAuthorizationManagerAsync(class System.ServiceModel.ServiceHost serviceHost, class System.ServiceModel.ServiceAuthorizationManager authorizationManager, bool winService, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseServiceAuthorizationManagerAsync(System.ServiceModel.ServiceHost,System.ServiceModel.ServiceAuthorizationManager,System.Boolean,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UseServiceAuthorizationManagerAsync : System.ServiceModel.ServiceHost * System.ServiceModel.ServiceAuthorizationManager * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.ServiceHost&gt;" Usage="Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseServiceAuthorizationManagerAsync (serviceHost, authorizationManager, winService, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.ServiceHost&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHost" RefType="this" />
          <Parameter Name="authorizationManager" Type="System.ServiceModel.ServiceAuthorizationManager" />
          <Parameter Name="winService" Type="System.Boolean" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="serviceHost">To be added.</param>
          <param name="authorizationManager">To be added.</param>
          <param name="winService">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ClientCredExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ClientCredExtension.UseServiceAuthorizationManagerAsync(System.ServiceModel.ServiceHost,System.ServiceModel.ServiceAuthorizationManager,System.Boolean,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" />
      </Targets>
      <Member MemberName="DefaultBrokerLauncherNetTcpBinding">
        <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Binding DefaultBrokerLauncherNetTcpBinding (this Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Binding DefaultBrokerLauncherNetTcpBinding(class Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultBrokerLauncherNetTcpBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultBrokerLauncherNetTcpBinding (connectionInfo As IConnectionInfo) As Binding" />
        <MemberSignature Language="F#" Value="static member DefaultBrokerLauncherNetTcpBinding : Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo -&gt; System.ServiceModel.Channels.Binding" Usage="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultBrokerLauncherNetTcpBinding connectionInfo" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionInfo" Type="Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" RefType="this" />
        </Parameters>
        <Docs>
          <param name="connectionInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultBrokerLauncherNetTcpBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" />
      </Targets>
      <Member MemberName="DefaultSessionLauncherNetTcpBinding">
        <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Binding DefaultSessionLauncherNetTcpBinding (this Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Binding DefaultSessionLauncherNetTcpBinding(class Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultSessionLauncherNetTcpBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultSessionLauncherNetTcpBinding (connectionInfo As IConnectionInfo) As Binding" />
        <MemberSignature Language="F#" Value="static member DefaultSessionLauncherNetTcpBinding : Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo -&gt; System.ServiceModel.Channels.Binding" Usage="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultSessionLauncherNetTcpBinding connectionInfo" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionInfo" Type="Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" RefType="this" />
        </Parameters>
        <Docs>
          <param name="connectionInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.DefaultSessionLauncherNetTcpBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" />
      </Targets>
      <Member MemberName="GetBrokerBinding">
        <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Binding GetBrokerBinding (this Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Binding GetBrokerBinding(class Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo connectionInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetBrokerBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBrokerBinding (connectionInfo As IConnectionInfo) As Binding" />
        <MemberSignature Language="F#" Value="static member GetBrokerBinding : Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo -&gt; System.ServiceModel.Channels.Binding" Usage="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetBrokerBinding connectionInfo" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionInfo" Type="Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" RefType="this" />
        </Parameters>
        <Docs>
          <param name="connectionInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetBrokerBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" />
      </Targets>
      <Member MemberName="GetChannelType">
        <MemberSignature Language="C#" Value="public static Microsoft.Hpc.Scheduler.Session.ChannelTypes GetChannelType (this Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Hpc.Scheduler.Session.ChannelTypes GetChannelType(class Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo info) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetChannelType(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChannelType (info As IConnectionInfo) As ChannelTypes" />
        <MemberSignature Language="F#" Value="static member GetChannelType : Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo -&gt; Microsoft.Hpc.Scheduler.Session.ChannelTypes" Usage="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetChannelType info" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Hpc.Scheduler.Session.ChannelTypes</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="info" Type="Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" RefType="this" />
        </Parameters>
        <Docs>
          <param name="info">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetChannelType(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" />
      </Targets>
      <Member MemberName="GetSessionLauncherBinding">
        <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Binding GetSessionLauncherBinding (this Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Binding GetSessionLauncherBinding(class Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo info) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetSessionLauncherBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSessionLauncherBinding (info As IConnectionInfo) As Binding" />
        <MemberSignature Language="F#" Value="static member GetSessionLauncherBinding : Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo -&gt; System.ServiceModel.Channels.Binding" Usage="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetSessionLauncherBinding info" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="info" Type="Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo" RefType="this" />
        </Parameters>
        <Docs>
          <param name="info">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension" Member="M:Microsoft.Hpc.Scheduler.Session.ConnectionInfoExtension.GetSessionLauncherBinding(Microsoft.Hpc.Scheduler.Session.Interface.IConnectionInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSchedulerStoreAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulerStoreAsync (context As IHpcContext) As Task(Of ISchedulerStore)" />
        <MemberSignature Language="F#" Value="static member GetSchedulerStoreAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;" Usage="Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.HpcContextExtension" Member="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSchedulerStoreAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync (this Microsoft.Hpc.IHpcContext context, Microsoft.Hpc.ServiceAsClientIdentityProvider identityProvider, Microsoft.Hpc.ServiceAsClientPrincipalProvider principalProvider = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync(class Microsoft.Hpc.IHpcContext context, class Microsoft.Hpc.ServiceAsClientIdentityProvider identityProvider, class Microsoft.Hpc.ServiceAsClientPrincipalProvider principalProvider) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,Microsoft.Hpc.ServiceAsClientIdentityProvider,Microsoft.Hpc.ServiceAsClientPrincipalProvider)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulerStoreAsync (context As IHpcContext, identityProvider As ServiceAsClientIdentityProvider, Optional principalProvider As ServiceAsClientPrincipalProvider = null) As Task(Of ISchedulerStore)" />
        <MemberSignature Language="F#" Value="static member GetSchedulerStoreAsync : Microsoft.Hpc.IHpcContext * Microsoft.Hpc.ServiceAsClientIdentityProvider * Microsoft.Hpc.ServiceAsClientPrincipalProvider -&gt; System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;" Usage="Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync (context, identityProvider, principalProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="identityProvider" Type="Microsoft.Hpc.ServiceAsClientIdentityProvider" />
          <Parameter Name="principalProvider" Type="Microsoft.Hpc.ServiceAsClientPrincipalProvider" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="identityProvider">To be added.</param>
          <param name="principalProvider">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.HpcContextExtension" Member="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,Microsoft.Hpc.ServiceAsClientIdentityProvider,Microsoft.Hpc.ServiceAsClientPrincipalProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSchedulerStoreAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync (this Microsoft.Hpc.IHpcContext context, bool isOverHttp);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync(class Microsoft.Hpc.IHpcContext context, bool isOverHttp) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulerStoreAsync (context As IHpcContext, isOverHttp As Boolean) As Task(Of ISchedulerStore)" />
        <MemberSignature Language="F#" Value="static member GetSchedulerStoreAsync : Microsoft.Hpc.IHpcContext * bool -&gt; System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;" Usage="Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync (context, isOverHttp)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="isOverHttp" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="isOverHttp">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.HpcContextExtension" Member="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="GetSchedulerStoreAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync (this Microsoft.Hpc.IHpcContext context, int port);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt; GetSchedulerStoreAsync(class Microsoft.Hpc.IHpcContext context, int32 port) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulerStoreAsync (context As IHpcContext, port As Integer) As Task(Of ISchedulerStore)" />
        <MemberSignature Language="F#" Value="static member GetSchedulerStoreAsync : Microsoft.Hpc.IHpcContext * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;" Usage="Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync (context, port)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Hpc.Scheduler.Store.ISchedulerStore&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
          <Parameter Name="port" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="port">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.HpcContextExtension" Member="M:Microsoft.Hpc.Scheduler.Store.HpcContextExtension.GetSchedulerStoreAsync(Microsoft.Hpc.IHpcContext,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Object" />
      </Targets>
      <Member MemberName="ExpandSubTree&lt;TNode,TResult&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; ExpandSubTree&lt;TNode,TResult&gt; (this TNode root, Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt; getChildren, Func&lt;TNode,TResult&gt; valueSelector);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExpandSubTree&lt;TNode, TResult&gt;(!!TNode root, class System.Func`2&lt;!!TNode, class System.Collections.Generic.IEnumerable`1&lt;!!TNode&gt;&gt; getChildren, class System.Func`2&lt;!!TNode, !!TResult&gt; valueSelector) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandSubTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function ExpandSubTree(Of TNode, TResult) (root As TNode, getChildren As Func(Of TNode, IEnumerable(Of TNode)), valueSelector As Func(Of TNode, TResult)) As IEnumerable(Of TResult)" />
        <MemberSignature Language="F#" Value="static member ExpandSubTree : 'Node * Func&lt;'Node, seq&lt;'Node&gt;&gt; * Func&lt;'Node, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="Microsoft.Hpc.Scheduler.Store.Tree.ExpandSubTree (root, getChildren, valueSelector)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TNode" />
          <TypeParameter Name="TResult" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="root" Type="TNode" RefType="this" />
          <Parameter Name="getChildren" Type="System.Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt;" />
          <Parameter Name="valueSelector" Type="System.Func&lt;TNode,TResult&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TNode">To be added.</typeparam>
          <typeparam name="TResult">To be added.</typeparam>
          <param name="root">To be added.</param>
          <param name="getChildren">To be added.</param>
          <param name="valueSelector">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.Tree" Member="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandSubTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Object" />
      </Targets>
      <Member MemberName="ExpandTree&lt;TNode,TResult&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; ExpandTree&lt;TNode,TResult&gt; (this TNode root, Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt; getChildren, Func&lt;TNode,TResult&gt; valueSelector);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExpandTree&lt;TNode, TResult&gt;(!!TNode root, class System.Func`2&lt;!!TNode, class System.Collections.Generic.IEnumerable`1&lt;!!TNode&gt;&gt; getChildren, class System.Func`2&lt;!!TNode, !!TResult&gt; valueSelector) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function ExpandTree(Of TNode, TResult) (root As TNode, getChildren As Func(Of TNode, IEnumerable(Of TNode)), valueSelector As Func(Of TNode, TResult)) As IEnumerable(Of TResult)" />
        <MemberSignature Language="F#" Value="static member ExpandTree : 'Node * Func&lt;'Node, seq&lt;'Node&gt;&gt; * Func&lt;'Node, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="Microsoft.Hpc.Scheduler.Store.Tree.ExpandTree (root, getChildren, valueSelector)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TNode" />
          <TypeParameter Name="TResult" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="root" Type="TNode" RefType="this" />
          <Parameter Name="getChildren" Type="System.Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt;" />
          <Parameter Name="valueSelector" Type="System.Func&lt;TNode,TResult&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TNode">To be added.</typeparam>
          <typeparam name="TResult">To be added.</typeparam>
          <param name="root">To be added.</param>
          <param name="getChildren">To be added.</param>
          <param name="valueSelector">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.Scheduler.Store.Tree" Member="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveBrokerLauncherNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveBrokerLauncherNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveBrokerLauncherNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveBrokerLauncherNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveBrokerLauncherNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveBrokerLauncherNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveBrokerLauncherNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveBrokerLauncherNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveDiagnosticsNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveDiagnosticsNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveDiagnosticsNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveDiagnosticsNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveDiagnosticsNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveDiagnosticsNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveDiagnosticsNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveDiagnosticsNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveFrontendNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveFrontendNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveFrontendNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveFrontendNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveFrontendNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveFrontendNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveFrontendNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveFrontendNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveManagementNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveManagementNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveManagementNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveManagementNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveManagementNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveManagementNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveManagementNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveManagementNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveManagementStatefulNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveManagementStatefulNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveManagementStatefulNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveManagementStatefulNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveManagementStatefulNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveManagementStatefulNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveManagementStatefulNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveManagementStatefulNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveMonitoringNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveMonitoringNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveMonitoringNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveMonitoringNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveMonitoringNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveMonitoringNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveMonitoringNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveMonitoringNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveSchedulerNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveSchedulerNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveSchedulerNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSchedulerNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveSchedulerNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveSchedulerNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveSchedulerNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSchedulerNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveSdmNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveSdmNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveSdmNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSdmNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveSdmNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveSdmNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveSdmNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSdmNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Hpc.IHpcContext" />
      </Targets>
      <Member MemberName="ResolveSessionLauncherNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ResolveSessionLauncherNodeAsync (this Microsoft.Hpc.IHpcContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ResolveSessionLauncherNodeAsync(class Microsoft.Hpc.IHpcContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSessionLauncherNodeAsync(Microsoft.Hpc.IHpcContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveSessionLauncherNodeAsync (context As IHpcContext) As Task(Of String)" />
        <MemberSignature Language="F#" Value="static member ResolveSessionLauncherNodeAsync : Microsoft.Hpc.IHpcContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Hpc.ServiceResolverExtension.ResolveSessionLauncherNodeAsync context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.ServiceResolverExtension" Member="M:Microsoft.Hpc.ServiceResolverExtension.ResolveSessionLauncherNodeAsync(Microsoft.Hpc.IHpcContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Threading.Tasks.Task" />
      </Targets>
      <Member MemberName="FireAndForget">
        <MemberSignature Language="C#" Value="public static void FireAndForget (this System.Threading.Tasks.Task t);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FireAndForget(class System.Threading.Tasks.Task t) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.TaskExtensions.FireAndForget(System.Threading.Tasks.Task)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub FireAndForget (t As Task)" />
        <MemberSignature Language="F#" Value="static member FireAndForget : System.Threading.Tasks.Task -&gt; unit" Usage="Microsoft.Hpc.TaskExtensions.FireAndForget t" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="t" Type="System.Threading.Tasks.Task" RefType="this" />
        </Parameters>
        <Docs>
          <param name="t">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.TaskExtensions" Member="M:Microsoft.Hpc.TaskExtensions.FireAndForget(System.Threading.Tasks.Task)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Security.Principal.IIdentity" />
      </Targets>
      <Member MemberName="IsHpcAadIdentity">
        <MemberSignature Language="C#" Value="public static bool IsHpcAadIdentity (this System.Security.Principal.IIdentity identity, Microsoft.Hpc.IHpcContext context = null, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHpcAadIdentity(class System.Security.Principal.IIdentity identity, class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.WcfChannelModule.IsHpcAadIdentity(System.Security.Principal.IIdentity,Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHpcAadIdentity (identity As IIdentity, Optional context As IHpcContext = null, Optional aadInfoNode As String = null) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsHpcAadIdentity : System.Security.Principal.IIdentity * Microsoft.Hpc.IHpcContext * string -&gt; bool" Usage="Microsoft.Hpc.WcfChannelModule.IsHpcAadIdentity (identity, context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IIdentity" RefType="this" />
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="identity">To be added.</param>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.WcfChannelModule" Member="M:Microsoft.Hpc.WcfChannelModule.IsHpcAadIdentity(System.Security.Principal.IIdentity,Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Security.Principal.IPrincipal" />
      </Targets>
      <Member MemberName="IsHpcAadPrincipal">
        <MemberSignature Language="C#" Value="public static bool IsHpcAadPrincipal (this System.Security.Principal.IPrincipal principal, Microsoft.Hpc.IHpcContext context = null, string aadInfoNode = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHpcAadPrincipal(class System.Security.Principal.IPrincipal principal, class Microsoft.Hpc.IHpcContext context, string aadInfoNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.WcfChannelModule.IsHpcAadPrincipal(System.Security.Principal.IPrincipal,Microsoft.Hpc.IHpcContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHpcAadPrincipal (principal As IPrincipal, Optional context As IHpcContext = null, Optional aadInfoNode As String = null) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsHpcAadPrincipal : System.Security.Principal.IPrincipal * Microsoft.Hpc.IHpcContext * string -&gt; bool" Usage="Microsoft.Hpc.WcfChannelModule.IsHpcAadPrincipal (principal, context, aadInfoNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" RefType="this" />
          <Parameter Name="context" Type="Microsoft.Hpc.IHpcContext" />
          <Parameter Name="aadInfoNode" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="principal">To be added.</param>
          <param name="context">To be added.</param>
          <param name="aadInfoNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Hpc.WcfChannelModule" Member="M:Microsoft.Hpc.WcfChannelModule.IsHpcAadPrincipal(System.Security.Principal.IPrincipal,Microsoft.Hpc.IHpcContext,System.String)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
