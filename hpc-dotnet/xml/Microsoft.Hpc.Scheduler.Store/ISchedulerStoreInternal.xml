<Type Name="ISchedulerStoreInternal" FullName="Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal">
  <TypeSignature Language="C#" Value="public interface ISchedulerStoreInternal" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISchedulerStoreInternal" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISchedulerStoreInternal" />
  <TypeSignature Language="F#" Value="type ISchedulerStoreInternal = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.PropertyError))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.PropFlags))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobPriority))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobState))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobUnitType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.CancelRequest))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.FailureReason))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobRuntimeType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobOrderByList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobOrderBy))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.TaskState))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.TaskType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.TaskId))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.ObjectType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.UserPrivilege))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.UserRoles))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.FilterOperator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.EventType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.FilterProperty))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobEvent))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobMessageType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobTemplateRights))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.NodeGroup))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.NodeEvent))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.NodeState))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.NodeAvailability))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.NodeLocation))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.PendingReason))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.PendingReason/ReasonCode))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.StorePropertyType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.ResourceState))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.ResourceJobPhase))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.SchedulerException))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.SortProperty))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(System.Collections.Generic.KeyValuePair`2&lt;System.String,System.Int32&gt;[]))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(System.Object[]))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceKnownType(typeof(Microsoft.Hpc.Scheduler.Properties.JobNodeGroupOp))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Allocation_FindIdByNodeAndTask">
      <MemberSignature Language="C#" Value="public int Allocation_FindIdByNodeAndTask (Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, int nodeId, int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Allocation_FindIdByNodeAndTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, int32 nodeId, int32 taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Allocation_FindIdByNodeAndTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocation_FindIdByNodeAndTask (toke As ConnectionToken, nodeId As Integer, taskId As Integer) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Allocation_FindIdByNodeAndTask : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int -&gt; int" Usage="iSchedulerStoreInternal.Allocation_FindIdByNodeAndTask (toke, nodeId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toke" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="toke">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocation_FindIdByNodeJobAndTask">
      <MemberSignature Language="C#" Value="public int Allocation_FindIdByNodeJobAndTask (Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, int nodeId, int jobId, int taskNiceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Allocation_FindIdByNodeJobAndTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, int32 nodeId, int32 jobId, int32 taskNiceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Allocation_FindIdByNodeJobAndTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocation_FindIdByNodeJobAndTask (toke As ConnectionToken, nodeId As Integer, jobId As Integer, taskNiceId As Integer) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Allocation_FindIdByNodeJobAndTask : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * int -&gt; int" Usage="iSchedulerStoreInternal.Allocation_FindIdByNodeJobAndTask (toke, nodeId, jobId, taskNiceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toke" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskNiceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="toke">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskNiceId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocation_UpdateTaskNodeStats">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Allocation_UpdateTaskNodeStats (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeId, int jobId, int taskId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Allocation_UpdateTaskNodeStats(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 nodeId, int32 jobId, int32 taskId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Allocation_UpdateTaskNodeStats(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocation_UpdateTaskNodeStats (ByRef token As ConnectionToken, nodeId As Integer, jobId As Integer, taskId As Integer, props As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Allocation_UpdateTaskNodeStats :  * int * int * int * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Allocation_UpdateTaskNodeStats (token, nodeId, jobId, taskId, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocation_VerifyId">
      <MemberSignature Language="C#" Value="public bool Allocation_VerifyId (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int allocationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Allocation_VerifyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 allocationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Allocation_VerifyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocation_VerifyId (token As ConnectionToken, allocationId As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Allocation_VerifyId : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; bool" Usage="iSchedulerStoreInternal.Allocation_VerifyId (token, allocationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="allocationId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="allocationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCredentialReuse">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult DisableCredentialReuse (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult DisableCredentialReuse(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.DisableCredentialReuse(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableCredentialReuse (token As ConnectionToken, userName As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member DisableCredentialReuse : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.DisableCredentialReuse (token, userName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="userName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptCredential">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult EncryptCredential (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, string password, out byte[] encryptedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult EncryptCredential(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, string password, [out] unsigned int8[]&amp; encryptedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.EncryptCredential(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptCredential (token As ConnectionToken, userName As String, password As String, ByRef encryptedPassword As Byte()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member EncryptCredential : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.EncryptCredential (token, userName, password, encryptedPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="encryptedPassword" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="password">To be added.</param>
        <param name="encryptedPassword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptCredential">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult EncryptCredential (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, string password, string ownerName, out byte[] encryptedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult EncryptCredential(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, string password, string ownerName, [out] unsigned int8[]&amp; encryptedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.EncryptCredential(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String,System.String,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptCredential (token As ConnectionToken, userName As String, password As String, ownerName As String, ByRef encryptedPassword As Byte()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member EncryptCredential : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.EncryptCredential (token, userName, password, ownerName, encryptedPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="EncryptCredentialForSpecifiedOwner")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="ownerName" Type="System.String" />
        <Parameter Name="encryptedPassword" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="password">To be added.</param>
        <param name="ownerName">To be added.</param>
        <param name="encryptedPassword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetCertificateInfo (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Store.SchedulerCertInfo certInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetCertificateInfo(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, [out] class Microsoft.Hpc.Scheduler.Store.SchedulerCertInfo&amp; certInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetCertificateInfo(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.SchedulerCertInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCertificateInfo (token As ConnectionToken, ByRef certInfo As SchedulerCertInfo) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateInfo : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetCertificateInfo (token, certInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="certInfo" Type="Microsoft.Hpc.Scheduler.Store.SchedulerCertInfo&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="certInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterEnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; GetClusterEnvironmentVariables (Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; GetClusterEnvironmentVariables(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetClusterEnvironmentVariables(Microsoft.Hpc.Scheduler.Store.ConnectionToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClusterEnvironmentVariables (token As ConnectionToken) As Dictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterEnvironmentVariables : Microsoft.Hpc.Scheduler.Store.ConnectionToken -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="iSchedulerStoreInternal.GetClusterEnvironmentVariables token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingDefaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; GetConfigurationSettingDefaults (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; GetConfigurationSettingDefaults(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetConfigurationSettingDefaults(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationSettingDefaults (ByRef token As ConnectionToken) As Dictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingDefaults :  -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="iSchedulerStoreInternal.GetConfigurationSettingDefaults token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingLimits">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string[]&gt; GetConfigurationSettingLimits (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string[]&gt; GetConfigurationSettingLimits(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetConfigurationSettingLimits(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationSettingLimits (ByRef token As ConnectionToken) As Dictionary(Of String, String())" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingLimits :  -&gt; System.Collections.Generic.Dictionary&lt;string, string[]&gt;" Usage="iSchedulerStoreInternal.GetConfigurationSettingLimits token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; GetConfigurationSettings (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; GetConfigurationSettings(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetConfigurationSettings(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationSettings (ByRef token As ConnectionToken) As Dictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettings :  -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="iSchedulerStoreInternal.GetConfigurationSettings token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredentialList">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetCredentialList (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string ownerName, bool all, out Microsoft.Hpc.Scheduler.Store.UserCredential[] credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetCredentialList(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string ownerName, bool all, [out] class Microsoft.Hpc.Scheduler.Store.UserCredential[]&amp; credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetCredentialList(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Boolean,Microsoft.Hpc.Scheduler.Store.UserCredential[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentialList (token As ConnectionToken, ownerName As String, all As Boolean, ByRef credentials As UserCredential()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetCredentialList : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * bool *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetCredentialList (token, ownerName, all, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="ownerName" Type="System.String" />
        <Parameter Name="all" Type="System.Boolean" />
        <Parameter Name="credentials" Type="Microsoft.Hpc.Scheduler.Store.UserCredential[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="ownerName">To be added.</param>
        <param name="all">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmailCredentialUser">
      <MemberSignature Language="C#" Value="public string GetEmailCredentialUser (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEmailCredentialUser(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetEmailCredentialUser(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmailCredentialUser (ByRef token As ConnectionToken) As String" />
      <MemberSignature Language="F#" Value="abstract member GetEmailCredentialUser :  -&gt; string" Usage="iSchedulerStoreInternal.GetEmailCredentialUser token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventDataOverHttp">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetEventDataOverHttp (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int connectionId, DateTime lastReadEvent, out System.Collections.Generic.List&lt;byte[]&gt; eventData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetEventDataOverHttp(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 connectionId, valuetype System.DateTime lastReadEvent, [out] class System.Collections.Generic.List`1&lt;unsigned int8[]&gt;&amp; eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetEventDataOverHttp(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.DateTime,System.Collections.Generic.List{System.Byte[]}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventDataOverHttp (token As ConnectionToken, connectionId As Integer, lastReadEvent As DateTime, ByRef eventData As List(Of Byte())) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetEventDataOverHttp : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * DateTime *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetEventDataOverHttp (token, connectionId, lastReadEvent, eventData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="lastReadEvent" Type="System.DateTime" />
        <Parameter Name="eventData" Type="System.Collections.Generic.List&lt;System.Byte[]&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="lastReadEvent">To be added.</param>
        <param name="eventData">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetNodeGroups (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out System.Collections.Generic.List&lt;Microsoft.Hpc.Scheduler.Properties.NodeGroup&gt; groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetNodeGroups(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, [out] class System.Collections.Generic.List`1&lt;class Microsoft.Hpc.Scheduler.Properties.NodeGroup&gt;&amp; groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetNodeGroups(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Collections.Generic.List{Microsoft.Hpc.Scheduler.Properties.NodeGroup}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeGroups (token As ConnectionToken, ByRef groups As List(Of NodeGroup)) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetNodeGroups : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetNodeGroups (token, groups)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="groups" Type="System.Collections.Generic.List&lt;Microsoft.Hpc.Scheduler.Properties.NodeGroup&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="groups">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodesFromGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetNodesFromGroup (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string nodeGroupName, out string[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetNodesFromGroup(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string nodeGroupName, [out] string[]&amp; nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetNodesFromGroup(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodesFromGroup (token As ConnectionToken, nodeGroupName As String, ByRef nodes As String()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetNodesFromGroup : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetNodesFromGroup (token, nodeGroupName, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeGroupName" Type="System.String" />
        <Parameter Name="nodes" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeGroupName">To be added.</param>
        <param name="nodes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfileIdByName">
      <MemberSignature Language="C#" Value="public void GetProfileIdByName (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string profileName, out int profileId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetProfileIdByName(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string profileName, [out] int32&amp; profileId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetProfileIdByName(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetProfileIdByName (token As ConnectionToken, profileName As String, ByRef profileId As Integer)" />
      <MemberSignature Language="F#" Value="abstract member GetProfileIdByName : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string *  -&gt; unit" Usage="iSchedulerStoreInternal.GetProfileIdByName (token, profileName, profileId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="profileName" Type="System.String" />
        <Parameter Name="profileId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileName">To be added.</param>
        <param name="profileId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfileItems">
      <MemberSignature Language="C#" Value="public void GetProfileItems (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int profileId, out Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetProfileItems(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 profileId, [out] class Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem[]&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetProfileItems(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetProfileItems (token As ConnectionToken, profileId As Integer, ByRef items As ClusterJobProfileItem())" />
      <MemberSignature Language="F#" Value="abstract member GetProfileItems : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; unit" Usage="iSchedulerStoreInternal.GetProfileItems (token, profileId, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="profileId" Type="System.Int32" />
        <Parameter Name="items" Type="Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileId">To be added.</param>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerLinuxHttpsValue">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetServerLinuxHttpsValue (out int linuxHttps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetServerLinuxHttpsValue([out] int32&amp; linuxHttps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetServerLinuxHttpsValue(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetServerLinuxHttpsValue (ByRef linuxHttps As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetServerLinuxHttpsValue :  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetServerLinuxHttpsValue linuxHttps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linuxHttps" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linuxHttps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVersion">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetServerVersion (out Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetServerVersion([out] class System.Version&amp; version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetServerVersion(System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetServerVersion (ByRef version As Version) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetServerVersion :  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetServerVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Version&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateCommonName">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetTemplateCommonName (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string friendlyTemplateName, out string templateCommonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetTemplateCommonName(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string friendlyTemplateName, [out] string&amp; templateCommonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetTemplateCommonName(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplateCommonName (token As ConnectionToken, friendlyTemplateName As String, ByRef templateCommonName As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateCommonName : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetTemplateCommonName (token, friendlyTemplateName, templateCommonName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="friendlyTemplateName" Type="System.String" />
        <Parameter Name="templateCommonName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="friendlyTemplateName">To be added.</param>
        <param name="templateCommonName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserPrivilege">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetUserPrivilege (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserPrivilege privilege);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetUserPrivilege(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp; privilege) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetUserPrivilege(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Properties.UserPrivilege@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserPrivilege (token As ConnectionToken, ByRef privilege As UserPrivilege) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetUserPrivilege : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetUserPrivilege (token, privilege)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="privilege" Type="Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="privilege">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserRoles">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult GetUserRoles (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserRoles roles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult GetUserRoles(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserRoles&amp; roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetUserRoles(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Properties.UserRoles@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserRoles (token As ConnectionToken, ByRef roles As UserRoles) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member GetUserRoles : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.GetUserRoles (token, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="roles" Type="Microsoft.Hpc.Scheduler.Properties.UserRoles&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="roles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserTokenAndPrivilege">
      <MemberSignature Language="C#" Value="public void GetUserTokenAndPrivilege (out Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserPrivilege privilege);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetUserTokenAndPrivilege([out] class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp; privilege) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.GetUserTokenAndPrivilege(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.UserPrivilege@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUserTokenAndPrivilege (ByRef token As ConnectionToken, ByRef privilege As UserPrivilege)" />
      <MemberSignature Language="F#" Value="abstract member GetUserTokenAndPrivilege :  *  -&gt; unit" Usage="iSchedulerStoreInternal.GetUserTokenAndPrivilege (token, privilege)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="out" />
        <Parameter Name="privilege" Type="Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="privilege">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_AddChildJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_AddChildJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int parentJobId, ref int childJobId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_AddChildJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 parentJobId, int32&amp; childJobId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_AddChildJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32@,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_AddChildJob (token As ConnectionToken, parentJobId As Integer, ByRef childJobId As Integer, jobProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_AddChildJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_AddChildJob (token, parentJobId, childJobId, jobProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="parentJobId" Type="System.Int32" />
        <Parameter Name="childJobId" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="jobProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="parentJobId">To be added.</param>
        <param name="childJobId">To be added.</param>
        <param name="jobProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_AddExcludedNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_AddExcludedNodes (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string[] nodesToAdd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_AddExcludedNodes(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, string[] nodesToAdd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_AddExcludedNodes(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_AddExcludedNodes (token As ConnectionToken, jobId As Integer, nodesToAdd As String()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_AddExcludedNodes : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * string[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_AddExcludedNodes (token, jobId, nodesToAdd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="nodesToAdd" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="nodesToAdd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_AddJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_AddJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, ref int jobId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_AddJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32&amp; jobId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_AddJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32@,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_AddJob (token As ConnectionToken, ByRef jobId As Integer, jobProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_AddJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_AddJob (token, jobId, jobProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="jobProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="jobProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_AddJobShrinkRequest">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_AddJobShrinkRequest (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int resourceId, int nodeId, Microsoft.Hpc.Scheduler.Properties.ShrinkRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_AddJobShrinkRequest(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, int32 resourceId, int32 nodeId, valuetype Microsoft.Hpc.Scheduler.Properties.ShrinkRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_AddJobShrinkRequest(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.ShrinkRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_AddJobShrinkRequest (token As ConnectionToken, jobId As Integer, resourceId As Integer, nodeId As Integer, request As ShrinkRequest) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_AddJobShrinkRequest : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * int * Microsoft.Hpc.Scheduler.Properties.ShrinkRequest -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_AddJobShrinkRequest (token, jobId, resourceId, nodeId, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="resourceId" Type="System.Int32" />
        <Parameter Name="nodeId" Type="System.Int32" />
        <Parameter Name="request" Type="Microsoft.Hpc.Scheduler.Properties.ShrinkRequest" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="resourceId">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_CancelJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_CancelJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, Microsoft.Hpc.Scheduler.Properties.CancelRequest request, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] cancelProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_CancelJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, valuetype Microsoft.Hpc.Scheduler.Properties.CancelRequest request, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] cancelProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_CancelJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Properties.CancelRequest,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_CancelJob (token As ConnectionToken, jobId As Integer, request As CancelRequest, cancelProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_CancelJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * Microsoft.Hpc.Scheduler.Properties.CancelRequest * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_CancelJob (token, jobId, request, cancelProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="request" Type="Microsoft.Hpc.Scheduler.Properties.CancelRequest" />
        <Parameter Name="cancelProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="request">To be added.</param>
        <param name="cancelProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_CancelQueuedTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_CancelQueuedTasks (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_CancelQueuedTasks(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_CancelQueuedTasks(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_CancelQueuedTasks (token As ConnectionToken, jobId As Integer, message As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_CancelQueuedTasks : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_CancelQueuedTasks (token, jobId, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_ClearExcludedNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_ClearExcludedNodes (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_ClearExcludedNodes(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_ClearExcludedNodes(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_ClearExcludedNodes (token As ConnectionToken, jobId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_ClearExcludedNodes : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_ClearExcludedNodes (token, jobId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_Clone (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobIdOld, ref int jobIdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_Clone(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobIdOld, int32&amp; jobIdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_Clone(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_Clone (token As ConnectionToken, jobIdOld As Integer, ByRef jobIdNew As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_Clone : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_Clone (token, jobIdOld, jobIdNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobIdOld" Type="System.Int32" />
        <Parameter Name="jobIdNew" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobIdOld">To be added.</param>
        <param name="jobIdNew">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_ConfigJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_ConfigJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_ConfigJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_ConfigJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_ConfigJob (token As ConnectionToken, jobId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_ConfigJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_ConfigJob (token, jobId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_DeleteJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_DeleteJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_DeleteJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_DeleteJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_DeleteJob (token As ConnectionToken, jobId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_DeleteJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_DeleteJob (token, jobId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_FinishQueuedTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_FinishQueuedTasks (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_FinishQueuedTasks(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_FinishQueuedTasks(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_FinishQueuedTasks (token As ConnectionToken, jobId As Integer, message As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_FinishQueuedTasks : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_FinishQueuedTasks (token, jobId, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_GetAllTaskCustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_GetAllTaskCustomProperties (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out Microsoft.Hpc.Scheduler.Properties.PropertyRow[] resultsRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_GetAllTaskCustomProperties(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, [out] class Microsoft.Hpc.Scheduler.Properties.PropertyRow[]&amp; resultsRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_GetAllTaskCustomProperties(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,Microsoft.Hpc.Scheduler.Properties.PropertyRow[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_GetAllTaskCustomProperties (ByRef token As ConnectionToken, jobId As Integer, ByRef resultsRow As PropertyRow()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_GetAllTaskCustomProperties :  * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_GetAllTaskCustomProperties (token, jobId, resultsRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="resultsRow" Type="Microsoft.Hpc.Scheduler.Properties.PropertyRow[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="resultsRow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_GetEnvVars">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_GetEnvVars (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out System.Collections.Generic.Dictionary&lt;string,string&gt; vars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_GetEnvVars(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, [out] class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&amp; vars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_GetEnvVars(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_GetEnvVars (ByRef token As ConnectionToken, jobId As Integer, ByRef vars As Dictionary(Of String, String)) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_GetEnvVars :  * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_GetEnvVars (token, jobId, vars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="vars" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="vars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_GetJobState">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_GetJobState (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out Microsoft.Hpc.Scheduler.Properties.JobState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_GetJobState(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, [out] valuetype Microsoft.Hpc.Scheduler.Properties.JobState&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_GetJobState(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Properties.JobState@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_GetJobState (token As ConnectionToken, jobId As Integer, ByRef state As JobState) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_GetJobState : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_GetJobState (token, jobId, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="state" Type="Microsoft.Hpc.Scheduler.Properties.JobState&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_GetShrinkRequests">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_GetShrinkRequests (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.Dictionary&lt;int,Microsoft.Hpc.Scheduler.Properties.ShrinkRequest&gt;&gt; shrinkRequestsByNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_GetShrinkRequests(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, [out] class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.Dictionary`2&lt;int32, valuetype Microsoft.Hpc.Scheduler.Properties.ShrinkRequest&gt;&gt;&amp; shrinkRequestsByNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_GetShrinkRequests(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,Microsoft.Hpc.Scheduler.Properties.ShrinkRequest}}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_GetShrinkRequests (token As ConnectionToken, jobId As Integer, ByRef shrinkRequestsByNode As Dictionary(Of String, Dictionary(Of Integer, ShrinkRequest))) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_GetShrinkRequests : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_GetShrinkRequests (token, jobId, shrinkRequestsByNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="shrinkRequestsByNode" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.Dictionary&lt;System.Int32,Microsoft.Hpc.Scheduler.Properties.ShrinkRequest&gt;&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="shrinkRequestsByNode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_RemoveExcludedNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_RemoveExcludedNodes (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string[] nodesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_RemoveExcludedNodes(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, string[] nodesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_RemoveExcludedNodes(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_RemoveExcludedNodes (token As ConnectionToken, jobId As Integer, nodesToRemove As String()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_RemoveExcludedNodes : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * string[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_RemoveExcludedNodes (token, jobId, nodesToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="nodesToRemove" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="nodesToRemove">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_RequeueJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_RequeueJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_RequeueJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_RequeueJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_RequeueJob (token As ConnectionToken, jobId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_RequeueJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_RequeueJob (token, jobId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_SetEnvVar">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_SetEnvVar (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_SetEnvVar(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_SetEnvVar(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_SetEnvVar (ByRef token As ConnectionToken, jobId As Integer, name As String, value As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_SetEnvVar :  * int * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_SetEnvVar (token, jobId, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_SetHoldUntil">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_SetHoldUntil (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, DateTime holdUntil);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_SetHoldUntil(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, valuetype System.DateTime holdUntil) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_SetHoldUntil(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_SetHoldUntil (token As ConnectionToken, jobId As Integer, holdUntil As DateTime) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_SetHoldUntil : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * DateTime -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_SetHoldUntil (token, jobId, holdUntil)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="holdUntil" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="holdUntil">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_SubmitJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_SubmitJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps, out string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_SubmitJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps, [out] string&amp; userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_SubmitJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[],System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_SubmitJob (token As ConnectionToken, jobId As Integer, jobProps As StoreProperty(), ByRef userName As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_SubmitJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_SubmitJob (token, jobId, jobProps, userName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="jobProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
        <Parameter Name="userName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="jobProps">To be added.</param>
        <param name="userName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Job_VerifyId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Job_VerifyId (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out Microsoft.Hpc.Scheduler.Properties.StoreProperty[] existingProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Job_VerifyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, [out] class Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp; existingProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Job_VerifyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Job_VerifyId (token As ConnectionToken, jobId As Integer, ByRef existingProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Job_VerifyId : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Job_VerifyId (token, jobId, existingProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="existingProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="existingProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_AddNode">
      <MemberSignature Language="C#" Value="public int Node_AddNode (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Node_AddNode(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_AddNode(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_AddNode (token As ConnectionToken, props As StoreProperty()) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Node_AddNode : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; int" Usage="iSchedulerStoreInternal.Node_AddNode (token, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_AddPhantomResource">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_AddPhantomResource (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeid, Microsoft.Hpc.Scheduler.Properties.JobType type, out int resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_AddPhantomResource(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 nodeid, valuetype Microsoft.Hpc.Scheduler.Properties.JobType type, [out] int32&amp; resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_AddPhantomResource(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Properties.JobType,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_AddPhantomResource (token As ConnectionToken, nodeid As Integer, type As JobType, ByRef resourceId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_AddPhantomResource : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * Microsoft.Hpc.Scheduler.Properties.JobType *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_AddPhantomResource (token, nodeid, type, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeid" Type="System.Int32" />
        <Parameter Name="type" Type="Microsoft.Hpc.Scheduler.Properties.JobType" />
        <Parameter Name="resourceId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeid">To be added.</param>
        <param name="type">To be added.</param>
        <param name="resourceId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_FindNodeIdByName">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdByName (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string name, out int id, out Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdByName(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, string name, [out] int32&amp; id, [out] valuetype System.Guid&amp; nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_FindNodeIdByName(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.String,System.Int32@,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_FindNodeIdByName (ByRef token As ConnectionToken, name As String, ByRef id As Integer, ByRef nodeId As Guid) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_FindNodeIdByName :  * string *  *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_FindNodeIdByName (token, name, id, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="nodeId" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="name">To be added.</param>
        <param name="id">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_FindNodeIdByNodeId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdByNodeId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid nodeId, out int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdByNodeId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype System.Guid nodeId, [out] int32&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_FindNodeIdByNodeId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_FindNodeIdByNodeId (ByRef token As ConnectionToken, nodeId As Guid, ByRef id As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_FindNodeIdByNodeId :  * Guid *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_FindNodeIdByNodeId (token, nodeId, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_FindNodeIdBySID">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdBySID (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string sid, out int id, out Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_FindNodeIdBySID(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, string sid, [out] int32&amp; id, [out] valuetype System.Guid&amp; nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_FindNodeIdBySID(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.String,System.Int32@,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_FindNodeIdBySID (ByRef token As ConnectionToken, sid As String, ByRef id As Integer, ByRef nodeId As Guid) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_FindNodeIdBySID :  * string *  *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_FindNodeIdBySID (token, sid, id, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="sid" Type="System.String" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="nodeId" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="sid">To be added.</param>
        <param name="id">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_GetActiveHeadNodeName">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_GetActiveHeadNodeName (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_GetActiveHeadNodeName(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_GetActiveHeadNodeName(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_GetActiveHeadNodeName (token As ConnectionToken, ByRef name As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_GetActiveHeadNodeName : Microsoft.Hpc.Scheduler.Store.ConnectionToken *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_GetActiveHeadNodeName (token, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="name" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_InvalidNodeQueryCache">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_InvalidNodeQueryCache (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_InvalidNodeQueryCache(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_InvalidNodeQueryCache(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_InvalidNodeQueryCache (ByRef token As ConnectionToken) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_InvalidNodeQueryCache :  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_InvalidNodeQueryCache token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_PutNodeOnline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodeOnline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodeOnline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; toke, valuetype System.Guid nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_PutNodeOnline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_PutNodeOnline (ByRef toke As ConnectionToken, nodeId As Guid) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_PutNodeOnline :  * Guid -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_PutNodeOnline (toke, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toke" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="toke">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_PutNodeOnline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodeOnline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, int nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodeOnline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; toke, int32 nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_PutNodeOnline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_PutNodeOnline (ByRef toke As ConnectionToken, nodeId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_PutNodeOnline :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_PutNodeOnline (toke, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="PutNodeOnlineByInt")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toke" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="toke">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_PutNodesOnline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodesOnline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid[] nodeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_PutNodesOnline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype System.Guid[] nodeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_PutNodesOnline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_PutNodesOnline (ByRef token As ConnectionToken, nodeIds As Guid()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_PutNodesOnline :  * Guid[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_PutNodesOnline (token, nodeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeIds" Type="System.Guid[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_RemoveNode">
      <MemberSignature Language="C#" Value="public void Node_RemoveNode (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Node_RemoveNode(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, valuetype System.Guid nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_RemoveNode(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Node_RemoveNode (token As ConnectionToken, nodeId As Guid)" />
      <MemberSignature Language="F#" Value="abstract member Node_RemoveNode : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Guid -&gt; unit" Usage="iSchedulerStoreInternal.Node_RemoveNode (token, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_RemovePhantomResource">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_RemovePhantomResource (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_RemovePhantomResource(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_RemovePhantomResource(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_RemovePhantomResource (token As ConnectionToken, resourceId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_RemovePhantomResource : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_RemovePhantomResource (token, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="resourceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="resourceId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_SetDrainingNodesOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_SetDrainingNodesOffline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_SetDrainingNodesOffline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_SetDrainingNodesOffline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_SetDrainingNodesOffline (ByRef token As ConnectionToken) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_SetDrainingNodesOffline :  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_SetDrainingNodesOffline token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_SetNodeReachable">
      <MemberSignature Language="C#" Value="public void Node_SetNodeReachable (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid nodeid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Node_SetNodeReachable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, valuetype System.Guid nodeid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_SetNodeReachable(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Node_SetNodeReachable (token As ConnectionToken, nodeid As Guid)" />
      <MemberSignature Language="F#" Value="abstract member Node_SetNodeReachable : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Guid -&gt; unit" Usage="iSchedulerStoreInternal.Node_SetNodeReachable (token, nodeid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeid">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_SetNodeReachable">
      <MemberSignature Language="C#" Value="public void Node_SetNodeReachable (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Node_SetNodeReachable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 nodeid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_SetNodeReachable(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Node_SetNodeReachable (token As ConnectionToken, nodeid As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Node_SetNodeReachable : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; unit" Usage="iSchedulerStoreInternal.Node_SetNodeReachable (token, nodeid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeid">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_SetNodeUnreachable">
      <MemberSignature Language="C#" Value="public void Node_SetNodeUnreachable (Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, Guid nodeid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Node_SetNodeUnreachable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken toke, valuetype System.Guid nodeid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_SetNodeUnreachable(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Node_SetNodeUnreachable (toke As ConnectionToken, nodeid As Guid)" />
      <MemberSignature Language="F#" Value="abstract member Node_SetNodeUnreachable : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Guid -&gt; unit" Usage="iSchedulerStoreInternal.Node_SetNodeUnreachable (toke, nodeid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toke" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="toke">To be added.</param>
        <param name="nodeid">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_SetNodeUnreachable">
      <MemberSignature Language="C#" Value="public void Node_SetNodeUnreachable (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Node_SetNodeUnreachable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 nodeid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_SetNodeUnreachable(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Node_SetNodeUnreachable (token As ConnectionToken, nodeid As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Node_SetNodeUnreachable : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; unit" Usage="iSchedulerStoreInternal.Node_SetNodeUnreachable (token, nodeid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeid">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_TakeNodeOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype System.Guid nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_TakeNodeOffline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_TakeNodeOffline (ByRef token As ConnectionToken, nodeId As Guid) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_TakeNodeOffline :  * Guid -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_TakeNodeOffline (token, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="TakeNodeOfflineWithoutForce")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_TakeNodeOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_TakeNodeOffline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_TakeNodeOffline (ByRef token As ConnectionToken, nodeId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_TakeNodeOffline :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_TakeNodeOffline (token, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="TakeNodeOfflineByInt")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_TakeNodeOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid nodeId, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodeOffline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype System.Guid nodeId, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_TakeNodeOffline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_TakeNodeOffline (ByRef token As ConnectionToken, nodeId As Guid, force As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_TakeNodeOffline :  * Guid * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_TakeNodeOffline (token, nodeId, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeId" Type="System.Guid" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="force">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_TakeNodesOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodesOffline (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Guid[] nodeIds, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_TakeNodesOffline(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype System.Guid[] nodeIds, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_TakeNodesOffline(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Guid[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_TakeNodesOffline (ByRef token As ConnectionToken, nodeIds As Guid(), force As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_TakeNodesOffline :  * Guid[] * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_TakeNodesOffline (token, nodeIds, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="nodeIds" Type="System.Guid[]" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeIds">To be added.</param>
        <param name="force">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node_ValidateNodeId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Node_ValidateNodeId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int id, out Guid nodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Node_ValidateNodeId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 id, [out] valuetype System.Guid&amp; nodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Node_ValidateNodeId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Node_ValidateNodeId (ByRef token As ConnectionToken, id As Integer, ByRef nodeId As Guid) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Node_ValidateNodeId :  * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Node_ValidateNodeId (token, id, nodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="nodeId" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="id">To be added.</param>
        <param name="nodeId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object_EnumeratorPermissionCheck">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Object_EnumeratorPermissionCheck (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int parentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Object_EnumeratorPermissionCheck(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int32 parentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Object_EnumeratorPermissionCheck(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Object_EnumeratorPermissionCheck (ByRef token As ConnectionToken, obType As ObjectType, parentId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Object_EnumeratorPermissionCheck :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Object_EnumeratorPermissionCheck (token, obType, parentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="parentId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="parentId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object_GetCustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Object_GetCustomProperties (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int obId, out Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Object_GetCustomProperties(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int32 obId, [out] class Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp; props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Object_GetCustomProperties(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Object_GetCustomProperties (ByRef token As ConnectionToken, obType As ObjectType, obId As Integer, ByRef props As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Object_GetCustomProperties :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Object_GetCustomProperties (token, obType, obId, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="obId" Type="System.Int32" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="obId">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object_GetProps">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Object_GetProps (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int obId, Microsoft.Hpc.Scheduler.Properties.PropertyId[] ids, out Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Object_GetProps(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int32 obId, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] ids, [out] class Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp; props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Object_GetProps(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.Int32,Microsoft.Hpc.Scheduler.Properties.PropertyId[],Microsoft.Hpc.Scheduler.Properties.StoreProperty[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Object_GetProps (ByRef token As ConnectionToken, obType As ObjectType, obId As Integer, ids As PropertyId(), ByRef props As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Object_GetProps :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * int * Microsoft.Hpc.Scheduler.Properties.PropertyId[] *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Object_GetProps (token, obType, obId, ids, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="obId" Type="System.Int32" />
        <Parameter Name="ids" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="obId">To be added.</param>
        <param name="ids">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object_SetProps">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Object_SetProps (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int obId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Object_SetProps(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, int32 obId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Object_SetProps(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Object_SetProps (ByRef token As ConnectionToken, obType As ObjectType, obId As Integer, props As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Object_SetProps :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * int * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Object_SetProps (token, obType, obId, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="obId" Type="System.Int32" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="obId">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekTaskOutput">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; PeekTaskOutput (Microsoft.Hpc.Scheduler.Store.ConnectionToken cToken, int jobId, int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; PeekTaskOutput(class Microsoft.Hpc.Scheduler.Store.ConnectionToken cToken, int32 jobId, int32 taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.PeekTaskOutput(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekTaskOutput (cToken As ConnectionToken, jobId As Integer, taskId As Integer) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member PeekTaskOutput : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iSchedulerStoreInternal.PeekTaskOutput (cToken, jobId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cToken" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cToken">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public Guid Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid Ping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Ping" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping () As Guid" />
      <MemberSignature Language="F#" Value="abstract member Ping : unit -&gt; Guid" Usage="iSchedulerStoreInternal.Ping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool_AddPool">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Pool_AddPool (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, out int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Pool_AddPool(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, [out] int32&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Pool_AddPool(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pool_AddPool (token As ConnectionToken, poolName As String, ByRef id As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Pool_AddPool : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Pool_AddPool (token, poolName, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="poolName">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool_AddPool">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Pool_AddPool (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, int poolWeight, out int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Pool_AddPool(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, int32 poolWeight, [out] int32&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Pool_AddPool(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pool_AddPool (token As ConnectionToken, poolName As String, poolWeight As Integer, ByRef id As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Pool_AddPool : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Pool_AddPool (token, poolName, poolWeight, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="Pool_AddPoolWithWeight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="poolWeight" Type="System.Int32" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="poolName">To be added.</param>
        <param name="poolWeight">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool_DeletePool">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Pool_DeletePool (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Pool_DeletePool(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Pool_DeletePool(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pool_DeletePool (token As ConnectionToken, poolName As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Pool_DeletePool : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Pool_DeletePool (token, poolName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="Pool_DeltePoolWithoutForce")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="poolName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="poolName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool_DeletePool">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Pool_DeletePool (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Pool_DeletePool(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Pool_DeletePool(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pool_DeletePool (token As ConnectionToken, poolName As String, force As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Pool_DeletePool : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Pool_DeletePool (token, poolName, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="poolName">To be added.</param>
        <param name="force">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool_FindPoolIdByName">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Pool_FindPoolIdByName (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, out int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Pool_FindPoolIdByName(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string poolName, [out] int32&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Pool_FindPoolIdByName(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pool_FindPoolIdByName (token As ConnectionToken, poolName As String, ByRef id As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Pool_FindPoolIdByName : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Pool_FindPoolIdByName (token, poolName, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="poolName">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile_CloneProfile">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Profile_CloneProfile (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int currentProfileId, string newProfileName, out int newProfileId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Profile_CloneProfile(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 currentProfileId, string newProfileName, [out] int32&amp; newProfileId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Profile_CloneProfile(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Profile_CloneProfile (ByRef token As ConnectionToken, currentProfileId As Integer, newProfileName As String, ByRef newProfileId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Profile_CloneProfile :  * int * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Profile_CloneProfile (token, currentProfileId, newProfileName, newProfileId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="currentProfileId" Type="System.Int32" />
        <Parameter Name="newProfileName" Type="System.String" />
        <Parameter Name="newProfileId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="currentProfileId">To be added.</param>
        <param name="newProfileName">To be added.</param>
        <param name="newProfileId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile_CreateProfile">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Profile_CreateProfile (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string profileName, out int profileId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Profile_CreateProfile(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, string profileName, [out] int32&amp; profileId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Profile_CreateProfile(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Profile_CreateProfile (ByRef token As ConnectionToken, profileName As String, ByRef profileId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Profile_CreateProfile :  * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Profile_CreateProfile (token, profileName, profileId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="profileName" Type="System.String" />
        <Parameter Name="profileId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileName">To be added.</param>
        <param name="profileId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile_DeleteProfile">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Profile_DeleteProfile (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int profileId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Profile_DeleteProfile(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 profileId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Profile_DeleteProfile(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Profile_DeleteProfile (ByRef token As ConnectionToken, profileId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Profile_DeleteProfile :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Profile_DeleteProfile (token, profileId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="profileId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile_ItemOp">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Profile_ItemOp (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int profileId, Microsoft.Hpc.Scheduler.Store.ProfileItemOperator op, Microsoft.Hpc.Scheduler.Properties.PropertyId pid, Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Profile_ItemOp(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 profileId, valuetype Microsoft.Hpc.Scheduler.Store.ProfileItemOperator op, class Microsoft.Hpc.Scheduler.Properties.PropertyId pid, class Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Profile_ItemOp(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,Microsoft.Hpc.Scheduler.Store.ProfileItemOperator,Microsoft.Hpc.Scheduler.Properties.PropertyId,Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Profile_ItemOp (token As ConnectionToken, profileId As Integer, op As ProfileItemOperator, pid As PropertyId, item As ClusterJobProfileItem) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Profile_ItemOp : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * Microsoft.Hpc.Scheduler.Store.ProfileItemOperator * Microsoft.Hpc.Scheduler.Properties.PropertyId * Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Profile_ItemOp (token, profileId, op, pid, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="profileId" Type="System.Int32" />
        <Parameter Name="op" Type="Microsoft.Hpc.Scheduler.Store.ProfileItemOperator" />
        <Parameter Name="pid" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId" />
        <Parameter Name="item" Type="Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileId">To be added.</param>
        <param name="op">To be added.</param>
        <param name="pid">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile_UpdateItems">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Profile_UpdateItems (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int profileId, System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty&gt; props, System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem&gt; items, bool merge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Profile_UpdateItems(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 profileId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Hpc.Scheduler.Properties.StoreProperty&gt; props, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem&gt; items, bool merge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Profile_UpdateItems(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.Hpc.Scheduler.Properties.StoreProperty},System.Collections.Generic.IEnumerable{Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Profile_UpdateItems (ByRef token As ConnectionToken, profileId As Integer, props As IEnumerable(Of StoreProperty), items As IEnumerable(Of ClusterJobProfileItem), merge As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Profile_UpdateItems :  * int * seq&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty&gt; * seq&lt;Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem&gt; * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Profile_UpdateItems (token, profileId, props, items, merge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="profileId" Type="System.Int32" />
        <Parameter Name="props" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Store.ClusterJobProfileItem&gt;" />
        <Parameter Name="merge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileId">To be added.</param>
        <param name="props">To be added.</param>
        <param name="items">To be added.</param>
        <param name="merge">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prop_CreatePropertyId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Prop_CreatePropertyId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType type, Microsoft.Hpc.Scheduler.Properties.StorePropertyType propertyType, string propertyName, string propertyDescription, out Microsoft.Hpc.Scheduler.Properties.PropertyId pid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Prop_CreatePropertyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType type, valuetype Microsoft.Hpc.Scheduler.Properties.StorePropertyType propertyType, string propertyName, string propertyDescription, [out] class Microsoft.Hpc.Scheduler.Properties.PropertyId&amp; pid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Prop_CreatePropertyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,Microsoft.Hpc.Scheduler.Properties.StorePropertyType,System.String,System.String,Microsoft.Hpc.Scheduler.Properties.PropertyId@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prop_CreatePropertyId (ByRef token As ConnectionToken, type As ObjectType, propertyType As StorePropertyType, propertyName As String, propertyDescription As String, ByRef pid As PropertyId) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Prop_CreatePropertyId :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * Microsoft.Hpc.Scheduler.Properties.StorePropertyType * string * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Prop_CreatePropertyId (token, type, propertyType, propertyName, propertyDescription, pid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="type" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="propertyType" Type="Microsoft.Hpc.Scheduler.Properties.StorePropertyType" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyDescription" Type="System.String" />
        <Parameter Name="pid" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="type">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyDescription">To be added.</param>
        <param name="pid">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prop_GetDescriptors">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Prop_GetDescriptors (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, string[] names, out Microsoft.Hpc.Scheduler.Store.ServerPropertyDescriptor[] result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Prop_GetDescriptors(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, string[] names, [out] class Microsoft.Hpc.Scheduler.Store.ServerPropertyDescriptor[]&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Prop_GetDescriptors(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.String[],Microsoft.Hpc.Scheduler.Store.ServerPropertyDescriptor[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prop_GetDescriptors (ByRef token As ConnectionToken, obType As ObjectType, names As String(), ByRef result As ServerPropertyDescriptor()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Prop_GetDescriptors :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * string[] *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Prop_GetDescriptors (token, obType, names, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="result" Type="Microsoft.Hpc.Scheduler.Store.ServerPropertyDescriptor[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="names">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prop_GetPropertyId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Prop_GetPropertyId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType obType, Microsoft.Hpc.Scheduler.Properties.StorePropertyType propType, string propertyName, out Microsoft.Hpc.Scheduler.Properties.PropertyId pid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Prop_GetPropertyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType obType, valuetype Microsoft.Hpc.Scheduler.Properties.StorePropertyType propType, string propertyName, [out] class Microsoft.Hpc.Scheduler.Properties.PropertyId&amp; pid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Prop_GetPropertyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,Microsoft.Hpc.Scheduler.Properties.StorePropertyType,System.String,Microsoft.Hpc.Scheduler.Properties.PropertyId@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prop_GetPropertyId (ByRef token As ConnectionToken, obType As ObjectType, propType As StorePropertyType, propertyName As String, ByRef pid As PropertyId) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Prop_GetPropertyId :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * Microsoft.Hpc.Scheduler.Properties.StorePropertyType * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Prop_GetPropertyId (token, obType, propType, propertyName, pid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="obType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="propType" Type="Microsoft.Hpc.Scheduler.Properties.StorePropertyType" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="pid" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="obType">To be added.</param>
        <param name="propType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="pid">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Register (string clientSource, string userName, Microsoft.Hpc.Scheduler.Store.ConnectionRole role, Version clientVersion, out Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserPrivilege privilege, out Version serverVersion, out System.Collections.Generic.Dictionary&lt;string,object&gt; serverProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Register(string clientSource, string userName, valuetype Microsoft.Hpc.Scheduler.Store.ConnectionRole role, class System.Version clientVersion, [out] class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp; privilege, [out] class System.Version&amp; serverVersion, [out] class System.Collections.Generic.Dictionary`2&lt;string, object&gt;&amp; serverProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Register(System.String,System.String,Microsoft.Hpc.Scheduler.Store.ConnectionRole,System.Version,Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.UserPrivilege@,System.Version@,System.Collections.Generic.Dictionary{System.String,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (clientSource As String, userName As String, role As ConnectionRole, clientVersion As Version, ByRef token As ConnectionToken, ByRef privilege As UserPrivilege, ByRef serverVersion As Version, ByRef serverProps As Dictionary(Of String, Object)) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Register : string * string * Microsoft.Hpc.Scheduler.Store.ConnectionRole * Version *  *  *  *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Register (clientSource, userName, role, clientVersion, token, privilege, serverVersion, serverProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSource" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="role" Type="Microsoft.Hpc.Scheduler.Store.ConnectionRole" />
        <Parameter Name="clientVersion" Type="System.Version" />
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="out" />
        <Parameter Name="privilege" Type="Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp;" RefType="out" />
        <Parameter Name="serverVersion" Type="System.Version&amp;" RefType="out" />
        <Parameter Name="serverProps" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="clientSource">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="role">To be added.</param>
        <param name="clientVersion">To be added.</param>
        <param name="token">To be added.</param>
        <param name="privilege">To be added.</param>
        <param name="serverVersion">To be added.</param>
        <param name="serverProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterConfigChangeHandler">
      <MemberSignature Language="C#" Value="public void RegisterConfigChangeHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterConfigChangeHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterConfigChangeHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConfigChangeHandler (token As ConnectionToken, handler As ClusterConfigChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterConfigChangeHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterConfigChangeHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterEventPacketHandler">
      <MemberSignature Language="C#" Value="public void RegisterEventPacketHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventPacketHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterEventPacketHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventPacketHandler (token As ConnectionToken, handler As ProcessEventPacketDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterEventPacketHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterEventPacketHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterJobStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterJobStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterJobStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterJobStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterJobStateHandler (token As ConnectionToken, handler As JobStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterJobStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterJobStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterJobStateHandlerEx">
      <MemberSignature Language="C#" Value="public void RegisterJobStateHandlerEx (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterJobStateHandlerEx(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterJobStateHandlerEx(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterJobStateHandlerEx (token As ConnectionToken, handler As JobStateChangeDelegateEx)" />
      <MemberSignature Language="F#" Value="abstract member RegisterJobStateHandlerEx : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx -&gt; unit" Usage="iSchedulerStoreInternal.RegisterJobStateHandlerEx (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNodeStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterNodeStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterNodeStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterNodeStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterNodeStateHandler (token As ConnectionToken, handler As NodeStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterNodeStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterNodeStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterOverHttp">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RegisterOverHttp (string clientSource, string userName, Microsoft.Hpc.Scheduler.Store.ConnectionRole role, Version clientVersion, out Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserPrivilege privilege, out Version serverVersion, out System.Collections.Generic.Dictionary&lt;string,object&gt; serverProps, out int clientId, out int clientEventSleepPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RegisterOverHttp(string clientSource, string userName, valuetype Microsoft.Hpc.Scheduler.Store.ConnectionRole role, class System.Version clientVersion, [out] class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp; privilege, [out] class System.Version&amp; serverVersion, [out] class System.Collections.Generic.Dictionary`2&lt;string, object&gt;&amp; serverProps, [out] int32&amp; clientId, [out] int32&amp; clientEventSleepPeriod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterOverHttp(System.String,System.String,Microsoft.Hpc.Scheduler.Store.ConnectionRole,System.Version,Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.UserPrivilege@,System.Version@,System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterOverHttp (clientSource As String, userName As String, role As ConnectionRole, clientVersion As Version, ByRef token As ConnectionToken, ByRef privilege As UserPrivilege, ByRef serverVersion As Version, ByRef serverProps As Dictionary(Of String, Object), ByRef clientId As Integer, ByRef clientEventSleepPeriod As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RegisterOverHttp : string * string * Microsoft.Hpc.Scheduler.Store.ConnectionRole * Version *  *  *  *  *  *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RegisterOverHttp (clientSource, userName, role, clientVersion, token, privilege, serverVersion, serverProps, clientId, clientEventSleepPeriod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSource" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="role" Type="Microsoft.Hpc.Scheduler.Store.ConnectionRole" />
        <Parameter Name="clientVersion" Type="System.Version" />
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="out" />
        <Parameter Name="privilege" Type="Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp;" RefType="out" />
        <Parameter Name="serverVersion" Type="System.Version&amp;" RefType="out" />
        <Parameter Name="serverProps" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;&amp;" RefType="out" />
        <Parameter Name="clientId" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="clientEventSleepPeriod" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="clientSource">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="role">To be added.</param>
        <param name="clientVersion">To be added.</param>
        <param name="token">To be added.</param>
        <param name="privilege">To be added.</param>
        <param name="serverVersion">To be added.</param>
        <param name="serverProps">To be added.</param>
        <param name="clientId">To be added.</param>
        <param name="clientEventSleepPeriod">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterResourceStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterResourceStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterResourceStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterResourceStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterResourceStateHandler (token As ConnectionToken, handler As ResourceStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterResourceStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterResourceStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTaskStateChange">
      <MemberSignature Language="C#" Value="public void RegisterTaskStateChange (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterTaskStateChange(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterTaskStateChange(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterTaskStateChange (token As ConnectionToken, handler As TaskStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member RegisterTaskStateChange : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.RegisterTaskStateChange (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterV2">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RegisterV2 (string clientSource, string userName, Microsoft.Hpc.Scheduler.Store.ConnectionRole role, out Microsoft.Hpc.Scheduler.Store.ConnectionToken token, out Microsoft.Hpc.Scheduler.Properties.UserPrivilege privilege);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RegisterV2(string clientSource, string userName, valuetype Microsoft.Hpc.Scheduler.Store.ConnectionRole role, [out] class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, [out] valuetype Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp; privilege) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RegisterV2(System.String,System.String,Microsoft.Hpc.Scheduler.Store.ConnectionRole,Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.UserPrivilege@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterV2 (clientSource As String, userName As String, role As ConnectionRole, ByRef token As ConnectionToken, ByRef privilege As UserPrivilege) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RegisterV2 : string * string * Microsoft.Hpc.Scheduler.Store.ConnectionRole *  *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RegisterV2 (clientSource, userName, role, token, privilege)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSource" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="role" Type="Microsoft.Hpc.Scheduler.Store.ConnectionRole" />
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="out" />
        <Parameter Name="privilege" Type="Microsoft.Hpc.Scheduler.Properties.UserPrivilege&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="clientSource">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="role">To be added.</param>
        <param name="token">To be added.</param>
        <param name="privilege">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEvent_CloseClient">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_CloseClient (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int connectonId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_CloseClient(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 connectonId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RemoteEvent_CloseClient(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEvent_CloseClient (ByRef token As ConnectionToken, connectonId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RemoteEvent_CloseClient :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RemoteEvent_CloseClient (token, connectonId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="connectonId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="connectonId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEvent_GetEventPort">
      <MemberSignature Language="C#" Value="public int RemoteEvent_GetEventPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RemoteEvent_GetEventPort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RemoteEvent_GetEventPort" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEvent_GetEventPort () As Integer" />
      <MemberSignature Language="F#" Value="abstract member RemoteEvent_GetEventPort : unit -&gt; int" Usage="iSchedulerStoreInternal.RemoteEvent_GetEventPort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEvent_RegisterForEvent">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_RegisterForEvent (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.Packets.EventObjectClass objectClass, int objectId, int parentObjectId, int connectionId, out int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_RegisterForEvent(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Store.Packets/EventObjectClass objectClass, int32 objectId, int32 parentObjectId, int32 connectionId, [out] int32&amp; eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RemoteEvent_RegisterForEvent(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Store.Packets.EventObjectClass,System.Int32,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEvent_RegisterForEvent (ByRef token As ConnectionToken, objectClass As Packets.EventObjectClass, objectId As Integer, parentObjectId As Integer, connectionId As Integer, ByRef eventId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RemoteEvent_RegisterForEvent :  * Microsoft.Hpc.Scheduler.Store.Packets.EventObjectClass * int * int * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RemoteEvent_RegisterForEvent (token, objectClass, objectId, parentObjectId, connectionId, eventId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="objectClass" Type="Microsoft.Hpc.Scheduler.Store.Packets+EventObjectClass" />
        <Parameter Name="objectId" Type="System.Int32" />
        <Parameter Name="parentObjectId" Type="System.Int32" />
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="eventId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="objectClass">To be added.</param>
        <param name="objectId">To be added.</param>
        <param name="parentObjectId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="eventId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEvent_TriggerTouch">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_TriggerTouch (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int connectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_TriggerTouch(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 connectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RemoteEvent_TriggerTouch(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEvent_TriggerTouch (ByRef token As ConnectionToken, connectionId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RemoteEvent_TriggerTouch :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RemoteEvent_TriggerTouch (token, connectionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="connectionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="connectionId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEvent_UnRegisterForEvent">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_UnRegisterForEvent (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int connectionId, int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RemoteEvent_UnRegisterForEvent(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 connectionId, int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RemoteEvent_UnRegisterForEvent(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEvent_UnRegisterForEvent (ByRef token As ConnectionToken, connectionId As Integer, eventId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RemoteEvent_UnRegisterForEvent :  * int * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RemoteEvent_UnRegisterForEvent (token, connectionId, eventId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="eventId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveResourceForJob">
      <MemberSignature Language="C#" Value="public void ReserveResourceForJob (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int resourceId, int jobId, DateTime limitTime, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReserveResourceForJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 resourceId, int32 jobId, valuetype System.DateTime limitTime, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.ReserveResourceForJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,System.DateTime,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReserveResourceForJob (token As ConnectionToken, resourceId As Integer, jobId As Integer, limitTime As DateTime, jobProperties As StoreProperty())" />
      <MemberSignature Language="F#" Value="abstract member ReserveResourceForJob : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * DateTime * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; unit" Usage="iSchedulerStoreInternal.ReserveResourceForJob (token, resourceId, jobId, limitTime, jobProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="resourceId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="limitTime" Type="System.DateTime" />
        <Parameter Name="jobProperties" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="resourceId">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="limitTime">To be added.</param>
        <param name="jobProperties">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEnum_Close">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_Close (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_Close(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowEnum_Close(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowEnum_Close (ByRef token As ConnectionToken, id As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowEnum_Close :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowEnum_Close (token, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEnum_GetRows">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Properties.PropertyRowSet RowEnum_GetRows (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int id, int numberOfRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Properties.PropertyRowSet RowEnum_GetRows(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 id, int32 numberOfRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowEnum_GetRows(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowEnum_GetRows (ByRef token As ConnectionToken, id As Integer, numberOfRows As Integer) As PropertyRowSet" />
      <MemberSignature Language="F#" Value="abstract member RowEnum_GetRows :  * int * int -&gt; Microsoft.Hpc.Scheduler.Properties.PropertyRowSet" Usage="iSchedulerStoreInternal.RowEnum_GetRows (token, id, numberOfRows)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Properties.PropertyRowSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="numberOfRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="id">To be added.</param>
        <param name="numberOfRows">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEnum_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowEnum_Open (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, int options, Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowEnum_Open(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, int32 options, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, class Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, class Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowEnum_Open(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,System.Int32,Microsoft.Hpc.Scheduler.Properties.PropertyId[],Microsoft.Hpc.Scheduler.Properties.FilterProperty[],Microsoft.Hpc.Scheduler.Properties.SortProperty[])" />
      <MemberSignature Language="F#" Value="abstract member RowEnum_Open :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * int * Microsoft.Hpc.Scheduler.Properties.PropertyId[] * Microsoft.Hpc.Scheduler.Properties.FilterProperty[] * Microsoft.Hpc.Scheduler.Properties.SortProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowEnum_Open (token, objectType, options, columns, filter, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="objectType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="options" Type="System.Int32" />
        <Parameter Name="columns" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="filter" Type="Microsoft.Hpc.Scheduler.Properties.FilterProperty[]" />
        <Parameter Name="sort" Type="Microsoft.Hpc.Scheduler.Properties.SortProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="objectType">To be added.</param>
        <param name="options">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="sort">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEnum_SetProps">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_SetProps (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props, Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_SetProps(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props, class Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowEnum_SetProps(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,Microsoft.Hpc.Scheduler.Properties.StoreProperty[],Microsoft.Hpc.Scheduler.Properties.FilterProperty[])" />
      <MemberSignature Language="F#" Value="abstract member RowEnum_SetProps :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] * Microsoft.Hpc.Scheduler.Properties.FilterProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowEnum_SetProps (token, objectType, props, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="objectType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
        <Parameter Name="filter" Type="Microsoft.Hpc.Scheduler.Properties.FilterProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="objectType">To be added.</param>
        <param name="props">To be added.</param>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEnum_Touch">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_Touch (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowenumId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowEnum_Touch(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowenumId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowEnum_Touch(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowEnum_Touch (ByRef token As ConnectionToken, rowenumId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowEnum_Touch :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowEnum_Touch (token, rowenumId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowenumId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowenumId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_CloseRowSet">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowSet_CloseRowSet (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowSet_CloseRowSet(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_CloseRowSet(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_CloseRowSet (ByRef token As ConnectionToken, rowsetId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_CloseRowSet :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowSet_CloseRowSet (token, rowsetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_Freeze">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_Freeze (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_Freeze(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_Freeze(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_Freeze (ByRef token As ConnectionToken, rowsetId As Integer) As RowSetResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_Freeze :  * int -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowSet_Freeze (token, rowsetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_GetData">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_GetData (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId, int firstRow, int lastRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_GetData(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId, int32 firstRow, int32 lastRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_GetData(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_GetData (ByRef token As ConnectionToken, rowsetId As Integer, firstRow As Integer, lastRow As Integer) As RowSetResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_GetData :  * int * int * int -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowSet_GetData (token, rowsetId, firstRow, lastRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
        <Parameter Name="firstRow" Type="System.Int32" />
        <Parameter Name="lastRow" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <param name="firstRow">To be added.</param>
        <param name="lastRow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_GetDataWithWindowBoundary">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_GetDataWithWindowBoundary (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId, int firstRow, int lastRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_GetDataWithWindowBoundary(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId, int32 firstRow, int32 lastRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_GetDataWithWindowBoundary(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_GetDataWithWindowBoundary (ByRef token As ConnectionToken, rowsetId As Integer, firstRow As Integer, lastRow As Integer) As RowSetResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_GetDataWithWindowBoundary :  * int * int * int -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowSet_GetDataWithWindowBoundary (token, rowsetId, firstRow, lastRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
        <Parameter Name="firstRow" Type="System.Int32" />
        <Parameter Name="lastRow" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <param name="firstRow">To be added.</param>
        <param name="lastRow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_GetObjectIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowSet_GetObjectIndex (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId, int objectId, out int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowSet_GetObjectIndex(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId, int32 objectId, [out] int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_GetObjectIndex(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_GetObjectIndex (ByRef token As ConnectionToken, rowsetId As Integer, objectId As Integer, ByRef index As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_GetObjectIndex :  * int * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowSet_GetObjectIndex (token, rowsetId, objectId, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
        <Parameter Name="objectId" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <param name="objectId">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_OpenRowSet">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_OpenRowSet (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, Microsoft.Hpc.Scheduler.Store.RowSetType rowsetType, int flags, Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort, Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] aggragate, Microsoft.Hpc.Scheduler.Properties.PropertyId[] orderby, Microsoft.Hpc.Scheduler.Properties.PropertyId[] frozenIds, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_OpenRowSet(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, valuetype Microsoft.Hpc.Scheduler.Store.RowSetType rowsetType, int32 flags, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, class Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, class Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort, class Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] aggragate, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] orderby, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] frozenIds, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_OpenRowSet(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,Microsoft.Hpc.Scheduler.Store.RowSetType,System.Int32,Microsoft.Hpc.Scheduler.Properties.PropertyId[],Microsoft.Hpc.Scheduler.Properties.FilterProperty[],Microsoft.Hpc.Scheduler.Properties.SortProperty[],Microsoft.Hpc.Scheduler.Properties.AggregateColumn[],Microsoft.Hpc.Scheduler.Properties.PropertyId[],Microsoft.Hpc.Scheduler.Properties.PropertyId[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RowSet_OpenRowSet :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * Microsoft.Hpc.Scheduler.Store.RowSetType * int * Microsoft.Hpc.Scheduler.Properties.PropertyId[] * Microsoft.Hpc.Scheduler.Properties.FilterProperty[] * Microsoft.Hpc.Scheduler.Properties.SortProperty[] * Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] * Microsoft.Hpc.Scheduler.Properties.PropertyId[] * Microsoft.Hpc.Scheduler.Properties.PropertyId[] * int -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowSet_OpenRowSet (token, objectType, rowsetType, flags, columns, filter, sort, aggragate, orderby, frozenIds, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="objectType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="rowsetType" Type="Microsoft.Hpc.Scheduler.Store.RowSetType" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="columns" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="filter" Type="Microsoft.Hpc.Scheduler.Properties.FilterProperty[]" />
        <Parameter Name="sort" Type="Microsoft.Hpc.Scheduler.Properties.SortProperty[]" />
        <Parameter Name="aggragate" Type="Microsoft.Hpc.Scheduler.Properties.AggregateColumn[]" />
        <Parameter Name="orderby" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="frozenIds" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="objectType">To be added.</param>
        <param name="rowsetType">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="sort">To be added.</param>
        <param name="aggragate">To be added.</param>
        <param name="orderby">To be added.</param>
        <param name="frozenIds">To be added.</param>
        <param name="top">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_OpenRowSetV2">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_OpenRowSetV2 (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, Microsoft.Hpc.Scheduler.Store.RowSetType rowsetType, int flags, Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort, Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] aggragate, Microsoft.Hpc.Scheduler.Properties.PropertyId[] orderby);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.RowSetResult RowSet_OpenRowSetV2(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, valuetype Microsoft.Hpc.Scheduler.Properties.ObjectType objectType, valuetype Microsoft.Hpc.Scheduler.Store.RowSetType rowsetType, int32 flags, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] columns, class Microsoft.Hpc.Scheduler.Properties.FilterProperty[] filter, class Microsoft.Hpc.Scheduler.Properties.SortProperty[] sort, class Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] aggragate, class Microsoft.Hpc.Scheduler.Properties.PropertyId[] orderby) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_OpenRowSetV2(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Properties.ObjectType,Microsoft.Hpc.Scheduler.Store.RowSetType,System.Int32,Microsoft.Hpc.Scheduler.Properties.PropertyId[],Microsoft.Hpc.Scheduler.Properties.FilterProperty[],Microsoft.Hpc.Scheduler.Properties.SortProperty[],Microsoft.Hpc.Scheduler.Properties.AggregateColumn[],Microsoft.Hpc.Scheduler.Properties.PropertyId[])" />
      <MemberSignature Language="F#" Value="abstract member RowSet_OpenRowSetV2 :  * Microsoft.Hpc.Scheduler.Properties.ObjectType * Microsoft.Hpc.Scheduler.Store.RowSetType * int * Microsoft.Hpc.Scheduler.Properties.PropertyId[] * Microsoft.Hpc.Scheduler.Properties.FilterProperty[] * Microsoft.Hpc.Scheduler.Properties.SortProperty[] * Microsoft.Hpc.Scheduler.Properties.AggregateColumn[] * Microsoft.Hpc.Scheduler.Properties.PropertyId[] -&gt; Microsoft.Hpc.Scheduler.Store.RowSetResult" Usage="iSchedulerStoreInternal.RowSet_OpenRowSetV2 (token, objectType, rowsetType, flags, columns, filter, sort, aggragate, orderby)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.RowSetResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="objectType" Type="Microsoft.Hpc.Scheduler.Properties.ObjectType" />
        <Parameter Name="rowsetType" Type="Microsoft.Hpc.Scheduler.Store.RowSetType" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="columns" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
        <Parameter Name="filter" Type="Microsoft.Hpc.Scheduler.Properties.FilterProperty[]" />
        <Parameter Name="sort" Type="Microsoft.Hpc.Scheduler.Properties.SortProperty[]" />
        <Parameter Name="aggragate" Type="Microsoft.Hpc.Scheduler.Properties.AggregateColumn[]" />
        <Parameter Name="orderby" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="objectType">To be added.</param>
        <param name="rowsetType">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="sort">To be added.</param>
        <param name="aggragate">To be added.</param>
        <param name="orderby">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_Thaw">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowSet_Thaw (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowSet_Thaw(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_Thaw(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_Thaw (ByRef token As ConnectionToken, rowsetId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_Thaw :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowSet_Thaw (token, rowsetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSet_TouchRowSet">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RowSet_TouchRowSet (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int rowsetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RowSet_TouchRowSet(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 rowsetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RowSet_TouchRowSet(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowSet_TouchRowSet (ByRef token As ConnectionToken, rowsetId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RowSet_TouchRowSet :  * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RowSet_TouchRowSet (token, rowsetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="rowsetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="rowsetId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunTransaction">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult RunTransaction (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.StoreTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult RunTransaction(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, class Microsoft.Hpc.Scheduler.Store.StoreTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.RunTransaction(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,Microsoft.Hpc.Scheduler.Store.StoreTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunTransaction (ByRef token As ConnectionToken, transaction As StoreTransaction) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member RunTransaction :  * Microsoft.Hpc.Scheduler.Store.StoreTransaction -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.RunTransaction (token, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="transaction" Type="Microsoft.Hpc.Scheduler.Store.StoreTransaction" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="transaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SaveCertificate (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password, Nullable&lt;bool&gt; reusable, byte[] certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SaveCertificate(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password, valuetype System.Nullable`1&lt;bool&gt; reusable, unsigned int8[] certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SaveCertificate(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String,System.Nullable{System.Boolean},System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveCertificate (token As ConnectionToken, username As String, password As String, reusable As Nullable(Of Boolean), certificate As Byte()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SaveCertificate : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string * Nullable&lt;bool&gt; * byte[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SaveCertificate (token, username, password, reusable, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="reusable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificate" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <param name="password">To be added.</param>
        <param name="reusable">To be added.</param>
        <param name="certificate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveExtendedData">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SaveExtendedData (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string extendedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SaveExtendedData(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string extendedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SaveExtendedData(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveExtendedData (token As ConnectionToken, username As String, extendedData As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SaveExtendedData : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SaveExtendedData (token, username, extendedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="extendedData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <param name="extendedData">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchedulerAzureBurst_CreateDeployment">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SchedulerAzureBurst_CreateDeployment (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string deploymentId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SchedulerAzureBurst_CreateDeployment(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string deploymentId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SchedulerAzureBurst_CreateDeployment(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SchedulerAzureBurst_CreateDeployment (token As ConnectionToken, deploymentId As String, props As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SchedulerAzureBurst_CreateDeployment : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SchedulerAzureBurst_CreateDeployment (token, deploymentId, props)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="deploymentId" Type="System.String" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="deploymentId">To be added.</param>
        <param name="props">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchedulerAzureBurst_DeleteDeployment">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SchedulerAzureBurst_DeleteDeployment (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string deploymentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SchedulerAzureBurst_DeleteDeployment(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string deploymentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SchedulerAzureBurst_DeleteDeployment(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SchedulerAzureBurst_DeleteDeployment (token As ConnectionToken, deploymentId As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SchedulerAzureBurst_DeleteDeployment : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SchedulerAzureBurst_DeleteDeployment (token, deploymentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="deploymentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="deploymentId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleResource">
      <MemberSignature Language="C#" Value="public void ScheduleResource (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int resourceId, int jobId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleResource(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 resourceId, int32 jobId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] jobProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.ScheduleResource(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleResource (token As ConnectionToken, resourceId As Integer, jobId As Integer, jobProps As StoreProperty())" />
      <MemberSignature Language="F#" Value="abstract member ScheduleResource : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; unit" Usage="iSchedulerStoreInternal.ScheduleResource (token, resourceId, jobId, jobProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="resourceId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="jobProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="resourceId">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="jobProps">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchedulerOnAzure_AddUser">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_AddUser (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password, bool isAdmin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_AddUser(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password, bool isAdmin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SchedulerOnAzure_AddUser(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SchedulerOnAzure_AddUser (token As ConnectionToken, username As String, password As String, isAdmin As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SchedulerOnAzure_AddUser : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SchedulerOnAzure_AddUser (token, username, password, isAdmin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="isAdmin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <param name="password">To be added.</param>
        <param name="isAdmin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchedulerOnAzure_RemoveUser">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_RemoveUser (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_RemoveUser(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SchedulerOnAzure_RemoveUser(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SchedulerOnAzure_RemoveUser (token As ConnectionToken, username As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SchedulerOnAzure_RemoveUser : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SchedulerOnAzure_RemoveUser (token, username)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchedulerOnAzure_ValidateUser">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_ValidateUser (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SchedulerOnAzure_ValidateUser(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SchedulerOnAzure_ValidateUser(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SchedulerOnAzure_ValidateUser (token As ConnectionToken, username As String, password As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SchedulerOnAzure_ValidateUser : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SchedulerOnAzure_ValidateUser (token, username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClusterEnvironmentVariable">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SetClusterEnvironmentVariable (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SetClusterEnvironmentVariable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetClusterEnvironmentVariable(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetClusterEnvironmentVariable (token As ConnectionToken, name As String, value As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SetClusterEnvironmentVariable : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SetClusterEnvironmentVariable (token, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSetting">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SetConfigurationSetting (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SetConfigurationSetting(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetConfigurationSetting(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetConfigurationSetting (ByRef token As ConnectionToken, name As String, value As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSetting :  * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SetConfigurationSetting (token, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEmailCredential">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SetEmailCredential (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SetEmailCredential(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetEmailCredential(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEmailCredential (ByRef token As ConnectionToken, username As String, password As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SetEmailCredential :  * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SetEmailCredential (token, username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="username">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJobModifyFilter">
      <MemberSignature Language="C#" Value="public void SetJobModifyFilter (Microsoft.Hpc.Scheduler.Store.JobModifyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetJobModifyFilter(class Microsoft.Hpc.Scheduler.Store.JobModifyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetJobModifyFilter(Microsoft.Hpc.Scheduler.Store.JobModifyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetJobModifyFilter (filter As JobModifyFilter)" />
      <MemberSignature Language="F#" Value="abstract member SetJobModifyFilter : Microsoft.Hpc.Scheduler.Store.JobModifyFilter -&gt; unit" Usage="iSchedulerStoreInternal.SetJobModifyFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Microsoft.Hpc.Scheduler.Store.JobModifyFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeQueryCacheInvalidNotification">
      <MemberSignature Language="C#" Value="public void SetNodeQueryCacheInvalidNotification (Microsoft.Hpc.Scheduler.Store.NodeQueryCacheInvalidNotification handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNodeQueryCacheInvalidNotification(class Microsoft.Hpc.Scheduler.Store.NodeQueryCacheInvalidNotification handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetNodeQueryCacheInvalidNotification(Microsoft.Hpc.Scheduler.Store.NodeQueryCacheInvalidNotification)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNodeQueryCacheInvalidNotification (handler As NodeQueryCacheInvalidNotification)" />
      <MemberSignature Language="F#" Value="abstract member SetNodeQueryCacheInvalidNotification : Microsoft.Hpc.Scheduler.Store.NodeQueryCacheInvalidNotification -&gt; unit" Usage="iSchedulerStoreInternal.SetNodeQueryCacheInvalidNotification handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.NodeQueryCacheInvalidNotification" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNamePassword">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult SetUserNamePassword (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, byte[] password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult SetUserNamePassword(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, string userName, unsigned int8[] password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.SetUserNamePassword(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetUserNamePassword (token As ConnectionToken, userName As String, password As Byte()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member SetUserNamePassword : Microsoft.Hpc.Scheduler.Store.ConnectionToken * string * byte[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.SetUserNamePassword (token, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="userName">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_AddTasksToJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_AddTasksToJob (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobid, ref System.Collections.Generic.List&lt;int&gt; taskidList, System.Collections.Generic.List&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&gt; rgpropsList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_AddTasksToJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobid, class System.Collections.Generic.List`1&lt;int32&gt;&amp; taskidList, class System.Collections.Generic.List`1&lt;class Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&gt; rgpropsList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_AddTasksToJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{Microsoft.Hpc.Scheduler.Properties.StoreProperty[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_AddTasksToJob (ByRef token As ConnectionToken, jobid As Integer, ByRef taskidList As List(Of Integer), rgpropsList As List(Of StoreProperty())) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_AddTasksToJob :  * int *  * System.Collections.Generic.List&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&gt; -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_AddTasksToJob (token, jobid, taskidList, rgpropsList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobid" Type="System.Int32" />
        <Parameter Name="taskidList" Type="System.Collections.Generic.List&lt;System.Int32&gt;&amp;" RefType="ref" />
        <Parameter Name="rgpropsList" Type="System.Collections.Generic.List&lt;Microsoft.Hpc.Scheduler.Properties.StoreProperty[]&gt;" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobid">To be added.</param>
        <param name="taskidList">To be added.</param>
        <param name="rgpropsList">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_AddTaskToJob">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_AddTaskToJob (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, ref int taskId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] taskProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_AddTaskToJob(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32&amp; taskId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] taskProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_AddTaskToJob(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32@,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_AddTaskToJob (ByRef token As ConnectionToken, jobId As Integer, ByRef taskId As Integer, taskProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_AddTaskToJob :  * int *  * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_AddTaskToJob (token, jobId, taskId, taskProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="taskProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="taskProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_CancelTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_CancelTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int taskId, Microsoft.Hpc.Scheduler.Properties.CancelRequest request, int errorCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_CancelTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 taskId, valuetype Microsoft.Hpc.Scheduler.Properties.CancelRequest request, int32 errorCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_CancelTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.CancelRequest,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_CancelTask (ByRef token As ConnectionToken, jobId As Integer, taskId As Integer, request As CancelRequest, errorCode As Integer, message As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_CancelTask :  * int * int * Microsoft.Hpc.Scheduler.Properties.CancelRequest * int * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_CancelTask (token, jobId, taskId, request, errorCode, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="request" Type="Microsoft.Hpc.Scheduler.Properties.CancelRequest" />
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="request">To be added.</param>
        <param name="errorCode">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_CloneTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_CloneTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int taskId, ref int taskIdNew, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] taskProps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_CloneTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 taskId, int32&amp; taskIdNew, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] taskProps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_CloneTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32@,Microsoft.Hpc.Scheduler.Properties.StoreProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_CloneTask (ByRef token As ConnectionToken, taskId As Integer, ByRef taskIdNew As Integer, taskProps As StoreProperty()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_CloneTask :  * int *  * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_CloneTask (token, taskId, taskIdNew, taskProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="taskIdNew" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="taskProps" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="taskIdNew">To be added.</param>
        <param name="taskProps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_ConcludeServiceTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_ConcludeServiceTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int taskId, bool fCancelSubTasks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_ConcludeServiceTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 taskId, bool fCancelSubTasks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_ConcludeServiceTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_ConcludeServiceTask (ByRef token As ConnectionToken, taskId As Integer, fCancelSubTasks As Boolean) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_ConcludeServiceTask :  * int * bool -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_ConcludeServiceTask (token, taskId, fCancelSubTasks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="fCancelSubTasks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="fCancelSubTasks">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_ConfigTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_ConfigTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_ConfigTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_ConfigTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_ConfigTask (ByRef token As ConnectionToken, jobId As Integer, taskId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_ConfigTask :  * int * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_ConfigTask (token, jobId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_DeleteTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_DeleteTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_DeleteTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_DeleteTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_DeleteTask (ByRef token As ConnectionToken, jobId As Integer, taskId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_DeleteTask :  * int * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_DeleteTask (token, jobId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_ExpandParametricSweepTasksInBatch">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_ExpandParametricSweepTasksInBatch (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken _token, int taskId, int maxExpand, Microsoft.Hpc.Scheduler.Properties.TaskState expansionState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_ExpandParametricSweepTasksInBatch(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; _token, int32 taskId, int32 maxExpand, valuetype Microsoft.Hpc.Scheduler.Properties.TaskState expansionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_ExpandParametricSweepTasksInBatch(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.TaskState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_ExpandParametricSweepTasksInBatch (ByRef _token As ConnectionToken, taskId As Integer, maxExpand As Integer, expansionState As TaskState) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_ExpandParametricSweepTasksInBatch :  * int * int * Microsoft.Hpc.Scheduler.Properties.TaskState -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_ExpandParametricSweepTasksInBatch (_token, taskId, maxExpand, expansionState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="maxExpand" Type="System.Int32" />
        <Parameter Name="expansionState" Type="Microsoft.Hpc.Scheduler.Properties.TaskState" />
      </Parameters>
      <Docs>
        <param name="_token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="maxExpand">To be added.</param>
        <param name="expansionState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_FindJobTasksWithEnvVars">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_FindJobTasksWithEnvVars (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out int[] taskIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_FindJobTasksWithEnvVars(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, [out] int32[]&amp; taskIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_FindJobTasksWithEnvVars(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_FindJobTasksWithEnvVars (ByRef token As ConnectionToken, jobId As Integer, ByRef taskIds As Integer()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_FindJobTasksWithEnvVars :  * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_FindJobTasksWithEnvVars (token, jobId, taskIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskIds" Type="System.Int32[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_FindTaskByTaskId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskByTaskId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, Microsoft.Hpc.Scheduler.Properties.TaskId taskId, out int taskSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskByTaskId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, class Microsoft.Hpc.Scheduler.Properties.TaskId taskId, [out] int32&amp; taskSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_FindTaskByTaskId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,Microsoft.Hpc.Scheduler.Properties.TaskId,System.Int32@)" />
      <MemberSignature Language="F#" Value="abstract member Task_FindTaskByTaskId :  * int * Microsoft.Hpc.Scheduler.Properties.TaskId *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_FindTaskByTaskId (token, jobId, taskId, taskSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="Microsoft.Hpc.Scheduler.Properties.TaskId" />
        <Parameter Name="taskSystemId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="taskSystemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_FindTaskIdByFriendlyId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskIdByFriendlyId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int jobTaskId, ref int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskIdByFriendlyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 jobTaskId, int32&amp; taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_FindTaskIdByFriendlyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_FindTaskIdByFriendlyId (ByRef token As ConnectionToken, jobId As Integer, jobTaskId As Integer, ByRef taskId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_FindTaskIdByFriendlyId :  * int * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_FindTaskIdByFriendlyId (token, jobId, jobTaskId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="jobTaskId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="jobTaskId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_FindTaskIdByFriendlyId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskIdByFriendlyId (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, string niceId, ref int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_FindTaskIdByFriendlyId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, string niceId, int32&amp; taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_FindTaskIdByFriendlyId(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_FindTaskIdByFriendlyId (ByRef token As ConnectionToken, jobId As Integer, niceId As String, ByRef taskId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_FindTaskIdByFriendlyId :  * int * string *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_FindTaskIdByFriendlyId (token, jobId, niceId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Name="Task_FindTaskIdByFriendlyIdByString")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="niceId" Type="System.String" />
        <Parameter Name="taskId" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="niceId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_GetEnvironmentVariables (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int taskId, out System.Collections.Generic.Dictionary&lt;string,string&gt; dict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_GetEnvironmentVariables(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 taskId, [out] class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&amp; dict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_GetEnvironmentVariables(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_GetEnvironmentVariables (ByRef token As ConnectionToken, taskId As Integer, ByRef dict As Dictionary(Of String, String)) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_GetEnvironmentVariables :  * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_GetEnvironmentVariables (token, taskId, dict)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="dict" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="dict">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_SetEnvironmentVariable (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int taskId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_SetEnvironmentVariable(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 taskId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_SetEnvironmentVariable(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_SetEnvironmentVariable (ByRef token As ConnectionToken, taskId As Integer, name As String, value As String) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_SetEnvironmentVariable :  * int * string * string -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_SetEnvironmentVariable (token, taskId, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_SubmitTask">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_SubmitTask (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_SubmitTask(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_SubmitTask(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_SubmitTask (ByRef token As ConnectionToken, jobId As Integer, taskId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_SubmitTask :  * int * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_SubmitTask (token, jobId, taskId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_SubmitTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_SubmitTasks (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int[] taskIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_SubmitTasks(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32[] taskIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_SubmitTasks(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_SubmitTasks (ByRef token As ConnectionToken, jobId As Integer, taskIds As Integer()) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_SubmitTasks :  * int * int[] -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_SubmitTasks (token, jobId, taskIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="taskIds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="taskIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task_ValidateTaskId">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult Task_ValidateTaskId (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int taskId, out int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult Task_ValidateTaskId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 taskId, [out] int32&amp; jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Task_ValidateTaskId(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Task_ValidateTaskId (token As ConnectionToken, taskId As Integer, ByRef jobId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member Task_ValidateTaskId : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.Task_ValidateTaskId (token, taskId, jobId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="taskId">To be added.</param>
        <param name="jobId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_AddParent">
      <MemberSignature Language="C#" Value="public void TaskGroup_AddParent (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int groupId, int parentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_AddParent(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, int32 groupId, int32 parentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_AddParent(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_AddParent (token As ConnectionToken, jobId As Integer, groupId As Integer, parentId As Integer)" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_AddParent : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * int -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_AddParent (token, jobId, groupId, parentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="parentId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="parentId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_CreateChild">
      <MemberSignature Language="C#" Value="public void TaskGroup_CreateChild (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int parentId, Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props, out int childId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_CreateChild(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, int32 parentId, class Microsoft.Hpc.Scheduler.Properties.StoreProperty[] props, [out] int32&amp; childId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_CreateChild(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32,Microsoft.Hpc.Scheduler.Properties.StoreProperty[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_CreateChild (token As ConnectionToken, jobId As Integer, parentId As Integer, props As StoreProperty(), ByRef childId As Integer)" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_CreateChild : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int * Microsoft.Hpc.Scheduler.Properties.StoreProperty[] *  -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_CreateChild (token, jobId, parentId, props, childId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="parentId" Type="System.Int32" />
        <Parameter Name="props" Type="Microsoft.Hpc.Scheduler.Properties.StoreProperty[]" />
        <Parameter Name="childId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="parentId">To be added.</param>
        <param name="props">To be added.</param>
        <param name="childId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_CreateTaskGroupsAndDependencies">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult TaskGroup_CreateTaskGroupsAndDependencies (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, System.Collections.Generic.List&lt;string&gt; newGroups, System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;int,int&gt;&gt; newDependencies, int groupIdBase, out System.Collections.Generic.List&lt;int&gt; newGroupIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult TaskGroup_CreateTaskGroupsAndDependencies(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, class System.Collections.Generic.List`1&lt;string&gt; newGroups, class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int32, int32&gt;&gt; newDependencies, int32 groupIdBase, [out] class System.Collections.Generic.List`1&lt;int32&gt;&amp; newGroupIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_CreateTaskGroupsAndDependencies(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}},System.Int32,System.Collections.Generic.List{System.Int32}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TaskGroup_CreateTaskGroupsAndDependencies (ByRef token As ConnectionToken, jobId As Integer, newGroups As List(Of String), newDependencies As List(Of KeyValuePair(Of Integer, Integer)), groupIdBase As Integer, ByRef newGroupIds As List(Of Integer)) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_CreateTaskGroupsAndDependencies :  * int * System.Collections.Generic.List&lt;string&gt; * System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;int, int&gt;&gt; * int *  -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.TaskGroup_CreateTaskGroupsAndDependencies (token, jobId, newGroups, newDependencies, groupIdBase, newGroupIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="newGroups" Type="System.Collections.Generic.List&lt;System.String&gt;" />
        <Parameter Name="newDependencies" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.Int32,System.Int32&gt;&gt;" />
        <Parameter Name="groupIdBase" Type="System.Int32" />
        <Parameter Name="newGroupIds" Type="System.Collections.Generic.List&lt;System.Int32&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="newGroups">To be added.</param>
        <param name="newDependencies">To be added.</param>
        <param name="groupIdBase">To be added.</param>
        <param name="newGroupIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_DeleteGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Store.CallResult TaskGroup_DeleteGroup (ref Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Store.CallResult TaskGroup_DeleteGroup(class Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp; token, int32 jobId, int32 groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_DeleteGroup(Microsoft.Hpc.Scheduler.Store.ConnectionToken@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TaskGroup_DeleteGroup (ByRef token As ConnectionToken, jobId As Integer, groupId As Integer) As CallResult" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_DeleteGroup :  * int * int -&gt; Microsoft.Hpc.Scheduler.Store.CallResult" Usage="iSchedulerStoreInternal.TaskGroup_DeleteGroup (token, jobId, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Store.CallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken&amp;" RefType="ref" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="groupId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_FetchGroups">
      <MemberSignature Language="C#" Value="public void TaskGroup_FetchGroups (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;int,int&gt;&gt; tree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_FetchGroups(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, [out] class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int32, int32&gt;&gt;&amp; tree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_FetchGroups(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_FetchGroups (token As ConnectionToken, jobId As Integer, ByRef tree As List(Of KeyValuePair(Of Integer, Integer)))" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_FetchGroups : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_FetchGroups (token, jobId, tree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="tree" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.Int32,System.Int32&gt;&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="tree">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_FetchStatistics">
      <MemberSignature Language="C#" Value="public void TaskGroup_FetchStatistics (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, out System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;int,System.Collections.Generic.KeyValuePair&lt;int,int&gt;&gt;&gt; groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_FetchStatistics(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, [out] class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int32, valuetype System.Collections.Generic.KeyValuePair`2&lt;int32, int32&gt;&gt;&gt;&amp; groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_FetchStatistics(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}}}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_FetchStatistics (token As ConnectionToken, jobId As Integer, ByRef groups As List(Of KeyValuePair(Of Integer, KeyValuePair(Of Integer, Integer))))" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_FetchStatistics : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int *  -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_FetchStatistics (token, jobId, groups)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="groups" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.Int32,System.Collections.Generic.KeyValuePair&lt;System.Int32,System.Int32&gt;&gt;&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="groups">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_UpdateGroupMaxMin">
      <MemberSignature Language="C#" Value="public void TaskGroup_UpdateGroupMaxMin (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, int groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_UpdateGroupMaxMin(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, int32 groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_UpdateGroupMaxMin(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_UpdateGroupMaxMin (token As ConnectionToken, jobId As Integer, groupId As Integer)" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_UpdateGroupMaxMin : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * int -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_UpdateGroupMaxMin (token, jobId, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="groupId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskGroup_UpdateGroupsMaxMin">
      <MemberSignature Language="C#" Value="public void TaskGroup_UpdateGroupsMaxMin (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int jobId, System.Collections.Generic.IList&lt;int&gt; groupIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TaskGroup_UpdateGroupsMaxMin(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 jobId, class System.Collections.Generic.IList`1&lt;int32&gt; groupIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.TaskGroup_UpdateGroupsMaxMin(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.Collections.Generic.IList{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub TaskGroup_UpdateGroupsMaxMin (token As ConnectionToken, jobId As Integer, groupIds As IList(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member TaskGroup_UpdateGroupsMaxMin : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * System.Collections.Generic.IList&lt;int&gt; -&gt; unit" Usage="iSchedulerStoreInternal.TaskGroup_UpdateGroupsMaxMin (token, jobId, groupIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="groupIds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (Microsoft.Hpc.Scheduler.Store.ConnectionToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Unregister(Microsoft.Hpc.Scheduler.Store.ConnectionToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (token As ConnectionToken)" />
      <MemberSignature Language="F#" Value="abstract member Unregister : Microsoft.Hpc.Scheduler.Store.ConnectionToken -&gt; unit" Usage="iSchedulerStoreInternal.Unregister token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterConfigChangeHandler">
      <MemberSignature Language="C#" Value="public void UnRegisterConfigChangeHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterConfigChangeHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterConfigChangeHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterConfigChangeHandler (token As ConnectionToken, handler As ClusterConfigChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterConfigChangeHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterConfigChangeHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ClusterConfigChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterEventPacketHandler">
      <MemberSignature Language="C#" Value="public void UnRegisterEventPacketHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterEventPacketHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterEventPacketHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterEventPacketHandler (token As ConnectionToken, handler As ProcessEventPacketDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterEventPacketHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterEventPacketHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ProcessEventPacketDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterJobStateHandler">
      <MemberSignature Language="C#" Value="public void UnRegisterJobStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterJobStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterJobStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterJobStateHandler (token As ConnectionToken, handler As JobStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterJobStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterJobStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterJobStateHandlerEx">
      <MemberSignature Language="C#" Value="public void UnRegisterJobStateHandlerEx (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterJobStateHandlerEx(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterJobStateHandlerEx(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterJobStateHandlerEx (token As ConnectionToken, handler As JobStateChangeDelegateEx)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterJobStateHandlerEx : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterJobStateHandlerEx (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.JobStateChangeDelegateEx" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterNodeStateHandler">
      <MemberSignature Language="C#" Value="public void UnRegisterNodeStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterNodeStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterNodeStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterNodeStateHandler (token As ConnectionToken, handler As NodeStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterNodeStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterNodeStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.NodeStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterResourceStateHandler">
      <MemberSignature Language="C#" Value="public void UnRegisterResourceStateHandler (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterResourceStateHandler(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterResourceStateHandler(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterResourceStateHandler (token As ConnectionToken, handler As ResourceStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterResourceStateHandler : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterResourceStateHandler (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.ResourceStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterTaskStateChange">
      <MemberSignature Language="C#" Value="public void UnRegisterTaskStateChange (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterTaskStateChange(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, class Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UnRegisterTaskStateChange(Microsoft.Hpc.Scheduler.Store.ConnectionToken,Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterTaskStateChange (token As ConnectionToken, handler As TaskStateChangeDelegate)" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterTaskStateChange : Microsoft.Hpc.Scheduler.Store.ConnectionToken * Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate -&gt; unit" Usage="iSchedulerStoreInternal.UnRegisterTaskStateChange (token, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="handler" Type="Microsoft.Hpc.Scheduler.Store.TaskStateChangeDelegate" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateNodePingTime">
      <MemberSignature Language="C#" Value="public void UpdateNodePingTime (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int nodeId, DateTime pingTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateNodePingTime(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 nodeId, valuetype System.DateTime pingTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.UpdateNodePingTime(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateNodePingTime (token As ConnectionToken, nodeId As Integer, pingTime As DateTime)" />
      <MemberSignature Language="F#" Value="abstract member UpdateNodePingTime : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int * DateTime -&gt; unit" Usage="iSchedulerStoreInternal.UpdateNodePingTime (token, nodeId, pingTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="nodeId" Type="System.Int32" />
        <Parameter Name="pingTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="nodeId">To be added.</param>
        <param name="pingTime">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProfileId">
      <MemberSignature Language="C#" Value="public bool VerifyProfileId (Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int profileId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyProfileId(class Microsoft.Hpc.Scheduler.Store.ConnectionToken token, int32 profileId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.VerifyProfileId(Microsoft.Hpc.Scheduler.Store.ConnectionToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyProfileId (token As ConnectionToken, profileId As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member VerifyProfileId : Microsoft.Hpc.Scheduler.Store.ConnectionToken * int -&gt; bool" Usage="iSchedulerStoreInternal.VerifyProfileId (token, profileId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Hpc.ExceptionWrapper))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Hpc.Scheduler.Store.ConnectionToken" />
        <Parameter Name="profileId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="profileId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>