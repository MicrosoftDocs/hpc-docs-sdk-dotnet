<Type Name="Tree" FullName="Microsoft.Hpc.Scheduler.Store.Tree">
  <TypeSignature Language="C#" Value="public static class Tree" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Tree extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Hpc.Scheduler.Store.Tree" />
  <TypeSignature Language="VB.NET" Value="Public Module Tree" />
  <TypeSignature Language="F#" Value="type Tree = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExpandSubTree&lt;TNode,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; ExpandSubTree&lt;TNode,TResult&gt; (this TNode root, Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt; getChildren, Func&lt;TNode,TResult&gt; valueSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExpandSubTree&lt;TNode, TResult&gt;(!!TNode root, class System.Func`2&lt;!!TNode, class System.Collections.Generic.IEnumerable`1&lt;!!TNode&gt;&gt; getChildren, class System.Func`2&lt;!!TNode, !!TResult&gt; valueSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandSubTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function ExpandSubTree(Of TNode, TResult) (root As TNode, getChildren As Func(Of TNode, IEnumerable(Of TNode)), valueSelector As Func(Of TNode, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="F#" Value="static member ExpandSubTree : 'Node * Func&lt;'Node, seq&lt;'Node&gt;&gt; * Func&lt;'Node, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="Microsoft.Hpc.Scheduler.Store.Tree.ExpandSubTree (root, getChildren, valueSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Hpc.Scheduler.Store.Tree/&lt;ExpandSubTree&gt;d__0`2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNode" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="root" Type="TNode" RefType="this" />
        <Parameter Name="getChildren" Type="System.Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt;" />
        <Parameter Name="valueSelector" Type="System.Func&lt;TNode,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNode">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="root">To be added.</param>
        <param name="getChildren">To be added.</param>
        <param name="valueSelector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandTree&lt;TNode,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; ExpandTree&lt;TNode,TResult&gt; (this TNode root, Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt; getChildren, Func&lt;TNode,TResult&gt; valueSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExpandTree&lt;TNode, TResult&gt;(!!TNode root, class System.Func`2&lt;!!TNode, class System.Collections.Generic.IEnumerable`1&lt;!!TNode&gt;&gt; getChildren, class System.Func`2&lt;!!TNode, !!TResult&gt; valueSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.Store.Tree.ExpandTree``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function ExpandTree(Of TNode, TResult) (root As TNode, getChildren As Func(Of TNode, IEnumerable(Of TNode)), valueSelector As Func(Of TNode, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="F#" Value="static member ExpandTree : 'Node * Func&lt;'Node, seq&lt;'Node&gt;&gt; * Func&lt;'Node, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="Microsoft.Hpc.Scheduler.Store.Tree.ExpandTree (root, getChildren, valueSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler.Store</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Hpc.Scheduler.Store.Tree/&lt;ExpandTree&gt;d__1`2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNode" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="root" Type="TNode" RefType="this" />
        <Parameter Name="getChildren" Type="System.Func&lt;TNode,System.Collections.Generic.IEnumerable&lt;TNode&gt;&gt;" />
        <Parameter Name="valueSelector" Type="System.Func&lt;TNode,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNode">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="root">To be added.</param>
        <param name="getChildren">To be added.</param>
        <param name="valueSelector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>