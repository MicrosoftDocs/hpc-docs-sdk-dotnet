<Type Name="ISortCollection" FullName="Microsoft.Hpc.Scheduler.ISortCollection">
  <TypeSignature Language="C#" Value="public interface ISortCollection : Microsoft.Hpc.Scheduler.ISchedulerCollection, System.Collections.Generic.ICollection&lt;Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISortCollection implements class Microsoft.Hpc.Scheduler.ISchedulerCollection, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Hpc.Scheduler.ISortCollection" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISortCollection&#xA;Implements ICollection, ICollection(Of SortProperty), IEnumerable(Of SortProperty), ISchedulerCollection" />
  <TypeSignature Language="F#" Value="type ISortCollection = interface&#xA;    interface ISchedulerCollection&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICollection&lt;SortProperty&gt;&#xA;    interface seq&lt;SortProperty&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Hpc.Scheduler.ISchedulerCollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.Properties.SortProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3f5253c6-64a1-4148-aa2c-13aa66040a80")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines a collection of sort property objects used to sort the results when retrieving jobs, task, and nodes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder order, Microsoft.Hpc.Scheduler.Properties.PropertyId propertyId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype Microsoft.Hpc.Scheduler.Properties.SortProperty/SortOrder order, class Microsoft.Hpc.Scheduler.Properties.PropertyId propertyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.ISortCollection.Add(Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder,Microsoft.Hpc.Scheduler.Properties.PropertyId)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder * Microsoft.Hpc.Scheduler.Properties.PropertyId -&gt; unit" Usage="iSortCollection.Add (order, propertyId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.Hpc.Scheduler.Properties.SortProperty+SortOrder" />
        <Parameter Name="propertyId" Type="Microsoft.Hpc.Scheduler.Properties.PropertyId" />
      </Parameters>
      <Docs>
        <param name="order">The order in which the results are returned (for example, ascending or descending). For possible values, see the <see cref="T:Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder"></see> enumeration.</param>
        <param name="propertyId">A <see cref="T:Microsoft.Hpc.Scheduler.Properties.PropertyId"></see> object that uniquely identifies the property used to sort the results.</param>
        <summary>Adds a sort item to the collection using the specified operator and property object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder order, Microsoft.Hpc.Scheduler.PropId propId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype Microsoft.Hpc.Scheduler.Properties.SortProperty/SortOrder order, valuetype Microsoft.Hpc.Scheduler.PropId propId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.ISortCollection.Add(Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder,Microsoft.Hpc.Scheduler.PropId)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder * Microsoft.Hpc.Scheduler.PropId -&gt; unit" Usage="iSortCollection.Add (order, propId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.Hpc.Scheduler.Properties.SortProperty+SortOrder" />
        <Parameter Name="propId" Type="Microsoft.Hpc.Scheduler.PropId" />
      </Parameters>
      <Docs>
        <param name="order">The order in which the results are returned (for example, ascending or descending). For possible values, see the <see cref="T:Microsoft.Hpc.Scheduler.Properties.SortProperty.SortOrder"></see> enumeration.</param>
        <param name="propId">An identifier that uniquely identifies the property used to sort the results. For possible values, see <see cref="T:Microsoft.Hpc.Scheduler.PropId"></see> enumeration.</param>
        <summary>Adds a sort item to the collection using the specified operator and property identifier.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.ISortCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iSortCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Hpc.Scheduler.ISchedulerCollection.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all items from the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Hpc.Scheduler.ISortCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Hpc.Scheduler.ISortCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Hpc.Scheduler.ISchedulerCollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the number of items in the collection.</summary>
        <value>The number of items in the collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.ISortCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iSortCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Hpc.Scheduler.ISchedulerCollection.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an enumerator that you can use to enumerate the items in the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator"></see> interface that you use to enumerate the filters in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSorts">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Properties.SortProperty[] GetSorts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Hpc.Scheduler.Properties.SortProperty[] GetSorts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.ISortCollection.GetSorts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSorts () As SortProperty()" />
      <MemberSignature Language="F#" Value="abstract member GetSorts : unit -&gt; Microsoft.Hpc.Scheduler.Properties.SortProperty[]" Usage="iSortCollection.GetSorts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Properties.SortProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array of the sort items from the collection.</summary>
        <returns>An array of <see cref="T:Microsoft.Hpc.Scheduler.Properties.SortProperty"></see> objects that define the sort items in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Hpc.Scheduler.Properties.SortProperty this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Hpc.Scheduler.Properties.SortProperty Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Hpc.Scheduler.ISortCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SortProperty" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.Hpc.Scheduler.Properties.SortProperty" Usage="Microsoft.Hpc.Scheduler.ISortCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Hpc.Scheduler.Properties.SortProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the sort item to retrieve from the collection</param>
        <summary>Retrieves the specified sort item from the collection</summary>
        <value>A <see cref="T:Microsoft.Hpc.Scheduler.Properties.SortProperty"></see> object that defines the sort item.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>