<Type Name="INameValueCollection" FullName="Microsoft.Hpc.Scheduler.INameValueCollection">
  <TypeSignature Language="C#" Value="public interface INameValueCollection : Microsoft.Hpc.Scheduler.ISchedulerCollection, System.Collections.Generic.ICollection&lt;Microsoft.Hpc.Scheduler.NameValue&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.NameValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameValueCollection implements class Microsoft.Hpc.Scheduler.ISchedulerCollection, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Hpc.Scheduler.NameValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Hpc.Scheduler.NameValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Hpc.Scheduler.INameValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameValueCollection&#xA;Implements ICollection, ICollection(Of NameValue), IEnumerable(Of NameValue), ISchedulerCollection" />
  <TypeSignature Language="F#" Value="type INameValueCollection = interface&#xA;    interface ISchedulerCollection&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICollection&lt;NameValue&gt;&#xA;    interface seq&lt;NameValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Hpc.Scheduler.ISchedulerCollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Hpc.Scheduler.NameValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Hpc.Scheduler.NameValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BB14B74B-0BB7-4A01-8E05-A988D636B5EA")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of name/value pairs.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNameValue">
      <MemberSignature Language="C#" Value="public void AddNameValue (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNameValue(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.INameValueCollection.AddNameValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNameValue (name As String, value As String)" />
      <MemberSignature Language="F#" Value="abstract member AddNameValue : string * string -&gt; unit" Usage="iNameValueCollection.AddNameValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name.</param>
        <param name="value">The value.</param>
        <summary>Adds a name/value pair to the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Hpc.Scheduler.INameValueCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Hpc.Scheduler.INameValueCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Hpc.Scheduler.ISchedulerCollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the number of items in the collection.</summary>
        <value>The number of items.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Hpc.Scheduler.INameValueCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iNameValueCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Hpc.Scheduler.ISchedulerCollection.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Hpc.Scheduler</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an enumerator that you can use to enumerate the name/value pairs in the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator"></see> interface that you use to enumerate the name/value pairs in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>